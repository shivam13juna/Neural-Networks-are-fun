// Generated by view binder compiler. Do not edit!
package com.actiontracker.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.actiontracker.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWallpaperBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnApplyWallpaper;

  @NonNull
  public final Button btnChooseImage;

  @NonNull
  public final Button btnRemoveWallpaper;

  @NonNull
  public final ImageView wallpaperPreview;

  private ActivityWallpaperBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnApplyWallpaper, @NonNull Button btnChooseImage,
      @NonNull Button btnRemoveWallpaper, @NonNull ImageView wallpaperPreview) {
    this.rootView = rootView;
    this.btnApplyWallpaper = btnApplyWallpaper;
    this.btnChooseImage = btnChooseImage;
    this.btnRemoveWallpaper = btnRemoveWallpaper;
    this.wallpaperPreview = wallpaperPreview;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWallpaperBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWallpaperBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_wallpaper, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWallpaperBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_apply_wallpaper;
      Button btnApplyWallpaper = ViewBindings.findChildViewById(rootView, id);
      if (btnApplyWallpaper == null) {
        break missingId;
      }

      id = R.id.btn_choose_image;
      Button btnChooseImage = ViewBindings.findChildViewById(rootView, id);
      if (btnChooseImage == null) {
        break missingId;
      }

      id = R.id.btn_remove_wallpaper;
      Button btnRemoveWallpaper = ViewBindings.findChildViewById(rootView, id);
      if (btnRemoveWallpaper == null) {
        break missingId;
      }

      id = R.id.wallpaper_preview;
      ImageView wallpaperPreview = ViewBindings.findChildViewById(rootView, id);
      if (wallpaperPreview == null) {
        break missingId;
      }

      return new ActivityWallpaperBinding((LinearLayout) rootView, btnApplyWallpaper,
          btnChooseImage, btnRemoveWallpaper, wallpaperPreview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
