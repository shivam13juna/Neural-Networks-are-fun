// Generated by view binder compiler. Do not edit!
package com.actiontracker.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.actiontracker.app.R;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnChangeColorPalette;

  @NonNull
  public final Button btnSetWallpaper;

  @NonNull
  public final MaterialToolbar toolbarSettings;

  private ActivitySettingsBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnChangeColorPalette, @NonNull Button btnSetWallpaper,
      @NonNull MaterialToolbar toolbarSettings) {
    this.rootView = rootView;
    this.btnChangeColorPalette = btnChangeColorPalette;
    this.btnSetWallpaper = btnSetWallpaper;
    this.toolbarSettings = toolbarSettings;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_change_color_palette;
      Button btnChangeColorPalette = ViewBindings.findChildViewById(rootView, id);
      if (btnChangeColorPalette == null) {
        break missingId;
      }

      id = R.id.btn_set_wallpaper;
      Button btnSetWallpaper = ViewBindings.findChildViewById(rootView, id);
      if (btnSetWallpaper == null) {
        break missingId;
      }

      id = R.id.toolbar_settings;
      MaterialToolbar toolbarSettings = ViewBindings.findChildViewById(rootView, id);
      if (toolbarSettings == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((LinearLayout) rootView, btnChangeColorPalette,
          btnSetWallpaper, toolbarSettings);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
