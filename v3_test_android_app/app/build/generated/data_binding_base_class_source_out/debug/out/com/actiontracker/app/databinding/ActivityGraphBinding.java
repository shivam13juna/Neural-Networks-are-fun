// Generated by view binder compiler. Do not edit!
package com.actiontracker.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.actiontracker.app.R;
import com.github.mikephil.charting.charts.LineChart;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGraphBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnEndDate;

  @NonNull
  public final Button btnShowGraph;

  @NonNull
  public final Button btnStartDate;

  @NonNull
  public final LineChart lineChart;

  @NonNull
  public final MaterialToolbar toolbarGraph;

  private ActivityGraphBinding(@NonNull LinearLayout rootView, @NonNull Button btnEndDate,
      @NonNull Button btnShowGraph, @NonNull Button btnStartDate, @NonNull LineChart lineChart,
      @NonNull MaterialToolbar toolbarGraph) {
    this.rootView = rootView;
    this.btnEndDate = btnEndDate;
    this.btnShowGraph = btnShowGraph;
    this.btnStartDate = btnStartDate;
    this.lineChart = lineChart;
    this.toolbarGraph = toolbarGraph;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGraphBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGraphBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_graph, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGraphBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_end_date;
      Button btnEndDate = ViewBindings.findChildViewById(rootView, id);
      if (btnEndDate == null) {
        break missingId;
      }

      id = R.id.btn_show_graph;
      Button btnShowGraph = ViewBindings.findChildViewById(rootView, id);
      if (btnShowGraph == null) {
        break missingId;
      }

      id = R.id.btn_start_date;
      Button btnStartDate = ViewBindings.findChildViewById(rootView, id);
      if (btnStartDate == null) {
        break missingId;
      }

      id = R.id.line_chart;
      LineChart lineChart = ViewBindings.findChildViewById(rootView, id);
      if (lineChart == null) {
        break missingId;
      }

      id = R.id.toolbar_graph;
      MaterialToolbar toolbarGraph = ViewBindings.findChildViewById(rootView, id);
      if (toolbarGraph == null) {
        break missingId;
      }

      return new ActivityGraphBinding((LinearLayout) rootView, btnEndDate, btnShowGraph,
          btnStartDate, lineChart, toolbarGraph);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
