androidx.appcompat.widget.ContentFrameLayout
androidx.room.RoomWarnings
androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1
com.google.android.material.timepicker.ClockHandView
androidx.room.IMultiInstanceInvalidationCallback
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
androidx.room.Database
androidx.appcompat.app.AlertController$RecycleListView
androidx.room.ForeignKey$Action
com.google.android.material.floatingactionbutton.FloatingActionButton
androidx.savedstate.Recreator
androidx.room.TypeConverter
androidx.room.OnConflictStrategy$Companion
androidx.room.util.FtsTableInfo$Companion
androidx.room.QueryInterceptorOpenHelper
androidx.room.RoomDatabaseKt
androidx.room.util.TableInfo$Index
androidx.appcompat.widget.Toolbar
com.actiontracker.app.data.AppDatabase
androidx.appcompat.widget.ActionBarOverlayLayout
androidx.room.util.TableInfo
androidx.lifecycle.ProcessLifecycleInitializer
androidx.room.RoomOpenHelper$Companion
androidx.room.EntityDeletionOrUpdateAdapter
androidx.room.util.ViewInfo$Companion
androidx.room.EntityInsertionAdapter
androidx.room.IMultiInstanceInvalidationService$Stub
com.actiontracker.app.ui.SettingsActivity
androidx.room.RenameColumn
androidx.room.MultiInstanceInvalidationClient$serviceConnection$1
androidx.room.DelegatingOpenHelper
com.google.android.material.internal.NavigationMenuItemView
androidx.room.RoomDatabase$Companion
androidx.room.Junction
com.google.android.material.internal.NavigationMenuView
androidx.room.RoomDatabase$MigrationContainer
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
androidx.room.MultiInstanceInvalidationClient$1
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$insert$1
com.google.android.material.search.SearchBar$ScrollingViewBehavior
androidx.room.FtsOptions$MatchInfo
androidx.room.SQLiteCopyOpenHelper$createFrameworkOpenHelper$configuration$1
com.google.android.material.datepicker.MaterialCalendar
com.google.android.material.datepicker.MaterialCalendarGridView
com.google.android.material.transformation.FabTransformationScrimBehavior
androidx.fragment.app.FragmentManager$6
com.google.android.material.button.MaterialButtonToggleGroup
com.google.android.material.sidesheet.SideSheetBehavior
androidx.constraintlayout.widget.Barrier
androidx.room.ColumnInfo
androidx.room.util.TableInfo$Column
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$maximumSize$1
androidx.room.RoomDatabase$PrepackagedDatabaseCallback
androidx.room.QueryInterceptorStatement
androidx.room.RoomSQLiteQuery$Companion
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1
androidx.room.AmbiguousColumnResolver$Solution
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$1
androidx.room.Fts4
androidx.room.ExperimentalRoomApi
androidx.fragment.app.FragmentContainerView
androidx.appcompat.widget.ActionBarContextView
androidx.room.QueryInterceptorDatabase
androidx.room.InvalidationTracker$refreshRunnable$1
com.actiontracker.app.data.AppDatabase_Impl
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$2
androidx.room.BuiltInTypeConverters$State
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1
androidx.room.util.TableInfo$Companion
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setLocale$1
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$1
com.actiontracker.app.ui.MainActivity
androidx.room.CoroutinesRoom$Companion
androidx.annotation.Keep
androidx.room.RewriteQueriesToDropUnusedColumns
androidx.room.Update
androidx.room.Relation
androidx.room.DatabaseView
androidx.room.QueryInterceptorOpenHelperFactory
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
androidx.versionedparcelable.ParcelImpl
androidx.emoji2.text.EmojiCompatInitializer$1
com.google.android.material.datepicker.MaterialTextInputPicker
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1
com.google.android.material.appbar.MaterialToolbar
androidx.room.util.ViewInfo
androidx.appcompat.widget.ActivityChooserView$InnerLayout
androidx.room.DatabaseConfiguration
com.google.android.material.textfield.TextInputEditText
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1
androidx.room.InvalidationTracker$ObserverWrapper
com.google.android.material.transformation.FabTransformationBehavior
androidx.appcompat.widget.DialogTitle
androidx.room.MultiInstanceInvalidationService$callbackList$1
com.google.android.material.timepicker.TimePickerView
androidx.room.EntityUpsertionAdapter
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.emoji2.text.EmojiCompatInitializer
androidx.room.QueryInterceptorProgram
androidx.room.MultiInstanceInvalidationService
androidx.room.Delete
androidx.activity.ComponentActivity$5
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
androidx.room.MultiInstanceInvalidationService$binder$1
androidx.viewpager2.adapter.FragmentStateAdapter$2
androidx.activity.ComponentActivity$4
androidx.room.CoroutinesRoom$Companion$execute$4$job$1
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1
androidx.room.AutoCloser
androidx.room.RoomDatabase$beginTransaction$1
androidx.lifecycle.DefaultLifecycleObserverAdapter
com.google.android.material.transformation.FabTransformationSheetBehavior
androidx.room.ProvidedTypeConverter
androidx.room.util.TableInfo$ForeignKey
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy
androidx.room.ColumnInfo$Companion
androidx.room.util.FileUtil
androidx.room.RoomSQLiteQuery$Binding
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1
com.google.android.material.internal.CheckableImageButton
androidx.room.SkipQueryVerification
androidx.room.RoomDatabase$QueryCallback
androidx.room.AutoCloser$Companion
androidx.appcompat.widget.SearchView$SearchAutoComplete
androidx.room.RenameColumn$Entries
androidx.room.migration.AutoMigrationSpec
androidx.coordinatorlayout.widget.CoordinatorLayout
androidx.room.ColumnInfo$Collate
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.room.AmbiguousColumnResolver$ResultColumn
androidx.room.util.TableInfo$ForeignKeyWithSequence
androidx.room.util.CursorUtil$wrapMappedColumns$2
androidx.room.MultiInstanceInvalidationClient$callback$1
androidx.room.AmbiguousColumnResolver$resolve$1$1
com.actiontracker.app.ActionTrackerApplication
androidx.room.RoomDatabase
androidx.room.SharedSQLiteStatement
androidx.room.InvalidationTracker$Companion
androidx.core.app.CoreComponentFactory
androidx.room.RoomMasterTable
androidx.room.TransactionElement
com.google.android.material.theme.MaterialComponentsViewInflater
kotlin.coroutines.jvm.internal.BaseContinuationImpl
androidx.room.Embedded
androidx.room.InvalidationTracker$ObservedTableTracker$Companion
androidx.room.AutoMigration
com.google.android.material.search.SearchView$Behavior
androidx.room.RoomDatabase$JournalMode
com.google.android.material.textfield.TextInputLayout
androidx.appcompat.widget.SearchView
androidx.room.InvalidationTracker$Observer
androidx.room.BuiltInTypeConverters
androidx.room.RenameTable
androidx.room.AmbiguousColumnResolver$Match
androidx.room.ktx.R
androidx.room.migration.MigrationImpl
androidx.room.RoomDatabase$Builder
androidx.startup.InitializationProvider
com.google.android.material.internal.BaselineLayout
androidx.room.Ignore
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.google.android.material.appbar.AppBarLayout$Behavior
androidx.lifecycle.SavedStateHandleAttacher
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase
androidx.room.util.FtsTableInfo
androidx.room.Fts3
androidx.activity.ImmLeaksCleaner
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$execute$1
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor
com.google.android.material.transformation.ExpandableTransformationBehavior
androidx.room.Index
com.google.android.material.appbar.AppBarLayout$BaseBehavior
androidx.room.Index$Order
androidx.room.RoomDatabase$endTransaction$1
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.appcompat.view.menu.ExpandedMenuView
androidx.room.ProvidedAutoMigrationSpec
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$2
androidx.appcompat.widget.ButtonBarLayout
androidx.fragment.app.Fragment$5
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$1
androidx.appcompat.widget.FitWindowsLinearLayout
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
androidx.room.CoroutinesRoom$Companion$execute$4$1
androidx.room.AmbiguousColumnResolver$resolve$1$2
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1
kotlinx.coroutines.internal.StackTraceRecoveryKt
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.room.SQLiteCopyOpenHelperFactory
androidx.room.SharedSQLiteStatement$stmt$2
androidx.room.RoomDatabase$Callback
androidx.room.InvalidationTracker$ObservedTableTracker
com.google.android.material.internal.ClippableRoundedCornerLayout
androidx.room.Query
androidx.lifecycle.SavedStateHandleController
androidx.room.InvalidationTracker$WeakObserver
androidx.room.paging.LimitOffsetDataSource$1
androidx.appcompat.view.menu.ListMenuItemView
androidx.room.migration.Migration
androidx.room.RoomTrackingLiveData$observer$1
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement
com.google.android.material.timepicker.ChipTextInputComboView
androidx.room.Dao
com.google.android.material.snackbar.Snackbar$SnackbarLayout
com.actiontracker.app.ui.WallpaperActivity
androidx.room.IMultiInstanceInvalidationCallback$Stub
androidx.recyclerview.widget.LinearLayoutManager
androidx.activity.result.ActivityResultRegistry$1
androidx.room.migration.MigrationKt
androidx.room.InvalidationLiveDataContainer
androidx.room.DeleteTable
androidx.room.RoomWarnings$Companion
androidx.appcompat.view.menu.ActionMenuItemView
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1
androidx.appcompat.widget.ActionMenuView
androidx.room.paging.LimitOffsetDataSource
androidx.room.util.TableInfo$Index$Companion
androidx.room.CoroutinesRoom$Companion$createFlow$1$1
androidx.appcompat.widget.AlertDialogLayout
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$delete$1
androidx.room.Transaction
androidx.room.RawQuery
androidx.recyclerview.widget.StaggeredGridLayoutManager
androidx.activity.ComponentActivity$3
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1
com.google.android.material.bottomsheet.BottomSheetBehavior
androidx.room.RenameTable$Entries
com.google.android.material.transformation.ExpandableBehavior
com.google.android.material.snackbar.SnackbarContentLayout
androidx.transition.FragmentTransitionSupport
androidx.room.util.CursorUtil
androidx.room.Upsert
androidx.room.Room
androidx.room.SQLiteCopyOpenHelper
androidx.appcompat.widget.ActionBarContainer
androidx.room.FtsOptions
androidx.room.OnConflictStrategy
androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy
androidx.room.InvalidationTracker
androidx.room.DeleteColumn$Entries
androidx.room.AmbiguousColumnResolver$Solution$Companion
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$2
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$2
androidx.room.util.DBUtil
androidx.recyclerview.widget.RecyclerView
androidx.recyclerview.widget.GridLayoutManager
androidx.room.ColumnInfo$SQLiteTypeAffinity
com.google.android.material.carousel.CarouselLayoutManager
androidx.viewpager2.adapter.FragmentStateAdapter$5
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDbLockedByCurrentThread$1
androidx.room.EntityUpsertionAdapterKt
androidx.lifecycle.LifecycleCoroutineScopeImpl
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$needUpgrade$1
androidx.room.TransactionExecutor
androidx.room.RoomOpenHelper
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDatabaseIntegrityOk$1
androidx.room.util.UUIDUtil
androidx.profileinstaller.ProfileInstallerInitializer
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$1
androidx.room.MultiInstanceInvalidationClient
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isReadOnly$1
androidx.room.ForeignKey
androidx.room.AmbiguousColumnResolver$resolve$4
com.google.android.material.internal.TouchObserverFrameLayout
androidx.room.MapInfo
androidx.room.AutoClosingRoomOpenHelper
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.room.FtsOptions$Order
androidx.room.RoomTrackingLiveData
androidx.room.RoomOpenHelper$Delegate
com.google.android.material.bottomappbar.BottomAppBar$Behavior
androidx.core.app.RemoteActionCompatParcelizer
androidx.room.PrimaryKey
com.google.android.material.chip.Chip
androidx.room.TransactionElement$Key
androidx.room.DeleteTable$Entries
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForString$1
com.google.android.material.button.MaterialButton
androidx.fragment.app.DialogFragment
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setForeignKeyConstraintsEnabled$1
androidx.room.IMultiInstanceInvalidationService
android.support.v4.app.RemoteActionCompatParcelizer
androidx.room.AutoClosingRoomOpenHelperFactory
androidx.profileinstaller.ProfileInstallReceiver
androidx.room.R
androidx.cardview.widget.CardView
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1
androidx.room.CoroutinesRoom
androidx.room.TypeConverters
androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1
androidx.room.RoomSQLiteQuery
com.google.android.material.datepicker.MaterialDatePicker
androidx.room.DeleteColumn
androidx.room.util.TableInfoKt
androidx.room.CoroutinesRoomKt
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
androidx.room.CoroutinesRoom$Companion$createFlow$1
androidx.room.ForeignKey$Companion
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaxSqlCacheSize$1
androidx.constraintlayout.helper.widget.Flow
androidx.constraintlayout.widget.ConstraintLayout
androidx.room.Insert
androidx.core.graphics.drawable.IconCompat
androidx.room.IMultiInstanceInvalidationService$Default
com.google.android.material.timepicker.ClockFaceView
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1
androidx.room.util.TableInfo$Column$Companion
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1
androidx.appcompat.widget.ViewStubCompat
androidx.room.Entity
androidx.room.IMultiInstanceInvalidationCallback$Default
androidx.room.util.StringUtil
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.room.AmbiguousColumnResolver
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForLong$1
androidx.room.RoomOpenHelper$ValidationResult
androidx.versionedparcelable.CustomVersionedParcelable
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaximumSize$1
com.google.android.material.behavior.SwipeDismissBehavior
androidx.room.util.TableInfo$CreatedFrom
kotlinx.coroutines.android.AndroidDispatcherFactory
androidx.core.app.RemoteActionCompat
androidx.core.widget.NestedScrollView
androidx.room.CoroutinesRoom$Companion$execute$2
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: java.lang.Object result
kotlinx.coroutines.DispatchedTaskKt: int MODE_UNDISPATCHED
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher IO
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: java.lang.Object L$1
androidx.room.RoomMasterTable: androidx.room.RoomMasterTable INSTANCE
kotlinx.coroutines.CancellableContinuationImplKt: kotlinx.coroutines.internal.Symbol RESUME_TOKEN
androidx.room.paging.LimitOffsetDataSource: java.lang.String mLimitOffsetQuery
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: java.lang.Object result
androidx.room.AmbiguousColumnResolver$ResultColumn: java.lang.String name
androidx.room.RoomSQLiteQuery: java.lang.String[] stringBindings
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: int label
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: kotlinx.coroutines.flow.FlowKt__CountKt$count$4 this$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2: kotlin.jvm.internal.Ref$ObjectRef $accumulator
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: int label
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.GlobalQueue globalBlockingQueue
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: kotlinx.coroutines.flow.FlowCollector $downstream
androidx.room.AmbiguousColumnResolver$ResultColumn: int index
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: kotlin.coroutines.CoroutineContext $scopeContext
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.ChildHandleNode child
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__MergeKt: int DEFAULT_CONCURRENCY
androidx.room.RoomWarnings: java.lang.String RELATION_QUERY_WITHOUT_TRANSACTION
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2: kotlin.jvm.functions.Function3 $operation
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2 this$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2: kotlin.jvm.internal.Ref$ObjectRef $result
kotlinx.coroutines.TimeoutCancellationException: kotlinx.coroutines.Job coroutine
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: int label
androidx.room.ForeignKey: int RESTRICT
androidx.lifecycle.LiveData: int mActiveCount
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: int label
androidx.room.QueryInterceptorStatement: java.util.concurrent.Executor queryCallbackExecutor
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object L$1
kotlinx.coroutines.flow.CallbackFlowBuilder: kotlin.jvm.functions.Function2 block
kotlinx.coroutines.internal.LimitedDispatcher: java.lang.Object workerAllocationLock
kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol DONE
androidx.room.SQLiteCopyOpenHelperFactory: java.lang.String mCopyFromAssetPath
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: int label
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: kotlin.jvm.functions.Function1 $block
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: java.lang.Object L$0
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1: kotlin.jvm.functions.Function2 $transactionBlock
androidx.room.InvalidationTracker$ObserverWrapper: java.util.Set singleTableSet
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$3: java.lang.reflect.Constructor $constructor$inlined
kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: kotlinx.coroutines.internal.AtomicDesc desc
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: int I$0
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int ADD_CLOSED
androidx.room.FtsOptions$Order: androidx.room.FtsOptions$Order[] $VALUES
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2: kotlin.jvm.functions.Function2 $transform$inlined
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2 this$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$1
androidx.room.AmbiguousColumnResolver$Solution: int overlaps
kotlinx.coroutines.internal.AtomicKt: java.lang.Object RETRY_ATOMIC
kotlinx.coroutines.channels.ChannelIterator$next0$1: java.lang.Object result
androidx.lifecycle.LiveData: int START_VERSION
kotlinx.coroutines.internal.ThreadState: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: kotlin.jvm.functions.Function4 $transform$inlined
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object L$0
androidx.room.AmbiguousColumnResolver$resolve$1$1: java.util.List $mappingMatches
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1 INSTANCE
androidx.room.paging.LimitOffsetDataSource: androidx.room.InvalidationTracker$Observer mObserver
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object[] buffer
kotlinx.coroutines.scheduling.CoroutineScheduler: int TERMINATED
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.DispatchedTaskKt: int MODE_ATOMIC
kotlinx.coroutines.scheduling.CoroutineScheduler: int PARKED
androidx.room.RoomWarnings: java.lang.String DOES_NOT_IMPLEMENT_EQUALS_HASHCODE
kotlinx.coroutines.channels.Channel: int RENDEZVOUS
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: java.lang.Object L$1
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: kotlinx.coroutines.flow.Flow $inner
kotlinx.coroutines.internal.ConcurrentLinkedListKt: int POINTERS_SHIFT
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: kotlin.jvm.internal.Ref$ObjectRef $lastValue
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$2: kotlin.jvm.internal.Ref$ObjectRef $result
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: java.lang.Object L$1
kotlinx.coroutines.channels.AbstractChannelKt: int RECEIVE_RESULT
androidx.lifecycle.LiveData: boolean mChangingActiveState
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4: java.util.Iterator $this_asFlow$inlined
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: java.lang.Object L$2
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.String errorHint
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] $VALUES
androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.String[] $tableNames
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.ThreadLocal threadLocal
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean mayHaveLocalTasks
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: int label
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: kotlinx.coroutines.flow.FlowCollector $collector
kotlinx.coroutines.DisposeOnCancel: kotlinx.coroutines.DisposableHandle handle
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode AUTOMATIC
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.channels.Channel _channel
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object L$3
androidx.room.RoomDatabase$Builder: long autoCloseTimeout
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: kotlin.coroutines.Continuation cont
androidx.room.ColumnInfo$Companion: int TEXT
kotlinx.coroutines.sync.CancelSemaphoreAcquisitionHandler: kotlinx.coroutines.sync.SemaphoreSegment segment
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: int I$0
kotlinx.coroutines.scheduling.CoroutineScheduler: int MAX_SUPPORTED_POOL_SIZE
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: int label
kotlinx.coroutines.flow.internal.AbstractSharedFlow: int nextIndex
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2 this$0
kotlinx.coroutines.flow.internal.SendingCollector: kotlinx.coroutines.channels.SendChannel channel
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: kotlinx.coroutines.channels.ReceiveChannel $this_flatMap
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: kotlinx.coroutines.flow.Flow $upstream
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object result
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2: kotlinx.coroutines.flow.FlowCollector $collector
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object result
androidx.room.RoomTrackingLiveData: androidx.room.RoomDatabase database
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.room.QueryInterceptorDatabase: java.util.concurrent.Executor queryCallbackExecutor
androidx.room.CoroutinesRoom$Companion$execute$2: java.util.concurrent.Callable $callable
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object L$0
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState state
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: java.lang.Object L$1
androidx.lifecycle.LiveData: java.lang.Object mData
kotlinx.coroutines.channels.ArrayChannel: int capacity
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: java.lang.Object L$0
androidx.room.FtsOptions: java.lang.String TOKENIZER_SIMPLE
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $action$inlined
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol SEALED
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1: int label
kotlinx.coroutines.scheduling.CoroutineScheduler: long PARKED_INDEX_MASK
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: java.lang.Object L$0
kotlinx.coroutines.scheduling.CoroutineScheduler: int CPU_PERMITS_SHIFT
androidx.room.InvalidationTracker$Observer: java.lang.String[] tables
kotlinx.coroutines.channels.Channel$Factory: int OPTIONAL_CHANNEL
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: java.lang.Object L$1
kotlinx.coroutines.DelayKt$awaitCancellation$1: java.lang.Object result
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: kotlinx.coroutines.channels.ReceiveChannel $second
kotlinx.coroutines.flow.FlowKt__CountKt$count$4: kotlin.jvm.functions.Function2 $predicate
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: kotlinx.coroutines.flow.Flow $this_transform
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1: int label
androidx.room.AutoCloser: androidx.sqlite.db.SupportSQLiteOpenHelper delegateOpenHelper
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: java.util.ArrayList binds
kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1: kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1 INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: int label
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long FROZEN_MASK
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object L$3
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3: kotlinx.coroutines.flow.Flow[] $flows$inlined
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.Flow $flow
androidx.room.MultiInstanceInvalidationClient: android.content.ServiceConnection serviceConnection
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object L$0
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.Continuation delegate
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $block$inlined
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: int label
kotlinx.coroutines.JobSupport$children$1: kotlinx.coroutines.JobSupport this$0
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1: int label
androidx.room.CoroutinesRoom$Companion$createFlow$1: boolean $inTransaction
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: kotlinx.coroutines.flow.Flow $this_sample
androidx.room.CoroutinesRoom$Companion$execute$4$1: kotlinx.coroutines.Job $job
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1: int label
androidx.room.RoomOpenHelper: androidx.room.RoomOpenHelper$Companion Companion
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.util.concurrent.Callable $callable
kotlinx.coroutines.flow.ReadonlySharedFlow: kotlinx.coroutines.flow.SharedFlow $$delegate_0
androidx.room.RoomWarnings: java.lang.String AMBIGUOUS_COLUMN_IN_RESULT
kotlinx.coroutines.scheduling.TasksKt: int TASK_PROBABLY_BLOCKING
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: java.lang.Object L$1
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object L$3
androidx.room.TransactionElement: androidx.room.TransactionElement$Key Key
kotlinx.coroutines.internal.AtomicOp: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _consensus$FU
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object L$0
kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function0 $this_asFlow$inlined
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isReadOnly$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isReadOnly$1 INSTANCE
androidx.room.util.TableInfo$Column: int primaryKeyPosition
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol OFFER_FAILED
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlinx.coroutines.channels.AbstractChannel$Itr iterator
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: java.lang.Object L$1
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.GlobalQueue globalCpuQueue
androidx.room.util.FtsTableInfo: java.util.Set options
kotlinx.coroutines.flow.StartedLazily$command$1: java.lang.Object L$0
kotlinx.coroutines.internal.FastServiceLoader: kotlinx.coroutines.internal.FastServiceLoader INSTANCE
androidx.room.FtsOptions: java.lang.String TOKENIZER_ICU
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_combine$inlined
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: android.database.Cursor delegate
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: kotlinx.coroutines.channels.ReceiveChannel $this_zip
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: long timeNow
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: int label
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.flow.Flow $flow
kotlinx.coroutines.flow.FlowKt__CountKt$count$3: int label
androidx.room.OnConflictStrategy$Companion: int REPLACE
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.SharingStarted: kotlinx.coroutines.flow.SharingStarted$Companion Companion
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1: kotlin.jvm.functions.Function2 $block
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: kotlinx.coroutines.flow.FlowCollector $collector
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: java.lang.Object result
androidx.room.util.TableInfo$Column: int affinity
kotlinx.coroutines.flow.AbstractFlow$collect$1: int label
androidx.room.ColumnInfo$Companion: int REAL
androidx.room.QueryInterceptorStatement: androidx.room.RoomDatabase$QueryCallback queryCallback
kotlinx.coroutines.flow.StateFlowImpl$collect$1: kotlinx.coroutines.flow.StateFlowImpl this$0
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1$emit$1: int label
androidx.room.AutoCloser: boolean manuallyClosed
androidx.room.ColumnInfo: int UNSPECIFIED
androidx.room.MultiInstanceInvalidationClient$1: androidx.room.MultiInstanceInvalidationClient this$0
kotlinx.coroutines.DispatchedTaskKt: int MODE_CANCELLABLE_REUSABLE
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2: kotlin.jvm.functions.Function2 $action$inlined
androidx.room.DatabaseConfiguration: java.util.List typeConverters
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: java.lang.Object L$1
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: int label
androidx.room.AmbiguousColumnResolver$resolve$1$1: int $mappingIndex
androidx.lifecycle.LiveData: java.lang.Object NOT_SET
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: int label
kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol UNINITIALIZED
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$1
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$2: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$2 INSTANCE
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1: kotlin.jvm.internal.Ref$ObjectRef $result$inlined
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: java.lang.Object L$0
kotlinx.coroutines.scheduling.TasksKt: java.lang.String DEFAULT_SCHEDULER_NAME
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object L$3
androidx.room.MultiInstanceInvalidationService: int maxClientId
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: java.lang.Object L$0
androidx.room.RoomDatabase$MigrationContainer: java.util.Map migrations
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: int label
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1: kotlinx.coroutines.channels.ProducerScope $$this$produce
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: androidx.room.RoomDatabase $this_startTransactionCoroutine
kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlinx.coroutines.internal.CtorCache ctorCache
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: java.lang.Object result
androidx.room.CoroutinesRoom$Companion$createFlow$1: java.util.concurrent.Callable $callable
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: int I$0
androidx.room.RoomSQLiteQuery: int DOUBLE
androidx.room.IMultiInstanceInvalidationCallback: java.lang.String DESCRIPTOR
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: java.lang.Object L$0
com.google.android.material.checkbox.MaterialCheckBox$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.flow.SharingConfig: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object[] buffer
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$delete$1: java.lang.String $table
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object L$1
androidx.room.InvalidationTracker: java.util.Map tableIdLookup
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.channels.AbstractSendChannel: kotlin.jvm.functions.Function1 onUndeliveredElement
kotlinx.coroutines.EventLoop_commonKt: long MS_TO_NS
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1: kotlinx.coroutines.flow.Flow[] $flowArray
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: long $periodMillis
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$3: kotlin.jvm.functions.Function1 $timeout
androidx.room.RoomDatabase: androidx.room.AutoCloser autoCloser
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: long J$0
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setForeignKeyConstraintsEnabled$1: boolean $enabled
kotlinx.coroutines.sync.SemaphoreKt: int SEGMENT_SIZE
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext immediate
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1$emit$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1: kotlin.jvm.functions.Function2 $transform$inlined$1
androidx.room.AmbiguousColumnResolver$Match: java.util.List resultIndices
kotlinx.coroutines.flow.SafeFlow: kotlin.jvm.functions.Function2 block
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1: int label
androidx.room.MultiInstanceInvalidationClient: java.lang.Runnable setUpRunnable
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: java.lang.Object result
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: java.lang.Object L$0
kotlinx.coroutines.selects.SelectKt: java.lang.Object RESUMED
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: int label
androidx.room.DatabaseConfiguration: java.io.File copyFromFile
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.internal.Symbol NONE
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1: java.lang.Object[] $elements$inlined
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object $expect$inlined
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: int label
kotlinx.coroutines.flow.StartedLazily$command$1: int label
kotlinx.coroutines.internal.SegmentOrClosed: java.lang.Object value
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: kotlin.jvm.internal.Ref$ObjectRef $lastValue
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: java.lang.Object L$0
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted Lazily
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: int label
kotlinx.coroutines.DebugKt: boolean DEBUG
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: kotlinx.coroutines.flow.FlowCollector $$this$flow
kotlinx.coroutines.flow.FlowKt__CountKt$count$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: int label
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object L$2
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: long index
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.flow.internal.NopCollector: kotlinx.coroutines.flow.internal.NopCollector INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1 this$0
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_onStart$inlined
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlinx.coroutines.channels.ReceiveChannel $second
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$none$1: java.lang.Object result
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: androidx.room.RoomDatabase $this_withTransaction
kotlinx.coroutines.flow.ChannelAsFlow: kotlinx.coroutines.channels.ReceiveChannel channel
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.room.RoomDatabase$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Factory factory
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2: kotlin.jvm.functions.Function2 $transform$inlined
androidx.room.CoroutinesRoom$Companion$createFlow$1: int label
androidx.room.AutoCloser: long autoCloseTimeoutInMs
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: java.lang.Object L$0
kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1: kotlinx.coroutines.channels.AbstractSendChannel this$0
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2 this$0
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: int label
kotlinx.coroutines.scheduling.CoroutineScheduler: java.lang.String schedulerName
kotlinx.coroutines.scheduling.CoroutineScheduler: int MIN_SUPPORTED_POOL_SIZE
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: java.lang.Object L$0
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1: kotlinx.coroutines.flow.DistinctFlowImpl$collect$2 this$0
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: int label
androidx.room.paging.LimitOffsetDataSource: androidx.room.RoomDatabase mDb
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1: kotlin.jvm.functions.Function2 $transform$inlined$1
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4: java.lang.reflect.Constructor $constructor$inlined
kotlinx.coroutines.scheduling.CoroutineScheduler: int maxPoolSize
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$0
androidx.room.InvalidationTracker: java.lang.Runnable refreshRunnable
androidx.room.Room: java.lang.String MASTER_TABLE_NAME
androidx.room.QueryInterceptorOpenHelper: androidx.sqlite.db.SupportSQLiteOpenHelper delegate
androidx.room.ForeignKey$Companion: int RESTRICT
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: kotlinx.coroutines.flow.internal.SendingCollector $collector
androidx.room.AmbiguousColumnResolver: androidx.room.AmbiguousColumnResolver INSTANCE
androidx.room.InvalidationTracker: java.util.Map viewTables
androidx.room.util.TableInfo$ForeignKey: java.util.List columnNames
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: int label
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: int label
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object L$3
androidx.room.RoomSQLiteQuery: int DESIRED_POOL_SIZE
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: int label
kotlin.jvm.internal.CallableReference: boolean isTopLevel
kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1: kotlinx.coroutines.channels.AbstractChannel this$0
androidx.room.ColumnInfo$Companion: int INTEGER
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object L$1
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1: java.lang.Object L$1
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1: int label
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1 INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelResult$Closed: java.lang.Throwable cause
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] $VALUES
kotlinx.coroutines.ThreadLocalEventLoop: java.lang.ThreadLocal ref
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode TRUNCATE
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: kotlinx.coroutines.flow.SharingStarted $started
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: kotlinx.coroutines.flow.Flow $upstream
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object L$2
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1 INSTANCE
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: androidx.room.AutoCloser autoCloser
androidx.room.SQLiteCopyOpenHelper: int databaseVersion
androidx.room.AutoCloser: java.lang.String autoCloseBug
kotlinx.coroutines.channels.Channel$Factory: int CHANNEL_DEFAULT_CAPACITY
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: int label
androidx.room.SQLiteCopyOpenHelperFactory: java.util.concurrent.Callable mCopyFromInputStream
kotlinx.coroutines.EventLoop: kotlinx.coroutines.internal.ArrayQueue unconfinedQueue
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: kotlin.jvm.functions.Function7 $transform$inlined
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: int label
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: int label
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1: java.lang.Object result
kotlin.jvm.internal.Lambda: int arity
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.InvokeOnCompletion: kotlin.jvm.functions.Function1 handler
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: java.lang.Object L$1
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForLong$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForLong$1 INSTANCE
kotlinx.coroutines.scheduling.TasksKt: int TASK_NON_BLOCKING
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: kotlin.jvm.functions.Function3 $transform
androidx.room.OnConflictStrategy$Companion: int NONE
kotlinx.coroutines.ResumeOnCompletion: kotlin.coroutines.Continuation continuation
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object L$0
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.String[] $tableNames
kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: java.lang.Object result
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicLongFieldUpdater controlState$FU
androidx.room.util.TableInfo: java.util.Map columns
kotlinx.coroutines.CancellableContinuationImpl: int _decision
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: kotlinx.coroutines.CancellableContinuation $continuation$inlined
androidx.room.SQLiteCopyOpenHelper: boolean verified
androidx.room.RoomDatabase: java.util.Map backingFieldMap
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1: kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1 INSTANCE
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: long idleWorkerKeepAliveNs
kotlinx.coroutines.flow.SharedFlowSlot: kotlin.coroutines.Continuation cont
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.InvokeOnCancelling: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _invoked$FU
androidx.room.ColumnInfo$Companion: java.lang.String VALUE_UNSPECIFIED
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: kotlin.jvm.functions.Function2 $selector
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
kotlinx.coroutines.flow.EmptyFlow: kotlinx.coroutines.flow.EmptyFlow INSTANCE
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object $fallback
androidx.room.InvalidationTracker$ObservedTableTracker: boolean[] triggerStates
androidx.room.InvalidationTracker: androidx.arch.core.internal.SafeIterableMap observerMap
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_NEW
kotlinx.coroutines.internal.LimitedDispatcher: int parallelism
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: java.lang.Object result
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.StartedLazily$command$1$1$emit$1: kotlinx.coroutines.flow.StartedLazily$command$1$1 this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU
androidx.room.ColumnInfo$Companion: java.lang.String INHERIT_FIELD_NAME
androidx.room.ColumnInfo$Companion: int UNICODE
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object L$2
kotlinx.coroutines.internal.MainDispatchersKt: java.lang.String FAST_SERVICE_LOADER_PROPERTY_NAME
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1: kotlin.jvm.functions.Function2 $predicate$inlined
androidx.room.util.FtsTableInfo: androidx.room.util.FtsTableInfo$Companion Companion
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: java.lang.Object result
kotlinx.coroutines.sync.SemaphoreImpl: java.util.concurrent.atomic.AtomicLongFieldUpdater enqIdx$FU
kotlinx.coroutines.scheduling.CoroutineScheduler: int corePoolSize
kotlinx.coroutines.flow.StateFlowImpl: int sequence
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol EMPTY
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: kotlinx.coroutines.flow.Flow $this_debounceInternal
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: java.lang.Object L$0
kotlinx.coroutines.channels.Closed: java.lang.Throwable closeCause
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: java.lang.String sql
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: kotlinx.coroutines.internal.ThreadContextKt$updateState$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$1: int label
androidx.room.InvalidationTracker: java.util.concurrent.atomic.AtomicBoolean pendingRefresh
kotlinx.coroutines.flow.FlowKt__CountKt$count$1: int label
androidx.room.RoomDatabase$Builder: java.util.Set migrationsNotRequiredFrom
androidx.room.RoomWarnings: java.lang.String MISSING_JAVA_TMP_DIR
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: kotlin.jvm.functions.Function1 $timeoutMillisSelector
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaxSqlCacheSize$1: int $cacheSize
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: java.lang.Object L$1
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int HEAD_SHIFT
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 updateState
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: java.lang.Object result
kotlinx.coroutines.BuildersKt__Builders_commonKt: int RESUMED
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: java.lang.Object $initial$inlined
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
androidx.room.DatabaseConfiguration: androidx.sqlite.db.SupportSQLiteOpenHelper$Factory sqliteOpenHelperFactory
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: java.lang.Object L$1
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int rngState
kotlinx.coroutines.DispatchedTask: int resumeMode
androidx.room.ForeignKey$Companion: int CASCADE
kotlinx.coroutines.flow.SubscribedFlowCollector: kotlin.jvm.functions.Function2 action
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2: kotlin.jvm.functions.Function2 $transform$inlined
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2 this$0
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
androidx.room.ColumnInfo: int UNICODE
androidx.lifecycle.LiveData: java.lang.Object mDataLock
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow$inlined
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1 this$0
kotlinx.coroutines.flow.internal.UndispatchedContextCollector: java.lang.Object countOrElement
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: kotlinx.coroutines.flow.MutableSharedFlow $shared
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: kotlinx.coroutines.channels.ReceiveChannel $this_map
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$PrepackagedDatabaseCallback prepackagedDatabaseCallback
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1: kotlinx.coroutines.flow.FlowCollector $$this$flow$inlined
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 findOne
androidx.room.DatabaseConfiguration: java.lang.String name
androidx.room.Index$Order: androidx.room.Index$Order ASC
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object L$2
kotlinx.coroutines.SelectJoinOnCompletion: kotlinx.coroutines.selects.SelectInstance select
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: int label
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: java.lang.Object L$0
androidx.room.MultiInstanceInvalidationClient: androidx.room.IMultiInstanceInvalidationService service
androidx.room.FtsOptions$MatchInfo: androidx.room.FtsOptions$MatchInfo FTS4
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$insert$1: int $conflictAlgorithm
kotlinx.coroutines.CompletedExceptionally: int _handled
kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask: java.lang.Runnable block
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: java.lang.Object L$0
kotlinx.coroutines.DefaultExecutor: int ACTIVE
kotlinx.coroutines.DefaultExecutorKt: kotlinx.coroutines.Delay DefaultDelay
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: java.lang.Object result
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart ATOMIC
kotlinx.coroutines.selects.SelectKt: java.lang.Object NOT_SELECTED
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: int label
androidx.room.ForeignKey: int SET_NULL
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: kotlinx.coroutines.channels.ReceiveChannel $this_filterIndexed
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _prev$FU
androidx.room.ForeignKey: int CASCADE
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: int label
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1: int label
kotlinx.coroutines.UndispatchedMarker: kotlinx.coroutines.UndispatchedMarker INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object L$4
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1: kotlinx.coroutines.flow.Flow[] $flows$inlined
kotlinx.coroutines.flow.StartedWhileSubscribed: long stopTimeout
kotlinx.coroutines.SelectAwaitOnCompletion: kotlin.jvm.functions.Function2 block
kotlinx.coroutines.JobSupportKt: int FALSE
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: int label
androidx.room.AmbiguousColumnResolver$resolve$1$2: int $mappingIndex
androidx.room.MultiInstanceInvalidationService: android.os.RemoteCallbackList callbackList
androidx.room.RoomDatabase$Builder: java.util.List autoMigrationSpecs
kotlinx.coroutines.internal.ContextScope: kotlin.coroutines.CoroutineContext coroutineContext
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler this$0
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.util.concurrent.atomic.AtomicInteger $nonClosed
kotlinx.coroutines.JobNode: kotlinx.coroutines.JobSupport job
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: java.lang.Object L$0
kotlinx.coroutines.scheduling.Task: long submissionTime
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: int label
androidx.room.FtsOptions$MatchInfo: androidx.room.FtsOptions$MatchInfo[] $VALUES
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: java.lang.Object L$0
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $flow$inlined
kotlinx.coroutines.DefaultExecutor: java.lang.String THREAD_NAME
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: int label
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: kotlin.jvm.functions.Function2 $predicate
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$any$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $transform$inlined
kotlinx.coroutines.scheduling.DefaultIoScheduler: kotlinx.coroutines.scheduling.DefaultIoScheduler INSTANCE
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1: int label
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: java.lang.Object L$0
androidx.room.util.TableInfo: int CREATED_FROM_UNKNOWN
kotlinx.coroutines.DefaultExecutorKt: boolean defaultMainDelayOptIn
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: long $timeMillis
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: java.lang.Object L$1
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: int label
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.DebugKt: boolean RECOVER_STACK_TRACES
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
kotlinx.coroutines.flow.ChannelFlowBuilder: kotlin.jvm.functions.Function2 block
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: int AVAILABLE_PROCESSORS
androidx.room.paging.LimitOffsetDataSource$1: androidx.room.paging.LimitOffsetDataSource this$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.BlockingCoroutine: kotlinx.coroutines.EventLoop eventLoop
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: int label
kotlinx.coroutines.BuildersKt__Builders_commonKt: int SUSPENDED
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest this$0
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: java.lang.Object L$0
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$MigrationContainer migrationContainer
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: java.lang.Object result
kotlinx.coroutines.DebugKt: java.lang.String DEBUG_PROPERTY_VALUE_OFF
androidx.room.InvalidationTracker: androidx.room.InvalidationTracker$Companion Companion
kotlinx.coroutines.flow.internal.UndispatchedContextCollector: kotlin.coroutines.CoroutineContext emitContext
androidx.room.ColumnInfo$Companion: int UNSPECIFIED
kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: java.lang.Object result
androidx.room.CoroutinesRoom$Companion$execute$4$job$1: java.util.concurrent.Callable $callable
kotlinx.coroutines.selects.SelectBuilderImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState PARKING
kotlinx.coroutines.CoroutineId: long id
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: java.lang.Object result
androidx.room.EntityUpsertionAdapter: androidx.room.EntityInsertionAdapter insertionAdapter
androidx.room.QueryInterceptorOpenHelperFactory: java.util.concurrent.Executor queryCallbackExecutor
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int MIN_ADD_SPIN_CAPACITY
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: int label
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: int I$0
kotlinx.coroutines.flow.SubscribedSharedFlow$collect$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$any$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object L$0
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int TAIL_SHIFT
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1: int $i
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: kotlinx.coroutines.CompletableJob $collectJob
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2: kotlin.jvm.functions.Function2 $predicate$inlined
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1 this$0
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher Main
kotlinx.coroutines.android.HandlerDispatcherKt: long MAX_DELAY
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: java.lang.Object L$0
androidx.room.RoomDatabase: java.lang.ThreadLocal suspendingTransactionId
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object L$1
androidx.room.DatabaseConfiguration: java.lang.String copyFromAssetPath
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object L$4
androidx.room.util.ViewInfo: java.lang.String sql
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] $VALUES
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1: kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1 this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: int label
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: kotlinx.coroutines.flow.FlowCollector $downstream
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2 this$0
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.internal.StackFrameContinuation: kotlin.coroutines.Continuation uCont
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9 this$0
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CancelHandler cancelHandler
androidx.room.TransactionElement: java.util.concurrent.atomic.AtomicInteger referenceCount
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlinx.coroutines.flow.FlowCollector $collector
kotlinx.coroutines.sync.SemaphoreImpl: int _availablePermits
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int FROZEN_SHIFT
kotlinx.coroutines.flow.FlowKt__CountKt$count$3: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: int label
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: int label
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object CONDITION_FALSE
androidx.room.OnConflictStrategy: int NONE
androidx.room.RoomDatabase$Builder: java.io.File copyFromFile
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $operation$inlined
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: int label
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object result
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object L$3
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1: kotlinx.coroutines.flow.Flow[] $flowArray
kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1: int label
androidx.room.paging.LimitOffsetDataSource: java.util.concurrent.atomic.AtomicBoolean mRegisteredObserver
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$any$1: java.lang.Object L$0
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$2: java.lang.Object[] $bindArgs
androidx.room.IMultiInstanceInvalidationService$Stub: int TRANSACTION_registerCallback
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3: kotlin.jvm.functions.Function2 $action
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: kotlinx.coroutines.channels.AbstractChannel this$0
kotlinx.coroutines.sync.SemaphoreImpl: java.util.concurrent.atomic.AtomicLongFieldUpdater deqIdx$FU
androidx.room.util.FtsTableInfo: java.lang.String[] FTS_OPTIONS
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object _result
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: kotlinx.coroutines.flow.FlowCollector $downstream
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: int label
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: int label
kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION
kotlin.jvm.internal.FunctionReference: int flags
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: java.lang.Object result
kotlinx.coroutines.selects.SelectBuilderImpl$DisposeNode: kotlinx.coroutines.DisposableHandle handle
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1: kotlin.jvm.functions.Function1 $block
androidx.room.AutoCloser: java.lang.Object lock
androidx.room.RoomDatabase$Builder: java.lang.Class klass
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: kotlinx.coroutines.flow.internal.SendingCollector $collector
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlinx.coroutines.flow.Flow[] $flowArray
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: int label
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: kotlin.coroutines.CoroutineContext $$delegate_0
kotlinx.coroutines.CoroutineExceptionHandlerImplKt: java.util.List handlers
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: java.lang.Object result
androidx.room.InvalidationTracker: java.lang.String INVALIDATED_COLUMN_NAME
androidx.room.RoomDatabase$Builder: boolean allowDestructiveMigrationOnDowngrade
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.LiveData: java.lang.Object mPendingData
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: java.lang.Object L$0
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
kotlinx.coroutines.flow.ReadonlySharedFlow: kotlinx.coroutines.Job job
kotlinx.coroutines.sync.SemaphoreKt: int MAX_SPIN_CYCLES
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object L$2
kotlinx.coroutines.flow.SharedFlowKt: kotlinx.coroutines.internal.Symbol NO_VALUE
androidx.room.RoomDatabase$Builder: java.lang.String copyFromAssetPath
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: java.lang.Object L$0
androidx.room.InvalidationTracker: androidx.sqlite.db.SupportSQLiteStatement cleanupStatement
kotlinx.coroutines.YieldContext: kotlinx.coroutines.YieldContext$Key Key
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol OFFER_SUCCESS
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: java.lang.Object L$0
kotlinx.coroutines.RemoveOnCancel: kotlinx.coroutines.internal.LockFreeLinkedListNode node
androidx.room.ForeignKey$Companion: int NO_ACTION
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int I$0
kotlinx.coroutines.channels.SendElement: java.lang.Object pollResult
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.room.QueryInterceptorOpenHelper: androidx.room.RoomDatabase$QueryCallback queryCallback
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode node
androidx.room.OnConflictStrategy$Companion: int ROLLBACK
androidx.room.FtsOptions: androidx.room.FtsOptions INSTANCE
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object value
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.channels.ReceiveChannel $second
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: int label
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: java.lang.Object result
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: java.lang.Object L$2
androidx.room.RoomTrackingLiveData: java.util.concurrent.atomic.AtomicBoolean computing
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long CLOSED_MASK
kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: long opSequence
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: int label
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: java.lang.Object result
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForString$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForString$1 INSTANCE
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlinx.coroutines.CoroutineScope $$this$coroutineScope
androidx.room.RoomDatabase: java.util.Map autoMigrationSpecs
androidx.room.RoomDatabase: boolean writeAheadLoggingEnabled
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2: kotlinx.coroutines.flow.FlowCollector $collector
androidx.room.FtsOptions: java.lang.String TOKENIZER_PORTER
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: java.lang.Object L$1
kotlinx.coroutines.CancelFutureOnCompletion: java.util.concurrent.Future future
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: long minDelayUntilStealableTaskNs
androidx.room.MultiInstanceInvalidationClient: int clientId
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted Eagerly
androidx.room.util.TableInfo$Index: java.lang.String name
kotlinx.coroutines.BlockingEventLoop: java.lang.Thread thread
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: java.lang.Object L$0
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol DISPOSED_TASK
kotlinx.coroutines.flow.FlowKt__LimitKt$emitAbort$1: java.lang.Object result
kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause
androidx.room.util.FtsTableInfo: java.lang.String name
kotlinx.coroutines.flow.internal.SafeCollector: int collectContextSize
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow _subscriptionCount
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask: kotlinx.coroutines.CancellableContinuation cont
androidx.room.util.TableInfo$ForeignKey: java.lang.String onUpdate
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$3
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: java.lang.Object result
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object L$0
kotlinx.coroutines.sync.SemaphoreImpl: kotlin.jvm.functions.Function1 onCancellationRelease
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object L$0
androidx.room.DatabaseConfiguration: android.content.Context context
kotlinx.coroutines.flow.ReadonlyStateFlow: kotlinx.coroutines.Job job
androidx.room.RoomDatabase$Builder: java.util.concurrent.Executor transactionExecutor
androidx.room.RoomMasterTable: java.lang.String CREATE_QUERY
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.SelectAwaitOnCompletion: kotlinx.coroutines.selects.SelectInstance select
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode queue
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: int I$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4 this$0
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.room.DatabaseConfiguration: java.util.List callbacks
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: java.lang.Object result
androidx.room.ColumnInfo: int REAL
androidx.room.AutoCloser: java.lang.Runnable executeAutoCloser
androidx.room.DatabaseConfiguration: java.util.concurrent.Callable copyFromInputStream
kotlinx.coroutines.internal.ClassValueCtorCache: kotlinx.coroutines.internal.ClassValueCtorCache$cache$1 cache
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.room.RoomWarnings: java.lang.String DEFAULT_CONSTRUCTOR
androidx.room.RoomTrackingLiveData: java.lang.Runnable invalidationRunnable
kotlinx.coroutines.scheduling.TasksKt: long WORK_STEALING_TIME_RESOLUTION_NS
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: int label
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: int label
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: kotlin.jvm.functions.Function3 transform
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: java.lang.Object result
kotlinx.coroutines.DefaultExecutor: int SHUTDOWN_ACK
kotlinx.coroutines.channels.ArrayChannel$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: kotlinx.coroutines.flow.internal.SendingCollector $collector
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: int $n
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: int I$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1: int label
androidx.room.MultiInstanceInvalidationService: androidx.room.IMultiInstanceInvalidationService$Stub binder
androidx.room.InvalidationTracker: boolean initialized
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2: kotlin.jvm.functions.Function2 $predicate$inlined
kotlinx.coroutines.flow.StartedLazily$command$1: kotlinx.coroutines.flow.StateFlow $subscriptionCount
androidx.room.RoomDatabase: int MAX_BIND_PARAMETER_CNT
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: kotlin.jvm.functions.Function1 $predicate
kotlinx.coroutines.internal.DispatchedContinuation: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _reusableCancellableContinuation$FU
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.Continuation completion
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: int label
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
androidx.room.TransactionExecutor: java.lang.Object syncLock
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: int I$0
kotlinx.coroutines.internal.ThreadLocalKey: java.lang.ThreadLocal threadLocal
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol CANCELLED
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: java.lang.Object L$2
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: kotlinx.coroutines.channels.ReceiveChannel $this_take
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2: kotlin.jvm.internal.Ref$ObjectRef $result$inlined
kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlinx.coroutines.channels.AbstractChannel channel
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1: kotlin.jvm.internal.Ref$IntRef $consumed
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$2
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
androidx.room.RoomWarnings: java.lang.String INDEX_FROM_EMBEDDED_FIELD_IS_DROPPED
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$insert$1: android.content.ContentValues $values
androidx.room.CoroutinesRoom$Companion$execute$2: int label
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7 this$0
androidx.room.RoomWarnings: java.lang.String PRIMARY_KEY_FROM_EMBEDDED_IS_DROPPED
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumes$1: kotlinx.coroutines.channels.ReceiveChannel $this_consumes
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object L$2
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $flow2$inlined
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: java.lang.Object L$0
kotlinx.coroutines.DispatchedTaskKt: int MODE_CANCELLABLE
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1 this$0
kotlinx.coroutines.channels.ReceiveChannel$onReceiveOrNull$1$registerSelectClause1$1: kotlin.jvm.functions.Function2 $block
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10: kotlin.ranges.LongRange $this_asFlow$inlined
kotlinx.coroutines.android.HandlerContext: java.lang.String name
androidx.room.IMultiInstanceInvalidationService$Stub: int TRANSACTION_broadcastInvalidation
kotlinx.coroutines.channels.ConflatedChannel: java.util.concurrent.locks.ReentrantLock lock
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: int label
androidx.room.InvalidationTracker: androidx.room.InvalidationLiveDataContainer invalidationLiveDataContainer
kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.Continuation uCont
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object L$2
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: java.lang.Object L$0
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _originalNext$FU
kotlinx.coroutines.DebugKt: java.lang.String DEBUG_PROPERTY_VALUE_AUTO
kotlinx.coroutines.CancelledContinuation: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _resumed$FU
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: int $conflictAlgorithm
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String stackTraceRecoveryClassName
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1 this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: java.lang.Object L$0
kotlinx.coroutines.DelayKt$awaitCancellation$1: int label
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaximumSize$1: long $numBytes
kotlinx.coroutines.flow.SubscribedSharedFlow: kotlin.jvm.functions.Function2 action
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlin.coroutines.CoroutineContext $scopeContext
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2: kotlin.jvm.internal.Ref$ObjectRef $fromDownstream
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_ACTIVE
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: int label
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: kotlinx.coroutines.channels.SendChannel $this_sendBlocking
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
androidx.room.TransactionExecutor: java.lang.Runnable active
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$2
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2: java.lang.reflect.Constructor $constructor$inlined
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1 this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: java.lang.Object L$1
kotlinx.coroutines.sync.SemaphoreImpl: long enqIdx
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy: android.os.IBinder mRemote
androidx.room.RoomMasterTable: java.lang.String COLUMN_IDENTITY_HASH
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: kotlin.jvm.functions.Function5 $transform$inlined
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: int label
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: int label
androidx.room.CoroutinesRoom$Companion$execute$4$job$1: kotlinx.coroutines.CancellableContinuation $continuation
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: java.lang.Object result
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: kotlinx.coroutines.flow.internal.ChannelFlow this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: kotlin.jvm.functions.Function4 $transform$inlined
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: kotlin.jvm.functions.Function5 $transform$inlined
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.channels.ReceiveChannel$onReceiveOrNull$1: kotlinx.coroutines.channels.ReceiveChannel this$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: java.lang.Object L$0
androidx.room.util.TableInfo$ForeignKeyWithSequence: java.lang.String from
kotlinx.coroutines.scheduling.TaskImpl: java.lang.Runnable block
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: long $initialDelayMillis
kotlinx.coroutines.selects.SelectBuilderImpl$PairSelectOp: kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp otherOp
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: java.lang.Object element
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol PERMIT
kotlinx.coroutines.flow.SharedFlowImpl: int bufferSize
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1: kotlinx.coroutines.channels.ProducerScope $$this$produce
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1$emit$1: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1 this$0
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: kotlinx.coroutines.android.HandlerContext this$0
kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: int receiveMode
kotlinx.coroutines.channels.ArrayChannel: int head
kotlinx.coroutines.flow.DistinctFlowImpl: kotlin.jvm.functions.Function2 areEquivalent
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: java.lang.Object L$0
kotlinx.coroutines.flow.SubscribedFlowCollector: kotlinx.coroutines.flow.FlowCollector collector
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1 this$0
androidx.room.RoomSQLiteQuery: java.util.TreeMap queryPool
androidx.room.RoomSQLiteQuery: int capacity
androidx.room.RoomTrackingLiveData: androidx.room.InvalidationLiveDataContainer container
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext$Key key
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$3
androidx.room.MultiInstanceInvalidationClient$callback$1: androidx.room.MultiInstanceInvalidationClient this$0
kotlinx.coroutines.flow.FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1: kotlinx.coroutines.channels.BroadcastChannel $this_asFlow$inlined
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: kotlinx.coroutines.flow.Flow[] $flows
androidx.room.util.TableInfo$Index: java.lang.String DEFAULT_PREFIX
androidx.lifecycle.LiveData: boolean mDispatchInvalidated
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object L$1
kotlinx.coroutines.flow.ChannelAsFlow: java.util.concurrent.atomic.AtomicIntegerFieldUpdater consumed$FU
androidx.room.InvalidationTracker: java.lang.String CREATE_TRACKING_TABLE_SQL
androidx.room.ColumnInfo: int RTRIM
kotlinx.coroutines.CancelFutureOnCancel: java.util.concurrent.Future future
androidx.room.RoomDatabase$Builder: java.util.concurrent.Callable copyFromInputStream
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
androidx.room.RoomWarnings: java.lang.String MISMATCHED_SETTER
androidx.room.paging.LimitOffsetDataSource: boolean mInTransaction
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.DisposableHandle parentHandle
kotlinx.coroutines.selects.SelectBuilderImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _result$FU
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: java.lang.Object L$2
androidx.room.RoomTrackingLiveData: java.util.concurrent.Callable computeFunction
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int MAX_CAPACITY_MASK
kotlinx.coroutines.selects.SelectKt: java.lang.Object ALREADY_SELECTED
kotlinx.coroutines.internal.ArrayQueue: int tail
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object result
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
androidx.room.RoomDatabase$Builder: java.util.concurrent.Executor queryCallbackExecutor
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$delete$1: java.lang.Object[] $whereArgs
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1 this$0
androidx.room.IMultiInstanceInvalidationService: java.lang.String DESCRIPTOR
androidx.room.CoroutinesRoom$Companion$execute$4$1: android.os.CancellationSignal $cancellationSignal
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: int label
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: android.content.ContentValues $values
androidx.room.RoomDatabase$Builder: java.util.List typeConverters
kotlinx.coroutines.UndispatchedCoroutine: java.lang.ThreadLocal threadStateToRecover
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2: long $timeoutMillis
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: int I$1
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1: kotlin.jvm.functions.Function3 $operation
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int label
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1: java.lang.Object result
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: androidx.sqlite.db.SupportSQLiteOpenHelper$Callback$Companion Companion
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: kotlinx.coroutines.CompletableDeferred $result
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: java.lang.Object $element
androidx.room.RoomMasterTable: java.lang.String DEFAULT_ID
kotlinx.coroutines.DispatcherExecutor: kotlinx.coroutines.CoroutineDispatcher dispatcher
androidx.room.ColumnInfo$Companion: int NOCASE
androidx.room.RoomSQLiteQuery: int NULL
androidx.room.TransactionElement: kotlin.coroutines.ContinuationInterceptor transactionDispatcher
androidx.room.migration.Migration: int startVersion
kotlinx.coroutines.internal.WeakMapCtorCache: java.util.WeakHashMap exceptionCtors
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1: kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3 this$0
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_onCompletion$inlined
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicLongFieldUpdater parkedWorkersStack$FU
androidx.room.CoroutinesRoom$Companion$execute$4$job$1: int label
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: java.lang.Object L$0
kotlinx.coroutines.flow.SharingConfig: kotlin.coroutines.CoroutineContext context
androidx.room.AutoCloser: long lastDecrementRefCountTimeStamp
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2: kotlin.jvm.functions.Function1 $this_asFlow$inlined
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6: java.lang.Object[] $this_asFlow$inlined
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object L$0
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: java.lang.Object L$1
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1: kotlin.jvm.functions.Function0 $condition
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: int label
androidx.room.util.TableInfo$ForeignKey: java.lang.String onDelete
kotlinx.coroutines.flow.internal.AbstractSharedFlow: int nCollectors
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: java.lang.Object L$2
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$maximumSize$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$maximumSize$1 INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: int label
androidx.room.util.TableInfo: java.util.Set foreignKeys
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU
kotlinx.coroutines.channels.ChannelResult: java.lang.Object holder
kotlinx.coroutines.flow.ChannelAsFlow: boolean consume
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol TAKEN
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$JournalMode journalMode
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.coroutines.CoroutineContext$Key topmostKey
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: java.lang.Runnable $block
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.internal.Symbol PENDING
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: int label
androidx.room.AmbiguousColumnResolver$resolve$1$1: java.lang.String[] $mapping
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1: kotlin.jvm.internal.Ref$IntRef $index
androidx.room.QueryInterceptorDatabase: androidx.room.RoomDatabase$QueryCallback queryCallback
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.Object L$0
androidx.room.RoomDatabase: androidx.room.RoomDatabase$Companion Companion
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.Symbol REMOVE_FROZEN
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1: kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object L$0
kotlinx.coroutines.flow.StateFlowSlot: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
kotlinx.coroutines.flow.DistinctFlowImpl: kotlinx.coroutines.flow.Flow upstream
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: java.lang.String $whereClause
androidx.room.InvalidationLiveDataContainer: java.util.Set liveDataSet
androidx.room.InvalidationTracker: java.lang.String SELECT_UPDATED_TABLES_SQL
androidx.room.migration.Migration: int endVersion
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher$Key Key
kotlinx.coroutines.channels.Channel: int BUFFERED
kotlinx.coroutines.flow.SharingConfig: kotlinx.coroutines.flow.Flow upstream
androidx.room.FtsOptions$Order: androidx.room.FtsOptions$Order DESC
androidx.room.SharedSQLiteStatement: kotlin.Lazy stmt$delegate
kotlinx.coroutines.JobSupport$ChildCompletion: java.lang.Object proposedUpdate
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1: kotlin.jvm.functions.Function2 $transform$inlined$1
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1: int $count$inlined
androidx.room.ColumnInfo: int BINARY
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: int label
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: java.lang.Object L$0
androidx.room.FtsOptions$MatchInfo: androidx.room.FtsOptions$MatchInfo FTS3
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: kotlinx.coroutines.internal.ThreadContextKt$findOne$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: kotlin.jvm.functions.Function7 $transform$inlined
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: kotlin.jvm.functions.Function2 $transform
androidx.room.SharedSQLiteStatement: java.util.concurrent.atomic.AtomicBoolean lock
kotlinx.coroutines.EventLoop_commonKt: int SCHEDULE_OK
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: java.lang.Object value
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: kotlinx.coroutines.flow.StartedWhileSubscribed this$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1 this$0
kotlinx.coroutines.scheduling.TasksKt: kotlinx.coroutines.scheduling.TaskContext NonBlockingContext
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: int label
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2 this$0
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion Companion
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object _parentHandle
kotlinx.coroutines.Unconfined: kotlinx.coroutines.Unconfined INSTANCE
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: int arity
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1: int $count
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.internal.LockFreeLinkedListHead queue
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1: kotlin.jvm.internal.Ref$BooleanRef $isEmpty
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: int $i
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1: int label
kotlinx.coroutines.channels.AbstractChannelKt: int RECEIVE_THROWS_ON_CLOSE
kotlinx.coroutines.scheduling.CoroutineScheduler: long BLOCKING_MASK
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: kotlinx.coroutines.channels.ReceiveChannel $this_distinctBy
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object L$2
kotlinx.coroutines.ExecutorCoroutineDispatcher: kotlinx.coroutines.ExecutorCoroutineDispatcher$Key Key
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__CountKt$count$2: kotlin.jvm.internal.Ref$IntRef $i
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $operation$inlined
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: int label
androidx.room.ColumnInfo: int BLOB
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: java.lang.Object L$2
kotlinx.coroutines.channels.ChannelIterator$next0$1: java.lang.Object L$0
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: int I$0
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1: java.lang.Object result
kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlin.jvm.functions.Function2 block
androidx.room.RoomWarnings: java.lang.String CANNOT_CREATE_VERIFICATION_DATABASE
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2 this$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2 this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: int label
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: java.lang.String TAG
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: java.lang.Object result
kotlinx.coroutines.scheduling.UnlimitedIoScheduler: kotlinx.coroutines.scheduling.UnlimitedIoScheduler INSTANCE
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: kotlinx.coroutines.flow.Flow $this_launchIn
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: java.lang.Object L$1
androidx.room.InvalidationTracker: java.lang.String[] TRIGGERS
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2: kotlin.jvm.functions.Function2 $predicate$inlined
androidx.room.RoomWarnings: androidx.room.RoomWarnings$Companion Companion
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$none$1: int label
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _removedRef$FU
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1$emit$1: int label
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: int label
androidx.room.InvalidationTracker$WeakObserver: java.lang.ref.WeakReference delegateRef
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: java.lang.Object L$1
kotlinx.coroutines.CoroutineStart$WhenMappings: int[] $EnumSwitchMapping$0
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1: kotlin.coroutines.CoroutineContext $context
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.flow.CancellableFlowImpl: kotlinx.coroutines.flow.Flow flow
com.google.android.material.sidesheet.SideSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: kotlin.jvm.functions.Function4 $transform$inlined
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2$emit$1: int label
androidx.room.RoomTrackingLiveData: java.util.concurrent.atomic.AtomicBoolean invalid
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: kotlin.coroutines.CoroutineContext $context
kotlinx.coroutines.channels.Channel$Factory: java.lang.String DEFAULT_BUFFER_PROPERTY_NAME
androidx.room.QueryInterceptorOpenHelper: java.util.concurrent.Executor queryCallbackExecutor
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: java.lang.Object L$0
kotlinx.coroutines.channels.ReceiveChannel$onReceiveOrNull$1$registerSelectClause1$1: java.lang.Object L$0
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object _state
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1 this$0
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.room.RoomSQLiteQuery: int LONG
androidx.room.InvalidationTracker$refreshRunnable$1: androidx.room.InvalidationTracker this$0
kotlinx.coroutines.DefaultExecutor: kotlinx.coroutines.DefaultExecutor INSTANCE
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.FlowCollector $this_combineInternal
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int ADD_FROZEN
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3: java.lang.Iterable $this_asFlow$inlined
kotlinx.coroutines.internal.WeakMapCtorCache: java.util.concurrent.locks.ReentrantReadWriteLock cacheLock
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.util.concurrent.Executor executor
androidx.room.ForeignKey: int NO_ACTION
kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function0 $arrayFactory
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: int label
kotlinx.coroutines.flow.StartedLazily$command$1$1: kotlinx.coroutines.flow.FlowCollector $$this$flow
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1: kotlinx.coroutines.channels.Channel $resultChannel
androidx.room.DatabaseConfiguration: androidx.room.RoomDatabase$JournalMode journalMode
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: kotlinx.coroutines.channels.ReceiveChannel $this_requireNoNulls
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: int $n
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: long $timeMillis
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: kotlinx.coroutines.channels.ReceiveChannel $other
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1 INSTANCE
androidx.room.DatabaseConfiguration: android.content.Intent multiInstanceInvalidationServiceIntent
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: kotlinx.coroutines.channels.ReceiveChannel $this_withIndex
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: java.lang.Object L$1
kotlinx.coroutines.channels.Channel: kotlinx.coroutines.channels.Channel$Factory Factory
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState BLOCKING
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: kotlinx.coroutines.channels.ReceiveChannel $this_filter
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1 this$0
kotlin.jvm.internal.CallableReference: java.lang.Class owner
kotlinx.coroutines.selects.SelectBuilderImpl$onTimeout$$inlined$Runnable$1: kotlinx.coroutines.selects.SelectBuilderImpl this$0
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $predicate$inlined
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: java.lang.Object result
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol UNDEFINED
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object L$1
androidx.room.InvalidationTracker$ObservedTableTracker: int REMOVE
androidx.room.RoomDatabase$Builder: android.content.Intent multiInstanceInvalidationIntent
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: int I$1
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2: kotlin.jvm.functions.Function2 $transform$inlined
kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.ThreadLocalEventLoop INSTANCE
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.MainCoroutineDispatcher dispatcher
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: int label
kotlinx.coroutines.flow.SharedFlowImpl: int bufferCapacity
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1: kotlinx.coroutines.channels.Channel $observerChannel
kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: kotlinx.coroutines.CancellableContinuation cont
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_RETRY
androidx.room.Room: java.lang.String CURSOR_CONV_SUFFIX
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: java.lang.Object L$0
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.internal.Symbol NOT_IN_STACK
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object L$2
androidx.room.DatabaseConfiguration: java.util.concurrent.Executor queryExecutor
androidx.room.util.TableInfo$Index: java.util.List orders
androidx.room.RoomSQLiteQuery: java.lang.String query
androidx.room.util.TableInfo: java.lang.String name
kotlinx.coroutines.scheduling.DefaultIoScheduler: kotlinx.coroutines.CoroutineDispatcher default
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: java.lang.Object L$1
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: java.lang.Object _affectedNode
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_onEmpty$inlined
kotlinx.coroutines.scheduling.TasksKt: int CORE_POOL_SIZE
androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery$Companion Companion
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1$emit$1: int label
kotlinx.coroutines.DefaultExecutor: int SHUTDOWN_REQ
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: java.lang.Object L$0
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Throwable cause
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: kotlinx.coroutines.Job $job
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3: kotlin.jvm.functions.Function2 $transform$inlined
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: int label
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: kotlinx.coroutines.sync.Semaphore $semaphore
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: java.lang.Object result
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $transform$inlined
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: kotlin.jvm.internal.Ref$ObjectRef $lastValue
kotlinx.coroutines.sync.SemaphoreSegment: java.util.concurrent.atomic.AtomicReferenceArray acquirers
kotlinx.coroutines.flow.AbstractFlow$collect$1: kotlinx.coroutines.flow.AbstractFlow this$0
androidx.room.ColumnInfo$Companion: int UNDEFINED
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$2: java.util.Collection $destination
kotlinx.coroutines.flow.StartedLazily$command$1$1: kotlin.jvm.internal.Ref$BooleanRef $started
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: java.lang.Object L$1
androidx.room.InvalidationTracker: java.lang.Object syncTriggersLock
kotlinx.coroutines.EventLoop: long useCount
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: java.lang.Object L$1
androidx.room.ColumnInfo$Companion: int RTRIM
androidx.lifecycle.LiveData: int mVersion
kotlinx.coroutines.flow.SharedFlowImpl: long replayIndex
kotlinx.coroutines.scheduling.TasksKt: long IDLE_WORKER_KEEP_ALIVE_NS
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: int label
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: int label
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object L$0
androidx.room.OnConflictStrategy: int IGNORE
androidx.room.InvalidationTracker$ObserverWrapper: int[] tableIds
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: java.lang.Object L$0
androidx.room.Index$Order: androidx.room.Index$Order[] $VALUES
androidx.room.SQLiteCopyOpenHelper: java.util.concurrent.Callable copyFromInputStream
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: java.lang.Object L$2
androidx.room.QueryInterceptorStatement: java.lang.String sqlStatement
androidx.room.AutoCloser: androidx.room.AutoCloser$Companion Companion
kotlinx.coroutines.flow.StateFlowImpl$collect$1: int label
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1: kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: kotlin.jvm.functions.Function4 $transform$inlined
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2: kotlinx.coroutines.flow.DistinctFlowImpl this$0
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5: kotlin.sequences.Sequence $this_asFlow$inlined
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: java.lang.Object result
kotlinx.coroutines.internal.Removed: kotlinx.coroutines.internal.LockFreeLinkedListNode ref
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol CLOSED_EMPTY
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1: kotlin.jvm.internal.Ref$BooleanRef $matched
kotlinx.coroutines.flow.FlowKt: java.lang.String DEFAULT_CONCURRENCY_PROPERTY_NAME
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1$emit$1: int label
androidx.room.util.TableInfo$ForeignKey: java.lang.String referenceTable
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$2
androidx.room.AmbiguousColumnResolver$Solution: androidx.room.AmbiguousColumnResolver$Solution NO_SOLUTION
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2: kotlin.jvm.functions.Function5 $transform$inlined$1
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart DEFAULT
kotlinx.coroutines.selects.SelectBuilderImpl$SelectOnCancelling: kotlinx.coroutines.selects.SelectBuilderImpl this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: java.lang.Object L$1
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: int label
androidx.room.MultiInstanceInvalidationClient: androidx.room.IMultiInstanceInvalidationCallback callback
kotlinx.coroutines.flow.internal.StackFrameContinuation: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: int label
kotlinx.coroutines.EventLoop: boolean shared
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1 INSTANCE
androidx.room.InvalidationTracker: androidx.room.MultiInstanceInvalidationClient multiInstanceInvalidationClient
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1 this$0
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2$emit$1: java.lang.Object result
kotlinx.coroutines.DiagnosticCoroutineContextException: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: java.lang.Object L$1
androidx.room.ColumnInfo$Companion: int BLOB
kotlinx.coroutines.scheduling.TaskContextImpl: int taskMode
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: kotlinx.coroutines.channels.ReceiveChannel $this_dropWhile
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask: kotlinx.coroutines.EventLoopImplBase this$0
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $action$inlined
androidx.room.CoroutinesRoom: androidx.room.CoroutinesRoom$Companion Companion
kotlinx.coroutines.flow.FlowKt__CountKt$count$3: java.lang.Object L$0
kotlinx.coroutines.CompletedWithCancellation: kotlin.jvm.functions.Function1 onCancellation
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest this$0
androidx.room.Index$Order: androidx.room.Index$Order DESC
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
androidx.room.RoomDatabase$Builder: java.util.Set migrationStartAndEndVersions
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: java.lang.Object L$0
kotlinx.coroutines.channels.SendElementWithUndeliveredHandler: kotlin.jvm.functions.Function1 onUndeliveredElement
kotlinx.coroutines.selects.SeqNumber: long number
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState DORMANT
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object L$2
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int CAPACITY_BITS
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: int I$0
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart LAZY
androidx.room.RoomDatabase$Builder: java.util.concurrent.TimeUnit autoCloseTimeUnit
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: kotlinx.coroutines.channels.SendChannel $this_trySendBlocking
kotlinx.coroutines.channels.AbstractSendChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater onCloseHandler$FU
kotlinx.coroutines.channels.AbstractChannel$Itr: kotlinx.coroutines.channels.AbstractChannel channel
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object L$1
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _affectedNode$FU
kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList list
androidx.room.AmbiguousColumnResolver$Solution: java.util.List matches
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: boolean $isNewCoroutine
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: kotlinx.coroutines.channels.AbstractChannel this$0
androidx.room.DatabaseConfiguration: boolean multiInstanceInvalidation
kotlinx.coroutines.DefaultExecutor: int debugStatus
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object result
androidx.room.DatabaseConfiguration: boolean requireMigration
androidx.room.OnConflictStrategy$Companion: androidx.room.OnConflictStrategy$Companion $$INSTANCE
androidx.room.ColumnInfo$Companion: int BINARY
kotlinx.coroutines.LazyDeferredCoroutine: kotlin.coroutines.Continuation continuation
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: int label
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: kotlinx.coroutines.flow.SharedFlowImpl this$0
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_drop$inlined
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: java.lang.Object L$1
kotlinx.coroutines.channels.Channel: int OPTIONAL_CHANNEL
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: kotlinx.coroutines.channels.ReceiveChannel $this_drop
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1 this$0
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
androidx.room.TransactionExecutor: java.util.ArrayDeque tasks
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2: kotlin.jvm.internal.Ref$ObjectRef $previousKey
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Default
androidx.room.QueryInterceptorProgram: java.util.List bindArgsCache
kotlinx.coroutines.sync.SemaphoreImpl: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _availablePermits$FU
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$delete$1: java.lang.String $whereClause
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: java.lang.Object result
androidx.room.RoomWarnings: java.lang.String MISMATCHED_GETTER
kotlinx.coroutines.flow.internal.ChannelFlow: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow
kotlinx.coroutines.internal.LockFreeLinkedListKt: int FAILURE
androidx.room.OnConflictStrategy: int FAIL
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: kotlinx.coroutines.sync.Semaphore $semaphore
androidx.room.OnConflictStrategy$Companion: int ABORT
kotlinx.coroutines.channels.ArrayChannel: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: java.lang.Object L$1
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater consumerIndex$FU
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: java.lang.Object L$0
androidx.room.SQLiteCopyOpenHelper: java.lang.String copyFromAssetPath
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: int I$0
kotlinx.coroutines.channels.Channel: int CONFLATED
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: kotlinx.coroutines.flow.internal.SafeCollector $this_checkContext
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: int label
kotlinx.coroutines.flow.SharingConfig: int extraBufferCapacity
kotlinx.coroutines.flow.FlowKt__LimitKt$emitAbort$1: int label
kotlinx.coroutines.flow.internal.ChannelFlowOperator: kotlinx.coroutines.flow.Flow flow
androidx.room.RoomOpenHelper$ValidationResult: boolean isValid
kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: int label
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: androidx.room.RoomDatabase $db
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: kotlinx.coroutines.internal.ThreadContextKt$countAll$1 INSTANCE
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 countAll
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol ENQUEUE_FAILED
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: int label
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlin.jvm.functions.Function2 defaultAreEquivalent
kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1: kotlin.jvm.functions.Function2 $handler
androidx.room.RoomTrackingLiveData: java.util.concurrent.atomic.AtomicBoolean registeredObserver
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: int I$1
kotlinx.coroutines.scheduling.TasksKt: kotlinx.coroutines.scheduling.TaskContext BlockingContext
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1: kotlinx.coroutines.CancellableContinuation $cont
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: java.lang.Object L$1
kotlinx.coroutines.DefaultExecutor: long DEFAULT_KEEP_ALIVE_MS
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol BROKEN
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: int label
kotlinx.coroutines.android.HandlerContext: android.os.Handler handler
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_takeWhile$inlined
kotlinx.coroutines.channels.Channel$Factory: int BUFFERED
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1: kotlin.jvm.functions.Function2 $predicate
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2: kotlin.jvm.functions.Function3 $action
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlin.jvm.functions.Function1 defaultKeySelector
androidx.lifecycle.LiveData: java.lang.Runnable mPostValueRunnable
kotlinx.coroutines.sync.SemaphoreImpl: long deqIdx
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8: long[] $this_asFlow$inlined
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2: java.lang.Object $value$inlined
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: int label
androidx.room.QueryInterceptorOpenHelperFactory: androidx.room.RoomDatabase$QueryCallback queryCallback
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
kotlinx.coroutines.internal.Segment: java.util.concurrent.atomic.AtomicIntegerFieldUpdater cleanedAndPointers$FU
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: java.lang.Object L$0
androidx.room.RoomWarnings: java.lang.String RELATION_TYPE_MISMATCH
androidx.room.util.TableInfo$ForeignKeyWithSequence: int id
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: java.lang.Object result
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1 INSTANCE
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Unconfined
kotlinx.coroutines.InvokeOnCancelling: int _invoked
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: kotlinx.coroutines.internal.LockFreeLinkedListNode oldNext
androidx.room.RoomSQLiteQuery: int POOL_LIMIT
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: long terminationDeadline
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.WorkQueue localQueue
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1: kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1 INSTANCE
kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: java.lang.Object result
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
androidx.room.ColumnInfo: int LOCALIZED
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: int label
kotlinx.coroutines.Job$Key: kotlinx.coroutines.Job$Key $$INSTANCE
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: java.lang.Object $initialValue
kotlinx.coroutines.internal.WeakMapCtorCache: kotlinx.coroutines.internal.WeakMapCtorCache INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: int label
kotlinx.coroutines.scheduling.TasksKt: kotlinx.coroutines.scheduling.SchedulerTimeSource schedulerTimeSource
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: kotlinx.coroutines.flow.Flow $upstream
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1: java.lang.Object result
androidx.room.RoomMasterTable: java.lang.String NAME
androidx.room.FtsOptions$Order: androidx.room.FtsOptions$Order ASC
androidx.room.ForeignKey: int SET_DEFAULT
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: int label
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.ChannelAsFlow: int consumed
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1: kotlin.jvm.functions.Function2 $transform$inlined$1
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: int label
androidx.room.util.StringUtil: java.lang.String[] EMPTY_STRING_ARRAY
androidx.room.DatabaseConfiguration: java.util.concurrent.Executor transactionExecutor
kotlinx.coroutines.flow.internal.AbstractSharedFlowKt: kotlin.coroutines.Continuation[] EMPTY_RESUMES
kotlinx.coroutines.selects.SelectBuilderImpl: kotlin.coroutines.Continuation uCont
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: kotlinx.coroutines.flow.Flow $this_debounceInternal
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1: kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: long J$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2 this$0
androidx.room.InvalidationTracker: androidx.room.RoomDatabase database
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object head
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: int label
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: kotlinx.coroutines.channels.AbstractSendChannel channel
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.room.InvalidationTracker$ObserverWrapper: java.lang.String[] tableNames
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int label
androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.Object L$0
androidx.room.ForeignKey$Companion: int SET_NULL
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder: int index
kotlinx.coroutines.CancellableContinuationImpl: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _decision$FU
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10 this$0
androidx.room.RoomOpenHelper: androidx.room.RoomOpenHelper$Delegate delegate
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$insert$1: java.lang.String $table
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState TERMINATED
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: java.lang.Object L$0
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object L$1
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object countOrElement
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object L$1
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: int label
kotlinx.coroutines.channels.SendElement: kotlinx.coroutines.CancellableContinuation cont
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDbLockedByCurrentThread$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDbLockedByCurrentThread$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: int label
androidx.room.util.ViewInfo: java.lang.String name
androidx.room.AmbiguousColumnResolver$Solution: int coverageOffset
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $action$inlined
kotlinx.coroutines.internal.ArrayQueue: java.lang.Object[] elements
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1: int label
kotlinx.coroutines.JobSupportKt: int TRUE
androidx.room.RoomDatabase$endTransaction$1: androidx.room.RoomDatabase this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: java.lang.Object L$1
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement this$0
androidx.room.RoomSQLiteQuery: long[] longBindings
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_take$inlined
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object L$0
kotlinx.coroutines.SelectJoinOnCompletion: kotlin.jvm.functions.Function1 block
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
androidx.room.MultiInstanceInvalidationClient: androidx.room.InvalidationTracker invalidationTracker
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicReferenceArray buffer
kotlinx.coroutines.scheduling.CoroutineScheduler: long CPU_PERMITS_MASK
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: int label
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: int label
androidx.room.InvalidationLiveDataContainer: androidx.room.RoomDatabase database
kotlinx.coroutines.YieldContext: boolean dispatcherWasUnconfined
kotlinx.coroutines.ChildContinuation: kotlinx.coroutines.CancellableContinuationImpl child
kotlinx.coroutines.internal.LockFreeTaskQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _cur$FU
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: java.lang.Object L$0
androidx.room.RoomDatabase$Builder: boolean allowMainThreadQueries
androidx.room.AutoClosingRoomOpenHelper: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase autoClosingDb
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1: kotlin.jvm.internal.Ref$ObjectRef $accumulator
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.UndispatchedContextCollector: kotlin.jvm.functions.Function2 emitRef
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: java.lang.Object result
androidx.room.ForeignKey$Companion: int SET_DEFAULT
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$1: kotlinx.coroutines.flow.Flow[] $flows
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: androidx.room.RoomSQLiteQuery $$delegate_0
androidx.room.paging.LimitOffsetDataSource: androidx.room.RoomSQLiteQuery mSourceQuery
androidx.room.RoomMasterTable: java.lang.String READ_QUERY
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDatabaseIntegrityOk$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDatabaseIntegrityOk$1 INSTANCE
kotlinx.coroutines.sync.SemaphoreImpl: int permits
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode WRITE_AHEAD_LOGGING
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_runningFold$inlined
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_WAITING_CHILDREN
androidx.room.InvalidationTracker$ObservedTableTracker: int NO_OP
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: long $delayMillis
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$2
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object $value
androidx.room.ColumnInfo: int TEXT
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.util.concurrent.atomic.AtomicIntegerFieldUpdater workerCtl$FU
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$1: kotlin.jvm.internal.Ref$ObjectRef $result$inlined
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1: kotlin.jvm.functions.Function4 $transform$inlined$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: int label
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String baseContinuationImplClass
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_OLDEST
kotlinx.coroutines.flow.internal.AbortFlowException: kotlinx.coroutines.flow.FlowCollector owner
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $flow$inlined
androidx.room.Room: androidx.room.Room INSTANCE
androidx.room.InvalidationTracker: androidx.room.InvalidationTracker$ObservedTableTracker observedTableTracker
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object L$0
androidx.room.BuiltInTypeConverters$State: androidx.room.BuiltInTypeConverters$State DISABLED
kotlinx.coroutines.scheduling.CoroutineScheduler: long CREATED_MASK
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$4
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: int I$0
kotlin.jvm.internal.PropertyReference: boolean syntheticJavaProperty
androidx.room.MultiInstanceInvalidationService$callbackList$1: androidx.room.MultiInstanceInvalidationService this$0
kotlinx.coroutines.BuildersKt__Builders_commonKt: int UNDECIDED
kotlinx.coroutines.DispatchedTaskKt: int MODE_UNINITIALIZED
kotlinx.coroutines.Empty: boolean isActive
androidx.room.BuiltInTypeConverters$State: androidx.room.BuiltInTypeConverters$State INHERITED
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: java.lang.Object L$1
androidx.room.RoomSQLiteQuery: double[] doubleBindings
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: int label
androidx.room.DatabaseConfiguration: boolean allowDestructiveMigrationOnDowngrade
androidx.room.RoomDatabase: java.util.concurrent.Executor internalQueryExecutor
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: java.lang.Object result
kotlinx.coroutines.internal.FastServiceLoader: java.lang.String PREFIX
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1: java.lang.Object result
androidx.room.migration.MigrationImpl: kotlin.jvm.functions.Function1 migrateCallback
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: kotlinx.coroutines.android.HandlerContext this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2: kotlinx.coroutines.flow.Flow[] $flows$inlined
kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1: kotlinx.coroutines.sync.SemaphoreImpl this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: java.lang.Object L$0
androidx.room.AutoClosingRoomOpenHelperFactory: androidx.sqlite.db.SupportSQLiteOpenHelper$Factory delegate
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1: int label
androidx.room.RoomOpenHelper: java.lang.String identityHash
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1: int label
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: kotlinx.coroutines.flow.Flow $this_transformWhile
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol HANDLER_INVOKED
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1: kotlin.jvm.functions.Function2 $predicate$inlined
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: java.lang.Object result
androidx.room.util.ViewInfo: androidx.room.util.ViewInfo$Companion Companion
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: int label
androidx.room.util.TableInfo$Column: java.lang.String defaultValue
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1: kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1 this$0
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$1: java.lang.String $sql
kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$1
androidx.room.MultiInstanceInvalidationService$binder$1: androidx.room.MultiInstanceInvalidationService this$0
androidx.room.RoomDatabase$Builder: java.util.concurrent.Executor queryExecutor
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.selects.SeqNumber selectOpSequenceNumber
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_LATEST
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1: java.lang.Object result
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object LIST_EMPTY
androidx.room.AutoClosingRoomOpenHelperFactory: androidx.room.AutoCloser autoCloser
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: int label
androidx.room.ColumnInfo: androidx.room.ColumnInfo$Companion Companion
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9: kotlin.ranges.IntRange $this_asFlow$inlined
kotlinx.coroutines.internal.ConcurrentLinkedListKt: kotlinx.coroutines.internal.Symbol CLOSED
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1: java.lang.Object result
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: java.lang.Object[] $whereArgs
kotlinx.coroutines.channels.Channel: java.lang.String DEFAULT_BUFFER_PROPERTY_NAME
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object result
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.room.AmbiguousColumnResolver$resolve$4: kotlin.jvm.internal.Ref$ObjectRef $bestSolution
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: kotlin.jvm.functions.Function6 $transform$inlined
kotlinx.coroutines.channels.ProduceKt$awaitClose$2: kotlinx.coroutines.channels.ProduceKt$awaitClose$2 INSTANCE
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: kotlin.jvm.functions.Function5 $transform$inlined
kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.internal.LockFreeTaskQueue queue
androidx.room.SharedSQLiteStatement$stmt$2: androidx.room.SharedSQLiteStatement this$0
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2: kotlin.jvm.functions.Function2 $transform$inlined
kotlinx.coroutines.JobSupportKt: int RETRY
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
kotlinx.coroutines.internal.ThreadContextKt: kotlinx.coroutines.internal.Symbol NO_THREAD_ELEMENTS
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.Flow $flow2
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1 $observer
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted$Companion $$INSTANCE
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2 this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: kotlin.jvm.functions.Function2 $predicate
kotlinx.coroutines.Active: kotlinx.coroutines.Active INSTANCE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1 this$0
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2 this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object L$0
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: java.lang.Object _affectedNode
androidx.room.ForeignKey$Companion: androidx.room.ForeignKey$Companion $$INSTANCE
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3: kotlin.jvm.functions.Function6 $transform$inlined$1
kotlinx.coroutines.scheduling.CoroutineScheduler: long PARKED_VERSION_MASK
androidx.room.RoomTrackingLiveData: boolean inTransaction
kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp: kotlinx.coroutines.internal.LockFreeLinkedListNode next
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand STOP
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: java.lang.Object L$0
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int ADD_SUCCESS
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object L$3
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.flow.internal.ChannelFlowMerge: kotlinx.coroutines.flow.Flow flow
androidx.room.MultiInstanceInvalidationClient: androidx.room.InvalidationTracker$Observer observer
kotlin.jvm.internal.CallableReference: java.lang.String signature
kotlinx.coroutines.DefaultExecutor: int SHUTDOWN
kotlinx.coroutines.channels.Channel$Factory: int RENDEZVOUS
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$5
androidx.room.RoomOpenHelper$Delegate: int version
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: java.lang.String schedulerName
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1: int $count
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1 this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $action$inlined
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: kotlinx.coroutines.flow.CallbackFlowBuilder this$0
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: int label
androidx.room.paging.LimitOffsetDataSource: java.lang.String mCountQuery
androidx.room.ColumnInfo: int UNDEFINED
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.util.concurrent.Callable $callable
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: kotlinx.coroutines.channels.ReceiveChannel $this_mapIndexed
androidx.room.util.TableInfo$Column: java.lang.String type
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_flattenConcat$inlined
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: int label
kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1: kotlin.jvm.functions.Function1 $block
kotlinx.coroutines.CoroutineDispatcher$Key$1: kotlinx.coroutines.CoroutineDispatcher$Key$1 INSTANCE
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
androidx.room.RoomWarnings: java.lang.String INDEX_FROM_EMBEDDED_ENTITY_IS_DROPPED
kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.Delay $$delegate_0
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2: kotlinx.coroutines.flow.Flow[] $flows$inlined
androidx.room.InvalidationTracker: androidx.room.AutoCloser autoCloser
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$1: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: int I$1
kotlinx.coroutines.flow.SharedFlowImpl: long minCollectorIndex
kotlinx.coroutines.flow.ReadonlyStateFlow: kotlinx.coroutines.flow.StateFlow $$delegate_0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: java.lang.Object result
kotlinx.coroutines.scheduling.Task: kotlinx.coroutines.scheduling.TaskContext taskContext
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.SafeCollector: kotlinx.coroutines.flow.FlowCollector collector
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: int label
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand STOP_AND_RESET_REPLAY_CACHE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object L$0
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
androidx.room.AutoClosingRoomOpenHelper: androidx.room.AutoCloser autoCloser
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.room.RoomTrackingLiveData$observer$1: androidx.room.RoomTrackingLiveData this$0
androidx.room.SQLiteCopyOpenHelper$createFrameworkOpenHelper$configuration$1: int $version
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object L$1
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$2: java.lang.String $sql
androidx.room.SQLiteCopyOpenHelper: android.content.Context context
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$1 INSTANCE
kotlinx.coroutines.internal.ArrayQueue: int head
kotlinx.coroutines.internal.Symbol: java.lang.String symbol
androidx.room.SQLiteCopyOpenHelper: androidx.room.DatabaseConfiguration databaseConfiguration
kotlinx.coroutines.flow.FlowKt__CountKt$count$4: kotlin.jvm.internal.Ref$IntRef $i
kotlinx.coroutines.EventLoop_commonKt: long MAX_DELAY_NS
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: java.lang.Object L$0
kotlinx.coroutines.CancelledContinuation: int _resumed
androidx.room.util.TableInfo$Index: androidx.room.util.TableInfo$Index$Companion Companion
kotlinx.coroutines.channels.Channel$Factory: kotlinx.coroutines.channels.Channel$Factory $$INSTANCE
kotlinx.coroutines.flow.internal.ChannelFlow: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.sync.CancelSemaphoreAcquisitionHandler: int index
androidx.room.SQLiteCopyOpenHelper: java.io.File copyFromFile
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: java.lang.Object L$2
kotlinx.coroutines.DispatchedCoroutine: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _decision$FU
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1: kotlin.jvm.functions.Function2 $predicate
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2: kotlin.jvm.functions.Function3 $operation
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: int label
androidx.room.DatabaseConfiguration: java.util.List autoMigrationSpecs
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: int label
kotlinx.coroutines.internal.Segment: long id
androidx.room.util.TableInfo$Index: boolean unique
androidx.room.EntityUpsertionAdapterKt: java.lang.String ErrorCode
kotlinx.coroutines.flow.StartedWhileSubscribed: long replayExpiration
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object L$3
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long TAIL_MASK
kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList list
androidx.room.ColumnInfo: int INTEGER
kotlinx.coroutines.selects.SeqNumber: java.util.concurrent.atomic.AtomicLongFieldUpdater number$FU
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: int label
androidx.room.IMultiInstanceInvalidationService$Stub: int TRANSACTION_unregisterCallback
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow[] $flows$inlined
androidx.room.OnConflictStrategy: int ABORT
kotlinx.coroutines.channels.Channel$Factory: int CONFLATED
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: java.lang.Object $value
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$1: java.lang.reflect.Constructor $constructor$inlined
kotlin.jvm.internal.CallableReference: java.lang.String name
kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp: kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc desc
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int CLOSED_SHIFT
kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.scheduling.DefaultScheduler INSTANCE
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$$inlined$unsafeFlow$1: int $count$inlined
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_dropWhile$inlined
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long HEAD_MASK
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlinx.coroutines.JobSupport$AwaitContinuation: kotlinx.coroutines.JobSupport job
kotlinx.coroutines.CancellableContinuationImplKt: int RESUMED
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1: kotlinx.coroutines.CoroutineScope $$this$launch
androidx.room.util.CursorUtil$wrapMappedColumns$2: int[] $mapping
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: java.lang.Object L$1
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater lastScheduledTask$FU
kotlinx.coroutines.channels.Channel$Factory: int UNLIMITED
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.Object value
androidx.room.QueryInterceptorOpenHelperFactory: androidx.sqlite.db.SupportSQLiteOpenHelper$Factory delegate
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: int label
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: kotlinx.coroutines.flow.FlowCollector $collector
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object _state
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1: java.lang.Object result
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: int label
androidx.room.MultiInstanceInvalidationClient: android.content.Context appContext
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object L$0
androidx.room.RoomDatabase$Builder: java.lang.String name
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.JobSupport$Finishing state
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1: kotlin.jvm.internal.Ref$ObjectRef $accumulator
androidx.room.AmbiguousColumnResolver$Match: kotlin.ranges.IntRange resultRange
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$none$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$0
androidx.room.OnConflictStrategy$Companion: int FAIL
androidx.room.AutoCloser: int refCount
kotlinx.coroutines.DisposeOnCompletion: kotlinx.coroutines.DisposableHandle handle
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: kotlinx.coroutines.channels.Receive receive
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: int label
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1: int label
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: kotlin.jvm.functions.Function3 $transform
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: boolean $inTransaction
kotlinx.coroutines.flow.SharedFlowImpl: int replay
kotlinx.coroutines.channels.AbstractChannel$onReceiveCatching$1: kotlinx.coroutines.channels.AbstractChannel this$0
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1$emit$1: java.lang.Object result
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: java.lang.Object L$0
androidx.room.SQLiteCopyOpenHelperFactory: androidx.sqlite.db.SupportSQLiteOpenHelper$Factory mDelegate
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: androidx.room.AutoCloser autoCloser
kotlinx.coroutines.internal.ExceptionsConstructorKt: int throwableFields
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1: kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3 this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: int label
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1$emit$1: int label
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isTerminated$FU
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1: kotlin.jvm.internal.Ref$IntRef $skipped
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: kotlinx.coroutines.flow.Flow $this_sample
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: int label
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: int label
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1: kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2 this$0
kotlin.jvm.internal.FunctionReference: int arity
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: java.lang.Object L$0
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: java.lang.Object $element
androidx.room.AutoCloser: java.lang.Runnable onAutoCloseCallback
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1: int label
androidx.room.AmbiguousColumnResolver$Solution: androidx.room.AmbiguousColumnResolver$Solution$Companion Companion
androidx.room.RoomTrackingLiveData: java.lang.Runnable refreshRunnable
androidx.room.InvalidationTracker: java.lang.String RESET_UPDATED_TABLES_SQL
kotlinx.coroutines.JobCancellationException: kotlinx.coroutines.Job job
androidx.room.MultiInstanceInvalidationClient: java.lang.String name
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: kotlin.jvm.functions.Function4 $transform$inlined
kotlinx.coroutines.flow.SharedFlowSlot: long index
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler coroutineScheduler
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: java.lang.Object L$1
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.room.MultiInstanceInvalidationClient: java.lang.Runnable removeObserverRunnable
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: int label
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrame$lambda-3$$inlined$Runnable$1: kotlinx.coroutines.CancellableContinuation $cont$inlined
kotlinx.coroutines.BlockingCoroutine: java.lang.Thread blockedThread
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: int label
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$1
androidx.room.util.TableInfo: androidx.room.util.TableInfo$Companion Companion
androidx.room.RoomOpenHelper: androidx.room.DatabaseConfiguration configuration
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1$emit$1: java.lang.Object result
androidx.room.RoomDatabase$Builder: boolean requireMigration
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object result
androidx.room.ColumnInfo: java.lang.String INHERIT_FIELD_NAME
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: int label
kotlinx.coroutines.channels.AbstractChannel$onReceive$1: kotlinx.coroutines.channels.AbstractChannel this$0
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: int label
kotlinx.coroutines.flow.SubscribedSharedFlow: kotlinx.coroutines.flow.SharedFlow sharedFlow
kotlinx.coroutines.CoroutineContextKt$foldCopies$1: kotlinx.coroutines.CoroutineContextKt$foldCopies$1 INSTANCE
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1: kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2 this$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: int I$0
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2 this$0
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1: kotlin.jvm.functions.Function2 $action$inlined
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1: kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.CompletedContinuation: java.lang.Object idempotentResume
androidx.room.CoroutinesRoom$Companion$createFlow$1: androidx.room.RoomDatabase $db
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object L$1
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setLocale$1: java.util.Locale $locale
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
androidx.room.RoomOpenHelper$ValidationResult: java.lang.String expectedFoundMsg
kotlinx.coroutines.CompletedExceptionally: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _handled$FU
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_ALREADY
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: java.lang.Iterable flows
androidx.room.QueryInterceptorStatement: java.util.List bindArgsCache
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 INSTANCE
androidx.room.RoomWarnings: java.lang.String MISSING_INDEX_ON_FOREIGN_KEY_CHILD
kotlinx.coroutines.scheduling.CoroutineScheduler: int CLAIMED
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object result
kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1: kotlinx.coroutines.CancellableContinuation $continuation
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1: kotlin.jvm.functions.Function3 $operation
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: java.lang.Object L$1
androidx.room.RoomDatabase: boolean allowMainThreadQueries
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean singleConsumer
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2: int index
androidx.room.AutoCloser: java.util.concurrent.Executor executor
kotlinx.coroutines.EventLoop_commonKt: int SCHEDULE_COMPLETED
kotlinx.coroutines.internal.ThreadState: java.lang.Object[] values
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: kotlinx.coroutines.flow.internal.ChannelFlow this$0
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: java.lang.Object L$0
androidx.room.RoomSQLiteQuery: int[] bindingTypes
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext collectContext
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2 this$0
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object L$4
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object L$1
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: kotlinx.coroutines.flow.Flow $flow
androidx.lifecycle.LiveData: androidx.arch.core.internal.SafeIterableMap mObservers
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: int label
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicReferenceArray array
androidx.room.AutoCloser: androidx.sqlite.db.SupportSQLiteDatabase delegateDatabase
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: int label
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $VALUES
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5 this$0
kotlinx.coroutines.EventLoop_commonKt: long MAX_MS
androidx.room.InvalidationTracker$ObservedTableTracker: int ADD
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: java.lang.Object result
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: int label
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: java.lang.Object $element
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: java.lang.Object L$1
androidx.room.InvalidationTracker$WeakObserver: androidx.room.InvalidationTracker tracker
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: java.lang.Object L$0
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1 INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: int I$0
androidx.room.MultiInstanceInvalidationClient$serviceConnection$1: androidx.room.MultiInstanceInvalidationClient this$0
kotlinx.coroutines.android.HandlerContext: boolean invokeImmediately
androidx.room.OnConflictStrategy: int REPLACE
androidx.room.InvalidationTracker: java.lang.String TABLE_ID_COLUMN_NAME
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: int label
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.Dispatchers INSTANCE
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.jvm.functions.Function1 safeCast
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: int label
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: java.lang.Object L$0
androidx.room.SharedSQLiteStatement: androidx.room.RoomDatabase database
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: java.lang.Object result
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol TOO_LATE_TO_CANCEL
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object tail
androidx.room.util.TableInfo$ForeignKeyWithSequence: java.lang.String to
kotlinx.coroutines.internal.ThreadState: kotlinx.coroutines.ThreadContextElement[] elements
kotlinx.coroutines.DebugKt: java.lang.String DEBUG_PROPERTY_NAME
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object L$2
kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlinx.coroutines.selects.SelectInstance select
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_retryWhen$inlined
kotlinx.coroutines.CompletedWithCancellation: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: int label
androidx.room.RoomWarnings: java.lang.String INDEX_FROM_PARENT_IS_DROPPED
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$3
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand[] $VALUES
kotlinx.coroutines.scheduling.NanoTimeSource: kotlinx.coroutines.scheduling.NanoTimeSource INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: java.lang.Object result
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: kotlin.jvm.functions.Function3 $block
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$1
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
androidx.room.QueryInterceptorStatement: androidx.sqlite.db.SupportSQLiteStatement delegate
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater blockingTasksInBuffer$FU
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: int label
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: java.lang.Object $cnt
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: int I$0
kotlinx.coroutines.CoroutineName: java.lang.String name
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: int I$1
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode queue
androidx.room.SQLiteCopyOpenHelperFactory: java.io.File mCopyFromFile
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String stackTraceRecoveryClass
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$1: java.lang.Object result
kotlinx.coroutines.ResumeAwaitOnCompletion: kotlinx.coroutines.CancellableContinuationImpl continuation
kotlinx.coroutines.flow.StartedLazily$command$1$1$emit$1: int label
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: int label
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3: kotlinx.coroutines.flow.Flow[] $flowArray$inlined
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: int label
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$needUpgrade$1: int $newVersion
kotlinx.coroutines.channels.ReceiveChannel$onReceiveOrNull$1$registerSelectClause1$1: int label
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2: kotlin.jvm.internal.Ref$ObjectRef $result$inlined
androidx.room.RoomWarnings: java.lang.String CURSOR_MISMATCH
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.JobSupport parent
androidx.room.util.TableInfo$Column: androidx.room.util.TableInfo$Column$Companion Companion
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
androidx.room.util.TableInfo$Column: java.lang.String name
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$2: kotlin.jvm.internal.Ref$ObjectRef $result
kotlinx.coroutines.scheduling.CoroutineScheduler: int BLOCKING_SHIFT
kotlinx.coroutines.flow.internal.ChannelFlow: int capacity
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: int corePoolSize
kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: java.lang.Object pollResult
kotlinx.coroutines.CancellableContinuationImplKt: int SUSPENDED
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
kotlinx.coroutines.internal.ConcurrentKt: java.lang.reflect.Method REMOVE_FUTURE_ON_CANCEL
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $predicate$inlined
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: int label
kotlinx.coroutines.flow.SharedFlowImpl$WhenMappings: int[] $EnumSwitchMapping$0
androidx.room.RoomTrackingLiveData: androidx.room.InvalidationTracker$Observer observer
androidx.room.ColumnInfo: java.lang.String VALUE_UNSPECIFIED
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: int label
androidx.room.util.TableInfo$Column: int createdFrom
kotlinx.coroutines.DisposableFutureHandle: java.util.concurrent.Future future
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: int label
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7: int[] $this_asFlow$inlined
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: int label
androidx.room.util.TableInfo$Index: java.util.List columns
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: int label
kotlinx.coroutines.flow.StartedLazily$command$1$1$emit$1: java.lang.Object result
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object L$3
androidx.room.InvalidationTracker: java.lang.Object trackerLock
kotlinx.coroutines.internal.ClassValueCtorCache: kotlinx.coroutines.internal.ClassValueCtorCache INSTANCE
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1: java.lang.Object result
androidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteDatabase mDatabase
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
kotlinx.coroutines.internal.MainDispatcherLoader: boolean FAST_SERVICE_LOADER_ENABLED
androidx.room.RoomDatabase: androidx.room.InvalidationTracker invalidationTracker
androidx.room.AmbiguousColumnResolver$resolve$1$2: java.util.List $mappingMatches
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int capacity
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: java.lang.Object result
kotlinx.coroutines.flow.ThrowingCollector: java.lang.Throwable e
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: int label
kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$2
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: kotlinx.coroutines.flow.internal.ChannelFlowOperator this$0
kotlinx.coroutines.flow.SharedFlowImpl: int queueSize
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: java.lang.Object L$0
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$execute$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$execute$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3 this$0
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6 this$0
kotlinx.coroutines.DispatchedCoroutine: int _decision
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
kotlinx.coroutines.internal.LockFreeLinkedListKt: int UNDECIDED
kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName$Key Key
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: kotlin.jvm.functions.Function2 block
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1 this$0
androidx.room.RoomDatabase$Builder: java.util.List callbacks
kotlinx.coroutines.EventLoopImplBase: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _delayed$FU
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol REUSABLE_CLAIMED
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object L$0
kotlinx.coroutines.LazyStandaloneCoroutine: kotlin.coroutines.Continuation continuation
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int mask
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: int label
kotlinx.coroutines.CoroutineExceptionHandler: kotlinx.coroutines.CoroutineExceptionHandler$Key Key
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1 this$0
androidx.room.OnConflictStrategy: androidx.room.OnConflictStrategy$Companion Companion
kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: kotlinx.coroutines.selects.SelectBuilderImpl impl
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Failed failed
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object _state
androidx.room.util.CursorUtil$wrapMappedColumns$2: java.lang.String[] $columnNames
androidx.room.RoomDatabase$Builder: android.content.Context context
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1: androidx.room.RoomDatabase $this_startTransactionCoroutine
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlinx.coroutines.flow.internal.NoOpContinuation INSTANCE
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: kotlinx.coroutines.JobSupport this$0
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: java.lang.Object L$0
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1: int label
androidx.room.InvalidationTracker$ObservedTableTracker: int[] triggerStateChanges
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CoroutineDispatcher dispatcher
androidx.room.DatabaseConfiguration: androidx.room.RoomDatabase$PrepackagedDatabaseCallback prepackagedDatabaseCallback
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: java.lang.Object L$1
kotlinx.coroutines.DebugKt: java.lang.String DEBUG_PROPERTY_VALUE_ON
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: kotlin.jvm.functions.Function3 $predicate
androidx.room.ColumnInfo$Companion: androidx.room.ColumnInfo$Companion $$INSTANCE
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
kotlinx.coroutines.flow.internal.ChannelFlowMerge: int concurrency
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlinx.coroutines.channels.Channel $resultChannel
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: java.lang.Object L$0
kotlinx.coroutines.internal.FastServiceLoaderKt: boolean ANDROID_DETECTED
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: java.lang.Object $initialValue
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: int label
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1 this$0
androidx.room.ForeignKey: androidx.room.ForeignKey$Companion Companion
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: int label
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: int maxPoolSize
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: kotlinx.coroutines.flow.FlowCollector $downstream
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: java.lang.Object L$0
kotlinx.coroutines.AbstractTimeSourceKt: kotlinx.coroutines.AbstractTimeSource timeSource
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: java.lang.Throwable e
kotlinx.coroutines.CompletedContinuation: java.lang.Object result
androidx.room.RoomDatabase: java.util.List mCallbacks
androidx.room.util.FtsTableInfo: java.util.Set columns
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: java.lang.Object L$1
androidx.room.DatabaseConfiguration: boolean allowMainThreadQueries
androidx.room.RoomWarnings: java.lang.String MISSING_SCHEMA_LOCATION
androidx.room.InvalidationTracker: java.lang.String[] tablesNames
kotlinx.coroutines.JobSupport$children$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1: kotlinx.coroutines.channels.ReceiveChannel[] $channels
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1$emit$1: kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1 this$0
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2 this$0
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: kotlin.jvm.internal.Ref$ObjectRef $leftoverContext
androidx.room.InvalidationTracker$ObservedTableTracker: long[] tableObservers
kotlinx.coroutines.channels.Channel: int UNLIMITED
kotlinx.coroutines.flow.SubscribedSharedFlow$collect$1: kotlinx.coroutines.flow.SubscribedSharedFlow this$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: java.lang.Object L$0
kotlinx.coroutines.selects.SelectKt: java.lang.Object UNDECIDED
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlinx.coroutines.CancellableContinuation cont
androidx.room.InvalidationTracker$ObservedTableTracker: boolean needsSync
kotlinx.coroutines.internal.LockFreeLinkedList_commonKt: java.lang.Object REMOVE_PREPARED
kotlinx.coroutines.scheduling.CoroutineScheduler: long PARKED_VERSION_INC
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: java.lang.Object result
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
androidx.room.Room: java.lang.String LOG_TAG
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$QueryCallback queryCallback
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.internal.MainDispatcherLoader INSTANCE
kotlinx.coroutines.JobImpl: boolean handlesException
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1: kotlin.jvm.internal.Ref$ObjectRef $result$inlined
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1 this$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.SafeCollectorKt: kotlin.jvm.functions.Function3 emitFun
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: int label
androidx.room.RoomSQLiteQuery: int BLOB
kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.CoroutineDispatcher dispatcher
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1: kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1 this$0
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: java.lang.Object L$0
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: java.lang.Object L$0
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: kotlin.jvm.functions.Function1 $this_bindCancellationFun
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: kotlinx.coroutines.internal.LockFreeLinkedListNode newNode
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode[] a
kotlinx.coroutines.CoroutineExceptionHandler$Key: kotlinx.coroutines.CoroutineExceptionHandler$Key $$INSTANCE
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: boolean Z$0
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: androidx.room.RoomDatabase $db
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: java.lang.Object L$0
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.internal.ResizableAtomicArray workers
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: java.lang.Object L$0
androidx.room.OnConflictStrategy: int ROLLBACK
androidx.room.util.TableInfo: java.util.Set indices
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: kotlin.jvm.functions.Function2 $transactionBlock
androidx.room.util.TableInfo: int CREATED_FROM_ENTITY
androidx.room.util.TableInfo$ForeignKeyWithSequence: int sequence
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: kotlinx.coroutines.channels.ReceiveChannel $ticker
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2 this$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2: kotlin.jvm.functions.Function2 $predicate$inlined
androidx.room.EntityUpsertionAdapter: androidx.room.EntityDeletionOrUpdateAdapter updateAdapter
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelIterator$next0$1: int label
androidx.room.SQLiteCopyOpenHelper: androidx.sqlite.db.SupportSQLiteOpenHelper delegate
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: kotlin.jvm.internal.Ref$ObjectRef $lastValue
kotlinx.coroutines.CancellableContinuationImplKt: int UNDECIDED
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: kotlinx.coroutines.channels.ProducerScope $scope
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater producerIndex$FU
androidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteOpenHelper internalOpenHelper
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1: kotlinx.coroutines.CompletableDeferred $result
kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc: java.lang.Object element
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: int label
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int INITIAL_CAPACITY
androidx.room.InvalidationTracker$ObserverWrapper: androidx.room.InvalidationTracker$Observer observer
androidx.room.MultiInstanceInvalidationClient: java.util.concurrent.Executor executor
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: java.lang.Object L$0
kotlinx.coroutines.sync.SemaphoreImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater tail$FU
kotlinx.coroutines.internal.MainDispatchersKt: boolean SUPPORT_MISSING
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: java.lang.Object L$0
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2: kotlinx.coroutines.flow.FlowCollector $collector
kotlinx.coroutines.selects.SelectBuilderImpl$onTimeout$$inlined$Runnable$1: kotlin.jvm.functions.Function1 $block$inlined
kotlinx.coroutines.channels.ArrayChannel: java.util.concurrent.locks.ReentrantLock lock
kotlinx.coroutines.DefaultExecutor: int FRESH
kotlinx.coroutines.sync.SemaphoreImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater head$FU
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1 this$0
kotlinx.coroutines.internal.ThreadState: int i
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1: int label
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: java.lang.Object L$0
androidx.room.RoomDatabase: java.util.concurrent.Executor internalTransactionExecutor
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: kotlinx.coroutines.flow.Flow $flow2
kotlinx.coroutines.channels.ChannelsKt: java.lang.String DEFAULT_CLOSE_MESSAGE
androidx.room.RoomWarnings: java.lang.String INDEX_FROM_PARENT_FIELD_IS_DROPPED
androidx.room.InvalidationTracker: java.lang.String UPDATE_TABLE_NAME
androidx.room.util.TableInfo$Column: boolean notNull
androidx.room.InvalidationTracker$ObservedTableTracker: androidx.room.InvalidationTracker$ObservedTableTracker$Companion Companion
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: java.lang.Object L$0
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object L$2
kotlinx.coroutines.DebugKt: boolean ASSERTIONS_ENABLED
androidx.room.QueryInterceptorDatabase: androidx.sqlite.db.SupportSQLiteDatabase delegate
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: androidx.room.AutoCloser autoCloser
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $transform$inlined
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: int label
kotlinx.coroutines.CancellableContinuationImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: long $retries
androidx.room.RoomDatabase$beginTransaction$1: androidx.room.RoomDatabase this$0
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: java.lang.Object _originalNext
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: int label
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.internal.LockFreeLinkedListKt: int SUCCESS
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Companion Companion
androidx.room.InvalidationTracker: java.util.Map shadowTablesMap
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String baseContinuationImplClassName
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: int label
androidx.lifecycle.LiveData: boolean mDispatchingValue
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicLongFieldUpdater _state$FU
kotlinx.coroutines.channels.AbstractChannel$ReceiveElementWithUndeliveredHandler: kotlin.jvm.functions.Function1 onUndeliveredElement
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState CPU_ACQUIRED
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: int label
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1: kotlinx.coroutines.channels.ProducerScope $$this$produce
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: java.lang.String $table
kotlinx.coroutines.IncompleteStateBox: kotlinx.coroutines.Incomplete state
androidx.room.MultiInstanceInvalidationService: java.util.Map clientNames
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _state
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: int label
kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: int receiveMode
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlin.jvm.internal.Ref$ObjectRef $previousFlow
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: java.lang.Object L$0
androidx.room.DatabaseConfiguration: androidx.room.RoomDatabase$MigrationContainer migrationContainer
kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.ChildJob childJob
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] slots
kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: kotlinx.coroutines.selects.SelectInstance select
kotlinx.coroutines.CoroutineContextKt: java.lang.String DEBUG_THREAD_NAME_SEPARATOR
androidx.room.MultiInstanceInvalidationClient: java.util.concurrent.atomic.AtomicBoolean stopped
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: java.lang.Object L$0
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$2: long $numBytes
androidx.room.RoomDatabase: java.util.Map typeConverters
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlinx.coroutines.EventLoop_commonKt: int SCHEDULE_DISPOSED
androidx.room.BuiltInTypeConverters$State: androidx.room.BuiltInTypeConverters$State ENABLED
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: java.lang.Object result
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: kotlinx.coroutines.channels.Channel $observerChannel
kotlinx.coroutines.flow.SubscribedSharedFlow$collect$1: int label
androidx.room.AutoCloser: java.lang.Runnable autoCloser
kotlinx.coroutines.flow.DistinctFlowImpl: kotlin.jvm.functions.Function1 keySelector
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1$emit$1: java.lang.Object result
androidx.room.RoomSQLiteQuery: byte[][] blobBindings
androidx.room.ColumnInfo: int NOCASE
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object L$1
androidx.room.OnConflictStrategy$Companion: int IGNORE
kotlinx.coroutines.DebugKt: java.lang.String STACKTRACE_RECOVERY_PROPERTY_NAME
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: java.lang.Object result
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand START
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object L$1
kotlinx.coroutines.internal.InlineList: java.lang.Object holder
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: kotlin.jvm.functions.Function2 $predicate
kotlinx.coroutines.InvokeOnCancel: kotlin.jvm.functions.Function1 handler
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1 this$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: java.lang.Object L$1
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: java.lang.Object L$0
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: kotlinx.coroutines.channels.Channel $resultChannel
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: java.lang.Object L$0
androidx.room.RoomSQLiteQuery: int argCount
kotlinx.coroutines.scheduling.TasksKt: int MAX_POOL_SIZE
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart UNDISPATCHED
kotlinx.coroutines.DebugKt: java.util.concurrent.atomic.AtomicLong COROUTINE_ID
kotlinx.coroutines.JobSupport: java.lang.Object _state
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol POLL_FAILED
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $transform$inlined
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: int label
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1: int label
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1: kotlin.jvm.functions.Function3 $transform$inlined
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation continuation
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function4 $predicate$inlined
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
kotlinx.coroutines.internal.AtomicDesc: kotlinx.coroutines.internal.AtomicOp atomicOp
androidx.room.AutoClosingRoomOpenHelper: androidx.sqlite.db.SupportSQLiteOpenHelper delegate
kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp: kotlinx.coroutines.internal.LockFreeLinkedListNode affected
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: kotlin.jvm.functions.Function6 $transform$inlined
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.CompletedContinuation: kotlin.jvm.functions.Function1 onCancellation
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1$emit$1: java.lang.Object result
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$2: int $version
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.flow.FlowKt__LimitKt$emitAbort$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: kotlinx.coroutines.channels.ReceiveChannel $this_takeWhile
androidx.room.EntityUpsertionAdapterKt: java.lang.String ErrorMsg
kotlinx.coroutines.GlobalScope: kotlinx.coroutines.GlobalScope INSTANCE
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1: int label
androidx.room.BuiltInTypeConverters$State: androidx.room.BuiltInTypeConverters$State[] $VALUES
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: kotlinx.coroutines.flow.SubscribedFlowCollector this$0
androidx.room.RoomOpenHelper: java.lang.String legacyHash
androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy: android.os.IBinder mRemote
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8 this$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2: kotlin.jvm.internal.Ref$ObjectRef $accumulator
androidx.room.RoomMasterTable: java.lang.String TABLE_NAME
kotlinx.coroutines.channels.AbstractSendChannel$onSend$1: kotlinx.coroutines.channels.AbstractSendChannel this$0
androidx.room.IMultiInstanceInvalidationCallback$Stub: int TRANSACTION_onInvalidation
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1: int label
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$1 INSTANCE
androidx.room.FtsOptions: java.lang.String TOKENIZER_UNICODE61
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object L$1
androidx.room.AutoCloser: android.os.Handler handler
kotlinx.coroutines.flow.FlowKt__CountKt$count$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object L$1
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: kotlinx.coroutines.flow.SharedFlowImpl flow
kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId$Key Key
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: kotlin.jvm.functions.Function6 $transform$inlined
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: int label
kotlinx.coroutines.DefaultExecutor: long KEEP_ALIVE_NANOS
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext lastEmissionContext
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: kotlin.jvm.functions.Function2 $predicate
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1 this$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: java.lang.Object result
androidx.room.util.TableInfo: int CREATED_FROM_DATABASE
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1 this$0
androidx.room.RoomDatabase: java.util.concurrent.locks.ReentrantReadWriteLock readWriteLock
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.NonDisposableHandle INSTANCE
kotlinx.coroutines.InvokeOnCancelling: kotlin.jvm.functions.Function1 handler
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: kotlinx.coroutines.CancellableContinuation $continuation
kotlinx.coroutines.scheduling.CoroutineScheduler: long idleWorkerKeepAliveNs
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int index
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object L$0
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: kotlinx.coroutines.flow.FlowCollector $$this$flow
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: int label
kotlinx.coroutines.ResumeUndispatchedRunnable: kotlinx.coroutines.CancellableContinuation continuation
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: java.lang.Object L$1
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _prev$FU
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2$emit$1: kotlinx.coroutines.flow.CancellableFlowImpl$collect$2 this$0
androidx.room.RoomSQLiteQuery: int STRING
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: int label
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_runningReduce$inlined
kotlinx.coroutines.CompletedContinuation: java.lang.Throwable cancelCause
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: kotlinx.coroutines.flow.MutableSharedFlow $shared
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: java.lang.Object L$1
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: int version
androidx.room.RoomMasterTable: java.lang.String COLUMN_ID
kotlinx.coroutines.EventLoopImplBase: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _queue$FU
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_withIndex$inlined
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1: kotlin.jvm.internal.Ref$ObjectRef $state
kotlinx.coroutines.channels.ArrayChannel: int size
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: kotlin.jvm.functions.Function2 $predicate
androidx.room.TransactionExecutor: java.util.concurrent.Executor executor
androidx.room.DatabaseConfiguration: java.util.Set migrationNotRequiredFrom
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: int label
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _affectedNode$FU
androidx.room.RoomWarnings: java.lang.String MISSING_INDEX_ON_JUNCTION
kotlinx.coroutines.ResumeUndispatchedRunnable: kotlinx.coroutines.CoroutineDispatcher dispatcher
androidx.room.util.TableInfo$ForeignKey: java.util.List referenceColumnNames
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: int label
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1: int label
androidx.room.ColumnInfo$Companion: int LOCALIZED
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: java.lang.Object $cnt
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_catch$inlined
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1: kotlin.jvm.functions.Function2 $predicate$inlined
androidx.room.Database: java.lang.Class[] entities()
kotlinx.coroutines.flow.StartedWhileSubscribed: long access$getReplayExpiration$p(kotlinx.coroutines.flow.StartedWhileSubscribed)
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: FlowKt__ErrorsKt$retry$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.CallbackFlowBuilder: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode takeAffectedNode(kotlinx.coroutines.internal.OpDescriptor)
kotlinx.coroutines.Deferred: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: long setMaximumSize(long)
kotlinx.coroutines.internal.LockFreeLinkedListHead: void forEach(kotlin.jvm.functions.Function1)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean isExecPerConnectionSQLSupported()
androidx.room.AmbiguousColumnResolver$Match: java.util.List getResultIndices()
kotlinx.coroutines.DisposableFutureHandle: DisposableFutureHandle(java.util.concurrent.Future)
kotlinx.coroutines.internal.InlineList: boolean equals(java.lang.Object)
kotlinx.coroutines.sync.SemaphoreKt: java.lang.Object withPermit(kotlinx.coroutines.sync.Semaphore,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
androidx.room.util.TableInfo$Index$Companion: TableInfo$Index$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
androidx.room.util.TableInfo$Column: void getAffinity$annotations()
kotlinx.coroutines.flow.FlowKt__MergeKt: void getDEFAULT_CONCURRENCY$annotations()
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlin.jvm.functions.Function1 consumesAll(kotlinx.coroutines.channels.ReceiveChannel[])
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
kotlinx.coroutines.flow.FlowKt: void subscribe(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,int,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForLong$1: java.lang.Long invoke(androidx.sqlite.db.SupportSQLiteStatement)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: void getSlots$annotations()
kotlinx.coroutines.selects.SelectInstance: void resumeSelectWithException(java.lang.Throwable)
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: ChannelsKt__ChannelsKt$trySendBlocking$2(kotlinx.coroutines.channels.SendChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean isDbLockedByCurrentThread()
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
androidx.room.ForeignKey: int onDelete()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.room.Insert: java.lang.Class entity()
kotlinx.coroutines.JobKt__JobKt: void cancelChildren$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1: ExceptionsConstructorKt$safeCtor$1(kotlin.jvm.functions.Function1)
androidx.room.TransactionElement: TransactionElement(kotlin.coroutines.ContinuationInterceptor)
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
kotlinx.coroutines.channels.ProducerScope: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlinx.coroutines.JobKt__JobKt: void cancel$default(kotlinx.coroutines.Job,java.lang.String,java.lang.Throwable,int,java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
androidx.constraintlayout.widget.Barrier: void setType(int)
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelResult: boolean equals(java.lang.Object)
kotlinx.coroutines.EventLoopImplBase: kotlinx.coroutines.DisposableHandle scheduleInvokeOnTimeout(long,java.lang.Runnable)
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.room.RoomWarnings$Companion: RoomWarnings$Companion()
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalStyle(int)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: FlowKt__DelayKt$fixedPeriodTicker$3(long,long,kotlin.coroutines.Continuation)
androidx.room.ForeignKey: int onUpdate()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: ChannelsKt__DeprecatedKt$distinct$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: ThreadContextKt$updateState$1()
androidx.room.util.TableInfo$ForeignKeyWithSequence: java.lang.String getFrom()
com.google.android.material.chip.Chip: void setGravity(int)
kotlinx.coroutines.channels.ChannelCoroutine: void cancel()
kotlinx.coroutines.flow.SharedFlowSlot: boolean allocateLocked(kotlinx.coroutines.flow.SharedFlowImpl)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.Empty: java.lang.String toString()
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CancellableContinuation: boolean isActive()
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow channelFlow(kotlin.jvm.functions.Function2)
kotlinx.coroutines.DisposeOnCancel: DisposeOnCancel(kotlinx.coroutines.DisposableHandle)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode getOriginalNext()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.coroutines.Continuation)
androidx.room.MultiInstanceInvalidationService: android.os.IBinder onBind(android.content.Intent)
kotlinx.coroutines.JobSupport: int startInternal(java.lang.Object)
kotlinx.coroutines.UndispatchedCoroutine: boolean clearThreadContext()
kotlinx.coroutines.CoroutineDispatcher$Key$1: kotlinx.coroutines.CoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.JobSupport: void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode)
kotlinx.coroutines.CancellableContinuation: kotlin.coroutines.CoroutineContext getContext()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void setForeignKeyConstraintsEnabled(boolean)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel distinctBy$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.flow.SharedFlowSlot: SharedFlowSlot()
kotlinx.coroutines.channels.ChannelKt: java.lang.Object onFailure-WpGqRn0(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: FlowKt__MergeKt$flatMapLatest$1(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.SafeCollector: SafeCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.sync.SemaphoreImpl: kotlin.jvm.functions.Function1 access$getOnCancellationRelease$p(kotlinx.coroutines.sync.SemaphoreImpl)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: ChannelsKt__DeprecatedKt$map$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Deferred async$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.channels.ChannelIterator iterator()
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: ChannelLimitedFlowMerge(java.lang.Iterable,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.channels.ChannelCoroutine: ChannelCoroutine(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel,boolean,boolean)
kotlinx.coroutines.channels.AbstractSendChannel: boolean offer(java.lang.Object)
kotlinx.coroutines.JobSupport$Finishing: void setRootCause(java.lang.Throwable)
kotlinx.coroutines.channels.ChannelResult$Failed: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.Deferred: java.util.concurrent.CancellationException getCancellationException()
androidx.room.RoomSQLiteQuery: void getDoubleBindings$annotations()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function6)
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
kotlinx.coroutines.CoroutineScopeKt: java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.room.InvalidationTracker: void stopTrackingTable(androidx.sqlite.db.SupportSQLiteDatabase,int)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void clearBindings()
kotlinx.coroutines.sync.CancelSemaphoreAcquisitionHandler: java.lang.String toString()
kotlinx.coroutines.DefaultExecutor: DefaultExecutor()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.internal.ConcurrentKt: boolean removeFutureOnCancel(java.util.concurrent.Executor)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
androidx.room.migration.MigrationImpl: void migrate(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.migration.AutoMigrationSpec: void onPostMigrate(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.RoomMasterTable: RoomMasterTable()
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1: FlowKt__TransformKt$filter$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.scheduling.CoroutineScheduler: int getCreatedWorkers()
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
kotlin.random.Random: Random()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.Removed removed()
kotlinx.coroutines.AbstractTimeSource: void unpark(java.lang.Thread)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
androidx.room.SQLiteCopyOpenHelper: void copyDatabaseFile(java.io.File,boolean)
kotlinx.coroutines.AbstractTimeSource: void unregisterTimeLoopThread()
androidx.core.os.CancellationSignal$Api16Impl: android.os.CancellationSignal createCancellationSignal()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlinx.coroutines.channels.Receive: kotlin.jvm.functions.Function1 resumeOnCancellationFun(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function7)
androidx.room.util.TableInfo: int hashCode()
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: AbstractChannel$RemoveReceiveOnCancel(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.channels.Receive)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.room.RoomOpenHelper$Companion: boolean hasRoomMasterTable$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.flow.SharingCommand: SharingCommand(java.lang.String,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement(java.lang.String,androidx.room.AutoCloser)
kotlinx.coroutines.flow.FlowKt: java.lang.Object lastOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: kotlinx.coroutines.flow.Flow receiveAsFlow(kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow flatMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$1: java.lang.Object get(java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.flow.StateFlowImpl: kotlinx.coroutines.flow.StateFlowSlot[] createSlotArray(int)
androidx.room.AmbiguousColumnResolver$Solution: int compareTo(androidx.room.AmbiguousColumnResolver$Solution)
kotlinx.coroutines.channels.RendezvousChannel: boolean isBufferAlwaysFull()
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.channels.Closed getPollResult()
kotlinx.coroutines.flow.internal.ChannelFlow: kotlinx.coroutines.flow.Flow dropChannelOperators()
com.google.android.material.button.MaterialButton: int getInsetBottom()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$needUpgrade$1: java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.JobSupport: boolean getHandlesException$kotlinx_coroutines_core()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow runningFold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder: LockFreeTaskQueueCore$Placeholder(int)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaximumSize$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaximumSize$1(long)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consumeEach(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.ChannelFlowBuilder: java.lang.String toString()
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1: java.lang.Object invoke(java.lang.Object)
kotlin.jvm.internal.FunctionReference: int getArity()
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
kotlinx.coroutines.EventLoopImplPlatform: void unpark()
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel distinct(kotlinx.coroutines.channels.ReceiveChannel)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void bindLong(int,long)
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: void bindDouble(int,double)
androidx.core.view.WindowCompat$Api30Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
kotlinx.coroutines.JobCancellingNode: JobCancellingNode()
kotlinx.coroutines.channels.ProducerScope: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
androidx.lifecycle.LiveData: void setValue(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: FlowKt__ZipKt$combineTransformUnsafe$1$1(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.internal.Symbol tryResumeImpl(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharingConfig: SharingConfig(kotlinx.coroutines.flow.Flow,int,kotlinx.coroutines.channels.BufferOverflow,kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1: FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: java.lang.String toString()
kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)
com.google.android.material.chip.Chip: float getIconStartPadding()
kotlinx.coroutines.channels.ChannelCoroutine: boolean offer(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.RoomOpenHelper: void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2: java.lang.Long invoke(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
androidx.room.MultiInstanceInvalidationService: void setMaxClientId$room_runtime_release(int)
kotlinx.coroutines.JobSupport: boolean handleJobException(java.lang.Throwable)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
kotlinx.coroutines.flow.SharedFlowImpl: long getBufferEndIndex()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7(int[])
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: ChannelsKt__Channels_commonKt$toList$1(kotlin.coroutines.Continuation)
com.google.android.material.checkbox.MaterialCheckBox: void setStateDescription(java.lang.CharSequence)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
kotlinx.coroutines.scheduling.DefaultIoScheduler: DefaultIoScheduler()
kotlinx.coroutines.channels.SendElement: java.lang.Object getPollResult()
kotlinx.coroutines.ChildJob: void parentCancelled(kotlinx.coroutines.ParentJob)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.JobSupport: java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: FlowKt__ZipKt$combineTransform$6$2(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object last(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.MainCoroutineDispatcher tryCreateDispatcher(kotlinx.coroutines.internal.MainDispatcherFactory,java.util.List)
kotlinx.coroutines.internal.SegmentOrClosed: kotlinx.coroutines.internal.Segment getSegment-impl(java.lang.Object)
kotlinx.coroutines.AbstractTimeSourceKt: kotlinx.coroutines.AbstractTimeSource getTimeSource()
kotlinx.coroutines.internal.LockFreeTaskQueue: java.util.List map(kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ExceptionsConstructorKt: int fieldsCount(java.lang.Class,int)
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: FlowKt__MigrationKt$delayFlow$1(long,kotlin.coroutines.Continuation)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
kotlinx.coroutines.BuildersKt: java.lang.Object runBlocking$default(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.room.EntityUpsertionAdapter: void checkUniquenessException(android.database.sqlite.SQLiteConstraintException)
androidx.room.RoomDatabaseKt: java.lang.Object withTransaction(androidx.room.RoomDatabase,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
androidx.room.TypeConverters: java.lang.Class[] value()
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4)
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.DisposableHandle installParentHandle()
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1(kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setDefaultLocales(androidx.core.os.LocaleListCompat)
androidx.cardview.widget.CardView: float getRadius()
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel(int)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2: FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2(kotlinx.coroutines.flow.FlowCollector)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
kotlinx.coroutines.Dispatchers: void getIO$annotations()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
androidx.room.RoomDatabase: android.database.Cursor query$default(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object last(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object access$receiveSuspend(kotlinx.coroutines.channels.AbstractChannel,int,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void bindNull(int)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.room.MultiInstanceInvalidationClient: java.lang.String getName()
androidx.room.EntityInsertionAdapter: void insert(java.lang.Iterable)
androidx.room.RoomDatabase: java.util.Map getRequiredTypeConverters()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
kotlin.jvm.internal.MutablePropertyReference1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharedFlowImpl: kotlin.coroutines.Continuation[] access$findSlotsToResumeLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlin.coroutines.Continuation[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: ChannelsKt__DeprecatedKt$elementAt$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.Send: void undeliveredElement()
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
androidx.room.CoroutinesRoom$Companion$execute$4$job$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler: long incrementBlockingTasks()
kotlinx.coroutines.internal.ResizableAtomicArray: ResizableAtomicArray(int)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
kotlinx.coroutines.channels.ChannelResult$Companion: ChannelResult$Companion()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: ChannelsKt__DeprecatedKt$filterNot$1(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineExceptionHandler: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.room.MultiInstanceInvalidationClient: void setUpRunnable$lambda$1(androidx.room.MultiInstanceInvalidationClient)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1: FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1(kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode getAffectedNode()
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1()
androidx.room.RoomSQLiteQuery: int getArgCount()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1: FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.Unconfined: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
kotlinx.coroutines.channels.ChannelResult: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)
androidx.room.InvalidationTracker: androidx.room.AutoCloser access$getAutoCloser$p(androidx.room.InvalidationTracker)
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
kotlinx.coroutines.channels.ChannelCoroutine: boolean close(java.lang.Throwable)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.google.android.material.chip.Chip: void setLines(int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1: FlowKt__MergeKt$flattenConcat$1$1(kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(java.lang.Iterable,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.QueryInterceptorOpenHelper: void setWriteAheadLoggingEnabled(boolean)
kotlinx.coroutines.JobSupport$Finishing: java.util.List sealLocked(java.lang.Throwable)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
kotlinx.coroutines.internal.DispatchedContinuationKt: boolean yieldUndispatched(kotlinx.coroutines.internal.DispatchedContinuation)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.StateFlowImpl: boolean updateState(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__LimitKt: java.lang.Object access$emitAbort$FlowKt__LimitKt(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.QueryInterceptorDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal)
androidx.room.InvalidationTracker$Companion: void getSELECT_UPDATED_TABLES_SQL$room_runtime_release$annotations()
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext$Key getKey()
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object firstOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
kotlinx.coroutines.android.HandlerDispatcher: java.lang.Object delay(long,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: java.lang.Object poll(kotlinx.coroutines.channels.ReceiveChannel)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel take(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.ArrayChannel: ArrayChannel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.selects.SelectClause1 getOnReceive()
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void isClosedForReceive$annotations()
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
kotlinx.coroutines.DeferredCoroutine: kotlinx.coroutines.selects.SelectClause1 getOnAwait()
kotlinx.coroutines.android.HandlerDispatcherKt: void updateChoreographerAndPostFrameCallback(kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow debounce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.RoomTrackingLiveData: java.util.concurrent.Callable getComputeFunction()
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.String toString()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.Unconfined: java.lang.String toString()
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object hasNext(kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core()
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1: FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1(kotlin.jvm.internal.Ref$ObjectRef)
androidx.room.RoomDatabase: void internalEndTransaction()
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function7)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUnintercepted(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted WhileSubscribed(long,long)
kotlinx.coroutines.JobSupport: void completeStateFinalization(kotlinx.coroutines.Incomplete,java.lang.Object)
androidx.room.AmbiguousColumnResolver$ResultColumn: boolean equals(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$execute$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteStatement)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$execute$1: AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$execute$1()
kotlinx.coroutines.ThreadContextElementKt: java.lang.Object isPresent$$forInline(java.lang.ThreadLocal,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobNode: boolean isActive()
kotlinx.coroutines.internal.ScopeCoroutine: ScopeCoroutine(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName: androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
androidx.room.AmbiguousColumnResolver$resolve$1$2: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.UndispatchedMarker: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: CombineKt$zipImpl$1$1$2$1$1(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectInstance: void disposeOnSelect(kotlinx.coroutines.DisposableHandle)
kotlinx.coroutines.CancellableContinuationImpl: boolean trySuspend()
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
androidx.appcompat.view.ContextThemeWrapper$Api17Impl: android.content.Context createConfigurationContext(androidx.appcompat.view.ContextThemeWrapper,android.content.res.Configuration)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow callbackFlow(kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object reduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] values()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.PorterDuff$Mode getButtonIconTintMode()
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.SharedFlow shareIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,int)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow,java.lang.Object)
com.google.android.material.button.MaterialButtonToggleGroup: void setEnabled(boolean)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
kotlinx.coroutines.channels.ArrayChannel: boolean isBufferAlwaysEmpty()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumes$1: java.lang.Object invoke(java.lang.Object)
androidx.room.Junction: java.lang.Class value()
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
kotlinx.coroutines.DispatchedCoroutine: java.lang.Object getResult()
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
kotlinx.coroutines.CompletedExceptionally: boolean makeHandled()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.EventLoopKt: void platformAutoreleasePool(kotlin.jvm.functions.Function0)
androidx.room.util.ViewInfo$Companion: androidx.room.util.ViewInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: kotlinx.coroutines.ThreadContextElement invoke(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.channels.Channel: boolean isClosedForSend()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task pollGlobalQueues()
kotlinx.coroutines.CoroutineExceptionHandlerKt: java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable)
androidx.room.RoomDatabase: void beginTransaction()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
androidx.room.CoroutinesRoom: java.lang.Object execute(androidx.room.RoomDatabase,boolean,android.os.CancellationSignal,java.util.concurrent.Callable,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletableDeferred: void cancel()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: android.net.Uri getNotificationUri()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()
androidx.sqlite.db.framework.FrameworkSQLiteDatabase$Api30Impl: void execPerConnectionSQL(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Object[])
kotlinx.coroutines.internal.LockFreeLinkedListNode: void validateNode$kotlinx_coroutines_core(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: java.lang.Object invoke(kotlin.Unit,kotlin.coroutines.Continuation)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: java.lang.Object prepare(java.lang.Object)
kotlinx.coroutines.Deferred: boolean isCompleted()
kotlinx.coroutines.CoroutineExceptionHandlerKt: void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.String toString()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
kotlinx.coroutines.DeferredCoroutine: java.lang.Object await$suspendImpl(kotlinx.coroutines.DeferredCoroutine,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.room.SharedSQLiteStatement: java.lang.String createQuery()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.selects.SelectClause0 getOnJoin()
kotlinx.coroutines.CompletableJob: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filter(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.AbstractSendChannel: void access$registerSelectSend(kotlinx.coroutines.channels.AbstractSendChannel,kotlinx.coroutines.selects.SelectInstance,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.room.AutoCloser: void setDelegateOpenHelper(androidx.sqlite.db.SupportSQLiteOpenHelper)
kotlinx.coroutines.flow.MutableStateFlow: boolean tryEmit(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.DelayKt: java.lang.Object awaitCancellation(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object first(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectKt: void getNOT_SELECTED$annotations()
kotlinx.coroutines.JobSupport: void access$continueCompleting(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: ChannelsKt__DeprecatedKt$count$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListKt: void getFAILURE$annotations()
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
kotlinx.coroutines.flow.StateFlowKt: void getPENDING$annotations()
kotlinx.coroutines.internal.ThreadSafeHeap: void addLast(kotlinx.coroutines.internal.ThreadSafeHeapNode)
kotlinx.coroutines.ThreadContextElementKt: java.lang.Object ensurePresent$$forInline(java.lang.ThreadLocal,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase: void endTransaction()
kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KProperty1$Getter getGetter()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1$emit$1: FlowKt__DelayKt$sample$2$values$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.DelayKt: long toDelayMillis-LRDsOJo(long)
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
kotlinx.coroutines.Job: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: LockFreeLinkedListNode$AbstractAtomicDesc()
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: RoomSQLiteQuery$Companion$copyFrom$1(androidx.room.RoomSQLiteQuery)
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KProperty getReflected()
kotlinx.coroutines.internal.LockFreeLinkedListHead: java.lang.Void remove()
kotlinx.coroutines.flow.SubscribedSharedFlow$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.RoomOpenHelper: void updateIdentity(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.CompletableJob: boolean isCancelled()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorResume(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.CancellableContinuation: boolean isCancelled()
kotlinx.coroutines.flow.FlowKt__EmittersKt: kotlinx.coroutines.flow.Flow transform(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: CallbackFlowBuilder$collectTo$1(kotlinx.coroutines.flow.CallbackFlowBuilder,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuationImpl: boolean resetStateReusable()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8(long[])
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.internal.Symbol access$getNONE$p()
kotlinx.coroutines.Job: boolean isActive()
kotlinx.coroutines.channels.AbstractSendChannel$onSend$1: void registerSelectClause2(kotlinx.coroutines.selects.SelectInstance,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.Job getJob(kotlin.coroutines.CoroutineContext)
androidx.room.EntityUpsertionAdapter: java.lang.Long[] upsertAndReturnIdsArrayBox(java.util.Collection)
androidx.room.util.FtsTableInfo$Companion: FtsTableInfo$Companion()
androidx.room.QueryInterceptorDatabase: java.util.List getAttachedDbs()
kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.EventLoop getEventLoop$kotlinx_coroutines_core()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp makeCondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
com.google.android.material.chip.Chip: void setChipTextResource(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: java.lang.String toString()
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
androidx.room.migration.Migration: Migration(int,int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
kotlinx.coroutines.EventLoopImplBase: java.lang.Runnable dequeue()
com.google.android.material.chip.Chip: float getCloseIconSize()
kotlinx.coroutines.DispatchedTask: void handleFatalException(java.lang.Throwable,java.lang.Throwable)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
kotlinx.coroutines.flow.FlowKt__CollectionKt: java.lang.Object toSet$default(kotlinx.coroutines.flow.Flow,java.util.Set,kotlin.coroutines.Continuation,int,java.lang.Object)
kotlinx.coroutines.internal.SegmentOrClosed: kotlinx.coroutines.internal.SegmentOrClosed box-impl(java.lang.Object)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] getSlots()
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object acquireSlowPath(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ThreadSafeHeap: void clear()
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
kotlinx.coroutines.internal.InlineList: kotlinx.coroutines.internal.InlineList box-impl(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper: java.lang.String getDatabaseName()
kotlinx.coroutines.scheduling.DefaultIoScheduler: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p()
androidx.room.util.TableInfo$ForeignKey: TableInfo$ForeignKey(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List)
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: EventLoopImplBase$DelayedTaskQueue(long)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10,kotlin.coroutines.Continuation)
androidx.room.SQLiteCopyOpenHelper: androidx.sqlite.db.SupportSQLiteOpenHelper getDelegate()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable$default(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.sync.SemaphoreImpl: boolean addAcquireToQueue(kotlinx.coroutines.CancellableContinuation)
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
androidx.room.util.CursorUtil: int findColumnIndexBySuffix(android.database.Cursor,java.lang.String)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object first(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.room.IMultiInstanceInvalidationService: void broadcastInvalidation(int,java.lang.String[])
kotlinx.coroutines.channels.AbstractChannel: void onCancelIdempotentList-w-w6eGU(java.lang.Object,kotlinx.coroutines.channels.Closed)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: kotlinx.coroutines.internal.ConcurrentLinkedListNode close(kotlinx.coroutines.internal.ConcurrentLinkedListNode)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
kotlinx.coroutines.ChildJob: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
androidx.room.SQLiteCopyOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getReadableDatabase()
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder setJournalMode(androidx.room.RoomDatabase$JournalMode)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: java.util.List getAttachedDbs()
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filterIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery copyFrom(androidx.sqlite.db.SupportSQLiteQuery)
kotlinx.coroutines.JobSupport: void promoteEmptyToNodeList(kotlinx.coroutines.Empty)
kotlinx.coroutines.Job: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
kotlinx.coroutines.ThreadContextElement: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
com.google.android.material.appbar.MaterialToolbar: void setLogoScaleType(android.widget.ImageView$ScaleType)
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: void bindNull(int)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextDirection(android.view.View)
kotlinx.coroutines.selects.SelectBuilderImpl$PairSelectOp: java.lang.Object perform(java.lang.Object)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
kotlinx.coroutines.channels.AbstractChannel: void access$removeReceiveOnCancel(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.channels.Receive)
kotlinx.coroutines.Job: void cancel(java.util.concurrent.CancellationException)
kotlinx.coroutines.JobSupport$Finishing: JobSupport$Finishing(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable)
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
kotlinx.coroutines.sync.CancelSemaphoreAcquisitionHandler: void invoke(java.lang.Throwable)
kotlinx.coroutines.CancellableContinuationImpl: void detachChildIfNonResuable()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
androidx.room.MultiInstanceInvalidationClient$callback$1: MultiInstanceInvalidationClient$callback$1(androidx.room.MultiInstanceInvalidationClient)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForString$1: java.lang.String invoke(androidx.sqlite.db.SupportSQLiteStatement)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
kotlinx.coroutines.internal.ThreadLocalKey: kotlinx.coroutines.internal.ThreadLocalKey copy$default(kotlinx.coroutines.internal.ThreadLocalKey,java.lang.ThreadLocal,int,java.lang.Object)
androidx.room.RoomSQLiteQuery$Companion: void prunePoolLocked$room_runtime_release()
kotlinx.coroutines.sync.SemaphoreSegment: java.lang.Object getAndSet(int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow buffer$default(kotlinx.coroutines.flow.Flow,int,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: FlowKt__LimitKt$transformWhile$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: boolean isCancelled()
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
kotlinx.coroutines.CompletableDeferred: boolean isCancelled()
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1: FlowKt__LimitKt$take$2$1$emit$1(kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterNot(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.room.util.TableInfo: java.lang.String toString()
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
androidx.room.InvalidationTracker$refreshRunnable$1: void run()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.room.QueryInterceptorDatabase: void endTransaction()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
kotlinx.coroutines.flow.internal.ChannelFlow: java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlow,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: FlowKt__EmittersKt$invokeSafely$1(kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void setNotificationUris(android.content.ContentResolver,java.util.List)
kotlinx.coroutines.channels.AbstractSendChannel: void invokeOnClose(kotlin.jvm.functions.Function1)
androidx.room.util.TableInfo$Index: TableInfo$Index(java.lang.String,boolean,java.util.List)
kotlinx.coroutines.flow.internal.FlowCoroutineKt: kotlinx.coroutines.flow.Flow scopedFlow(kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.StateFlowImpl: java.util.List getReplayCache()
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addAutoMigrationSpec(androidx.room.migration.AutoMigrationSpec)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow concatMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow merge(java.lang.Iterable)
kotlinx.coroutines.CancelFutureOnCancel: java.lang.String toString()
kotlinx.coroutines.sync.CancelSemaphoreAcquisitionHandler: CancelSemaphoreAcquisitionHandler(kotlinx.coroutines.sync.SemaphoreSegment,int)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineId: java.lang.String toString()
androidx.constraintlayout.helper.widget.Flow: void setPadding(int)
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
kotlinx.coroutines.internal.WeakMapCtorCache: kotlin.jvm.functions.Function1 get(java.lang.Class)
kotlinx.coroutines.JobKt: void cancel(kotlin.coroutines.CoroutineContext)
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.EntityUpsertionAdapter: void upsert(java.lang.Object[])
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
androidx.room.DatabaseConfiguration: boolean isMigrationRequiredFrom(int)
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type[] values()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.JobImpl: JobImpl(kotlinx.coroutines.Job)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.room.TransactionElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.Job$DefaultImpls: void cancel(kotlinx.coroutines.Job)
androidx.room.MapInfo: java.lang.String valueColumn()
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.Send takeFirstSendOrPeekClosed()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
androidx.room.RoomDatabaseKt: kotlin.coroutines.CoroutineContext createTransactionContext(androidx.room.RoomDatabase,kotlin.coroutines.ContinuationInterceptor)
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1: FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow buffer(kotlinx.coroutines.flow.Flow,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.JobSupport: java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List)
kotlinx.coroutines.flow.ChannelAsFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: ChannelsKt__DeprecatedKt$filter$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelKt: java.lang.Object getOrElse-WpGqRn0(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow sample(kotlinx.coroutines.flow.Flow,long)
kotlinx.coroutines.InvokeOnCancel: void invoke(java.lang.Throwable)
kotlinx.coroutines.sync.Semaphore: boolean tryAcquire()
kotlinx.coroutines.JobSupport: java.lang.Object getCompletedInternal$kotlinx_coroutines_core()
com.google.android.material.textfield.TextInputLayout: int getBaseline()
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
kotlinx.coroutines.channels.AbstractChannelKt: void getOFFER_FAILED$annotations()
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: void finishPrepare(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
androidx.room.RoomDatabase: void assertNotSuspendingTransaction()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.selects.SelectInstance: java.lang.Object performAtomicTrySelect(kotlinx.coroutines.internal.AtomicDesc)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
androidx.room.QueryInterceptorDatabase: void setLocale(java.util.Locale)
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object acquire(kotlin.coroutines.Continuation)
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getUnconfined()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__LimitKt: kotlinx.coroutines.flow.Flow takeWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.DebugKt: void assert(kotlin.jvm.functions.Function0)
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed()
kotlinx.coroutines.android.HandlerDispatcherKt: void postFrameCallback$lambda-6(kotlinx.coroutines.CancellableContinuation,long)
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
kotlinx.coroutines.YieldContext$Key: YieldContext$Key()
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
com.google.android.material.chip.Chip: void setChipIconSize(float)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: FlowKt__ZipKt$combine$5$2(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: float getChipMinHeight()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1: java.lang.Throwable invoke(java.lang.Throwable)
kotlinx.coroutines.ParentJob: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
kotlinx.coroutines.flow.internal.SafeCollector: void exceptionTransparencyViolated(kotlinx.coroutines.flow.internal.DownstreamExceptionContext,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlinx.coroutines.internal.LimitedDispatcher: void dispatchInternal(java.lang.Runnable,kotlin.jvm.functions.Function0)
androidx.room.AmbiguousColumnResolver$ResultColumn: java.lang.String toString()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
kotlinx.coroutines.selects.SelectClause2: void registerSelectClause2(kotlinx.coroutines.selects.SelectInstance,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$delete$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow switchMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.MaterialToolbar: void setLogoAdjustViewBounds(boolean)
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.channels.SendElement: void completeResumeSend()
kotlinx.coroutines.CompletedContinuation: void invokeHandlers(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Throwable)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.Closed getClosedForSend()
androidx.cardview.widget.CardView: int getContentPaddingBottom()
kotlinx.coroutines.DisposableFutureHandle: void dispose()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
kotlinx.coroutines.CoroutineStart: void invoke(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.LazyDeferredCoroutine: void onStart()
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.flow.MutableStateFlow MutableStateFlow(java.lang.Object)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.channels.ChannelIterator iterator()
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
kotlinx.coroutines.channels.ChannelResult: java.lang.Object getOrNull-impl(java.lang.Object)
com.google.android.material.checkbox.MaterialCheckBox: void setCheckedState(int)
androidx.room.util.TableInfo$ForeignKeyWithSequence: int getId()
androidx.room.QueryInterceptorDatabase: java.lang.String getPath()
androidx.room.IMultiInstanceInvalidationService$Default: android.os.IBinder asBinder()
androidx.room.AutoCloser: void setAutoCloseCallback(java.lang.Runnable)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.selects.SelectBuilderImpl: void disposeOnSelect(kotlinx.coroutines.DisposableHandle)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
kotlinx.coroutines.DispatchedCoroutine: DispatchedCoroutine(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelResult$Failed: ChannelResult$Failed()
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.QueryInterceptorDatabase: void beginTransactionWithListener$lambda$2(androidx.room.QueryInterceptorDatabase)
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
androidx.room.Relation: java.lang.String entityColumn()
androidx.room.QueryInterceptorDatabase: void beginTransactionNonExclusive$lambda$1(androidx.room.QueryInterceptorDatabase)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: java.lang.Object failure(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: java.lang.Object updatedNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.core.app.NavUtils$Api16Impl: boolean navigateUpTo(android.app.Activity,android.content.Intent)
androidx.room.QueryInterceptorProgram: void bindBlob(int,byte[])
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
kotlinx.coroutines.internal.DispatchedContinuation: DispatchedContinuation(kotlinx.coroutines.CoroutineDispatcher,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlin.jvm.functions.Function1 consumes(kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int nextInt(int)
kotlinx.coroutines.UndispatchedCoroutine: void afterResume(java.lang.Object)
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
kotlinx.coroutines.SupervisorCoroutine: SupervisorCoroutine(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ReceiveChannel$onReceiveOrNull$1: ReceiveChannel$onReceiveOrNull$1(kotlinx.coroutines.channels.ReceiveChannel)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: RoomDatabaseKt$withTransaction$transactionBlock$1(androidx.room.RoomDatabase,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder createFromFile(java.io.File,androidx.room.RoomDatabase$PrepackagedDatabaseCallback)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: AbstractSendChannel$SendSelect(java.lang.Object,kotlinx.coroutines.channels.AbstractSendChannel,kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)
kotlinx.coroutines.CoroutineScopeKt: void ensureActive(kotlinx.coroutines.CoroutineScope)
kotlinx.coroutines.CoroutineId: long component1()
kotlinx.coroutines.sync.SemaphoreKt: void getPERMIT$annotations()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1: AbstractChannel$receiveCatching$1(kotlinx.coroutines.channels.AbstractChannel,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
kotlinx.coroutines.DebugKt: java.util.concurrent.atomic.AtomicLong getCOROUTINE_ID()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.room.InvalidationTracker$ObserverWrapper: InvalidationTracker$ObserverWrapper(androidx.room.InvalidationTracker$Observer,int[],java.lang.String[])
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: java.lang.String[] getColumnNames()
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.SharedValues getSharedValues()
kotlinx.coroutines.CancellableContinuation: boolean isCompleted()
androidx.lifecycle.LiveData: boolean isInitialized()
androidx.room.AmbiguousColumnResolver$resolve$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key: ExecutorCoroutineDispatcher$Key()
kotlinx.coroutines.flow.ReadonlySharedFlow: ReadonlySharedFlow(kotlinx.coroutines.flow.SharedFlow,kotlinx.coroutines.Job)
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object offerSelectInternal(java.lang.Object,kotlinx.coroutines.selects.SelectInstance)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.Job: boolean cancel(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function5)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
androidx.room.FtsOptions$Order: androidx.room.FtsOptions$Order[] $values()
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
kotlinx.coroutines.channels.Closed: java.lang.Object getOfferResult()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long updateTail(long,int)
kotlinx.coroutines.android.HandlerContext: boolean equals(java.lang.Object)
kotlinx.coroutines.internal.DispatchedContinuation: void resumeUndispatchedWith(java.lang.Object)
kotlinx.coroutines.flow.StartedLazily$command$1: StartedLazily$command$1(kotlinx.coroutines.flow.StateFlow,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.CallbackFlowBuilder: CallbackFlowBuilder(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
androidx.room.Fts4: java.lang.String[] tokenizerArgs()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: ChannelFlowOperator$collectWithContextUndispatched$2(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
kotlinx.coroutines.CoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.flow.SharingStarted: kotlinx.coroutines.flow.Flow command(kotlinx.coroutines.flow.StateFlow)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.util.TableInfo: TableInfo(java.lang.String,java.util.Map,java.util.Set,java.util.Set,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.room.AutoMigration: int from()
androidx.room.RoomOpenHelper$Companion: RoomOpenHelper$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
kotlinx.coroutines.channels.AbstractSendChannel: boolean isFullImpl()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consume(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1)
kotlinx.coroutines.AbstractCoroutine: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)
kotlinx.coroutines.AbstractCoroutine: void onCompletionInternal(java.lang.Object)
androidx.constraintlayout.widget.Barrier: int getMargin()
kotlinx.coroutines.Job: void cancel()
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.EventLoop: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
kotlinx.coroutines.internal.LockFreeLinkedListKt: kotlinx.coroutines.internal.LockFreeLinkedListNode unwrap(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.room.RoomDatabase$endTransaction$1: RoomDatabase$endTransaction$1(androidx.room.RoomDatabase)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1: FlowKt__TransformKt$withIndex$1$1(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.internal.Ref$IntRef)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$3: java.lang.Long invoke(java.lang.Object)
kotlinx.coroutines.flow.StateFlowImpl: StateFlowImpl(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.ParentJob: boolean cancel(java.lang.Throwable)
androidx.room.TransactionElement: void release()
kotlinx.coroutines.internal.DispatchedContinuationKt: void getREUSABLE_CLAIMED$annotations()
androidx.room.Relation: java.lang.String[] projection()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
kotlinx.coroutines.scheduling.DefaultScheduler: DefaultScheduler()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: java.lang.String getColumnName(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.room.MultiInstanceInvalidationClient: java.lang.Runnable getSetUpRunnable()
kotlinx.coroutines.flow.SharedFlowImpl: void getLastReplayedLocked$annotations()
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListHead: boolean isRemoved()
androidx.appcompat.widget.SearchView: int getInputType()
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: int getArity()
kotlinx.coroutines.flow.FlowKt__ChannelsKt: kotlinx.coroutines.flow.Flow consumeAsFlow(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.Dispatchers: Dispatchers()
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
kotlinx.coroutines.channels.Closed: java.lang.Throwable getSendException()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: ChannelsKt__DeprecatedKt$distinctBy$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeTaskQueue: void close()
kotlin.jvm.internal.Lambda: java.lang.String toString()
kotlinx.coroutines.Deferred: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
kotlinx.coroutines.AbstractTimeSource: void unTrackTask()
kotlinx.coroutines.internal.LockFreeLinkedListNode: void addLast(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult box-impl(java.lang.Object)
androidx.room.util.TableInfo: boolean equals(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean moveToPosition(int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow,java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.cardview.widget.CardView: int getContentPaddingRight()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
kotlinx.coroutines.internal.InlineList: java.lang.String toString-impl(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$2: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$2(long)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
com.google.android.material.chip.Chip: void setLayoutDirection(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void doBinds(androidx.sqlite.db.SupportSQLiteStatement)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
kotlinx.coroutines.flow.DistinctFlowImpl: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: FlowKt__EmittersKt$transform$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1,kotlin.coroutines.Continuation)
androidx.room.Room: androidx.room.RoomDatabase$Builder inMemoryDatabaseBuilder(android.content.Context,java.lang.Class)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow flowCombine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.RoomDatabase: void getMCallbacks$annotations()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task trySteal(boolean)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: ChannelsKt__DeprecatedKt$single$1(kotlin.coroutines.Continuation)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.Room: androidx.room.RoomDatabase$Builder databaseBuilder(android.content.Context,java.lang.Class,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean isReadOnly()
kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: ChannelsKt__DeprecatedKt$filterIndexed$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconScaleType(android.widget.ImageView$ScaleType)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlinx.coroutines.JobSupport$Finishing: java.util.ArrayList allocateList()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filterNotNull(kotlinx.coroutines.channels.ReceiveChannel)
androidx.room.QueryInterceptorDatabase: void setVersion(int)
androidx.room.QueryInterceptorDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object receive(kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CompletableDeferred: java.lang.Throwable getCompletionExceptionOrNull()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4)
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: int getInt(int)
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
kotlinx.coroutines.ThreadLocalEventLoop: ThreadLocalEventLoop()
kotlinx.coroutines.BuildersKt__BuildersKt: java.lang.Object runBlocking(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
kotlinx.coroutines.ParentJob: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.room.AutoCloser: void setOnAutoCloseCallback$room_runtime_release(java.lang.Runnable)
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object hasNextSuspend(kotlin.coroutines.Continuation)
kotlinx.coroutines.JobKt__JobKt: void cancel(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toChannel(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
kotlinx.coroutines.sync.SemaphoreImpl: int getAvailablePermits()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$insert$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$insert$1(java.lang.String,int,android.content.ContentValues)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlinx.coroutines.Deferred: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filter$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.room.QueryInterceptorDatabase: void query$lambda$9(androidx.room.QueryInterceptorDatabase,androidx.sqlite.db.SupportSQLiteQuery,androidx.room.QueryInterceptorProgram)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorReturn$default(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: java.lang.Object getPollResult()
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonIconDrawable()
kotlinx.coroutines.channels.AbstractChannel: boolean enqueueReceiveSelect(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2,int)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
androidx.room.QueryInterceptorProgram: java.util.List getBindArgsCache$room_runtime_release()
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.Closed getClosedForReceive()
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.CancelHandlerBase: CancelHandlerBase()
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.InlineList: java.lang.String toString()
kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1: AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.channels.AbstractSendChannel)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlin.jvm.functions.Function0 access$nullArrayFactory()
kotlinx.coroutines.JobKt__JobKt: void cancelChildren$default(kotlinx.coroutines.Job,java.lang.Throwable,int,java.lang.Object)
com.google.android.material.button.MaterialButton: int getInsetTop()
kotlinx.coroutines.CompletableJob: java.util.concurrent.CancellationException getCancellationException()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object takeState$kotlinx_coroutines_core()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: kotlin.jvm.functions.Function3 access$getTransform$p(kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest)
androidx.room.QueryInterceptorDatabase: boolean isOpen()
kotlinx.coroutines.selects.SelectInstance: java.lang.Object trySelectOther(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
kotlinx.coroutines.android.HandlerContext: void invokeOnTimeout$lambda-3(kotlinx.coroutines.android.HandlerContext,java.lang.Runnable)
kotlinx.coroutines.channels.LinkedListChannel: void onCancelIdempotentList-w-w6eGU(java.lang.Object,kotlinx.coroutines.channels.Closed)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
androidx.core.app.ActivityCompat$Api16Impl: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean)
kotlinx.coroutines.JobCancellationException: boolean equals(java.lang.Object)
kotlinx.coroutines.JobSupport: java.lang.Object access$joinSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation)
androidx.room.AmbiguousColumnResolver$ResultColumn: androidx.room.AmbiguousColumnResolver$ResultColumn copy(java.lang.String,int)
com.google.android.material.button.MaterialButton: void setToggleCheckedStateOnClick(boolean)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.String toString()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.selects.SelectBuilderImpl: void doResume(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
kotlinx.coroutines.CancellableContinuation$DefaultImpls: boolean cancel$default(kotlinx.coroutines.CancellableContinuation,java.lang.Throwable,int,java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.channels.Channel get_channel()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.DistinctFlowImpl: DistinctFlowImpl(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1: java.lang.Long invoke(androidx.sqlite.db.SupportSQLiteStatement)
kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: void resumeSendClosed(kotlinx.coroutines.channels.Closed)
androidx.room.RoomOpenHelper: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.flow.FlowKt: void subscribe(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object sendSuspend(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
kotlinx.coroutines.CoroutineContextKt: java.lang.String getCoroutineName(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1: ProduceKt$awaitClose$4$1(kotlinx.coroutines.CancellableContinuation)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
kotlinx.coroutines.flow.SharedFlowSlot: kotlin.coroutines.Continuation[] freeLocked(java.lang.Object)
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrame$lambda-3$$inlined$Runnable$1: void run()
kotlinx.coroutines.flow.FlowKt: java.lang.Object single(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.String toString()
kotlinx.coroutines.JobCancellationException: int hashCode()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow buffer$default(kotlinx.coroutines.flow.Flow,int,kotlinx.coroutines.channels.BufferOverflow,int,java.lang.Object)
kotlinx.coroutines.ChildHandleNode: void invoke(java.lang.Throwable)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
kotlinx.coroutines.channels.ChannelsKt: kotlin.jvm.functions.Function1 consumesAll(kotlinx.coroutines.channels.ReceiveChannel[])
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.room.CoroutinesRoom$Companion$execute$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List parse(java.net.URL)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.LimitedDispatcher: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.CoroutineDispatcher from(java.util.concurrent.Executor)
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1$emit$1: FlowKt__MergeKt$flattenConcat$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.DefaultExecutor: void get_thread$annotations()
kotlinx.coroutines.DefaultExecutor: java.lang.Thread createThreadSync()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc describeRemoveFirst()
androidx.room.InvalidationLiveDataContainer: void onActive(androidx.lifecycle.LiveData)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
kotlinx.coroutines.JobSupport: void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle)
androidx.fragment.app.DialogFragment: DialogFragment()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow conflate(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collect(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException$default(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException,int,java.lang.Object)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
androidx.room.AutoCloser: long getLastDecrementRefCountTimeStamp$room_runtime_release()
kotlinx.coroutines.JobSupport: void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StateFlowImpl: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot createSlot()
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object collectTo$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$3: java.lang.Object invoke(java.lang.Object)
androidx.room.paging.LimitOffsetDataSource: androidx.room.RoomSQLiteQuery getSQLiteQuery(int,int)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlinx.coroutines.flow.FlowKt__ErrorsKt: kotlinx.coroutines.flow.Flow catch(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt: void checkContext(kotlinx.coroutines.flow.internal.SafeCollector,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.internal.ThreadContextKt: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.SegmentOrClosed: int hashCode()
androidx.room.SQLiteCopyOpenHelper: void verifyDatabaseFile(boolean)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: int getColumnIndex(java.lang.String)
androidx.room.RoomSQLiteQuery: void getStringBindings$annotations()
kotlinx.coroutines.JobSupport: boolean cancelCoroutine(java.lang.Throwable)
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object trySelectOther(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
androidx.room.AutoCloser: androidx.sqlite.db.SupportSQLiteDatabase incrementCountAndEnsureDbIsOpen()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object takeState$kotlinx_coroutines_core()
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
kotlinx.coroutines.JobSupport$AwaitContinuation: JobSupport$AwaitContinuation(kotlin.coroutines.Continuation,kotlinx.coroutines.JobSupport)
androidx.room.FtsOptions$Order: FtsOptions$Order(java.lang.String,int)
kotlinx.coroutines.scheduling.CoroutineScheduler: void close()
kotlinx.coroutines.channels.LinkedListChannel: LinkedListChannel(kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlin.jvm.functions.Function1 createSafeConstructor(java.lang.reflect.Constructor)
androidx.room.util.TableInfo$ForeignKey: int hashCode()
kotlinx.coroutines.flow.FlowKt: void forEach(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.room.AmbiguousColumnResolver$Solution: java.util.List getMatches()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.room.IMultiInstanceInvalidationCallback$Stub: IMultiInstanceInvalidationCallback$Stub()
kotlinx.coroutines.flow.internal.SendingCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow cancellable(kotlinx.coroutines.flow.Flow)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
kotlinx.coroutines.JobSupportKt: void getCOMPLETING_ALREADY$annotations()
kotlinx.coroutines.CoroutineScopeKt: java.lang.Object currentCoroutineContext(kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.room.MultiInstanceInvalidationService$callbackList$1: void onCallbackDied(android.os.IInterface,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: void freeSlot(kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot)
com.google.android.material.button.MaterialButton: void setPressed(boolean)
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow debounceInternal$FlowKt__DelayKt(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)
kotlinx.coroutines.DelayKt: java.lang.Object delay-VtjQ1oo(long,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper: void setWriteAheadLoggingEnabled(boolean)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toChannel(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: FlowKt__DelayKt$debounceInternal$1$3$2(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.TaskImpl: TaskImpl(java.lang.Runnable,long,kotlinx.coroutines.scheduling.TaskContext)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1: CombineKt$zipImpl$1$1$2$1$emit$1(kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setChecked(boolean)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow filterIsInstance(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toMutableSet(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: ChannelFlowTransformLatest$flowCollect$3$1(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest,kotlinx.coroutines.flow.FlowCollector)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.channels.ChannelCoroutine: boolean isClosedForSend()
kotlinx.coroutines.sync.SemaphoreSegment: boolean cas(int,java.lang.Object,java.lang.Object)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.google.android.material.button.MaterialButton: int getIconSize()
kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask: void run()
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.DisposeOnCompletion: java.lang.Object invoke(java.lang.Object)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder createFromAsset(java.lang.String,androidx.room.RoomDatabase$PrepackagedDatabaseCallback)
kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask: EventLoopImplBase$DelayedRunnableTask(long,java.lang.Runnable)
androidx.room.QueryInterceptorDatabase: boolean enableWriteAheadLogging()
kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
kotlinx.coroutines.AbstractCoroutine: void onCompleted(java.lang.Object)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.MutablePropertyReference1: java.lang.Object getDelegate(java.lang.Object)
androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)
kotlinx.coroutines.channels.LinkedListChannel: boolean isBufferEmpty()
kotlinx.coroutines.JobSupport: boolean isCompleted()
kotlinx.coroutines.flow.StartedEagerly: kotlinx.coroutines.flow.Flow command(kotlinx.coroutines.flow.StateFlow)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1: FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1(kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
kotlinx.coroutines.Deferred: void cancel(java.util.concurrent.CancellationException)
com.google.android.material.checkbox.MaterialCheckBox: void setErrorShown(boolean)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List load(java.lang.Class,java.lang.ClassLoader)
androidx.lifecycle.LiveData: void removeObservers(androidx.lifecycle.LifecycleOwner)
kotlinx.coroutines.selects.SelectBuilderImpl: void onTimeout(long,kotlin.jvm.functions.Function1)
androidx.room.paging.LimitOffsetDataSource: int countItems()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateFilledDropDownMenuBackground()
androidx.room.MultiInstanceInvalidationService$binder$1: void broadcastInvalidation(int,java.lang.String[])
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$2: java.lang.Object invoke(java.lang.Object)
androidx.room.AutoCloser: void setRefCount$room_runtime_release(int)
androidx.cardview.widget.CardView: int getContentPaddingTop()
androidx.room.InvalidationTracker: InvalidationTracker(androidx.room.RoomDatabase,java.lang.String[])
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getGravityTextAlignment()
kotlinx.coroutines.EventLoop: void incrementUseCount(boolean)
kotlinx.coroutines.channels.AbstractChannel: void removeReceiveOnCancel(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.channels.Receive)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isReadOnly$1: java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.InvalidationTracker$ObservedTableTracker: boolean onAdded(int[])
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable createFinalException(java.lang.Throwable,java.lang.Throwable,java.util.ArrayDeque)
kotlinx.coroutines.internal.Segment: int getMaxSlots()
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void cancel(kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.JobKt: void cancelChildren$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
kotlinx.coroutines.selects.SelectInstance: kotlin.coroutines.Continuation getCompletion()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: java.lang.Object toList$default(kotlinx.coroutines.flow.Flow,java.util.List,kotlin.coroutines.Continuation,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow delayEach(kotlinx.coroutines.flow.Flow,long)
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
androidx.room.MultiInstanceInvalidationService$binder$1: MultiInstanceInvalidationService$binder$1(androidx.room.MultiInstanceInvalidationService)
androidx.room.util.FtsTableInfo: FtsTableInfo(java.lang.String,java.util.Set,java.lang.String)
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CompletedContinuation copy$default(kotlinx.coroutines.CompletedContinuation,java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,java.lang.Object)
androidx.room.InvalidationTracker$ObservedTableTracker$Companion: InvalidationTracker$ObservedTableTracker$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
kotlinx.coroutines.internal.LockFreeTaskQueue: boolean isClosed()
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
kotlinx.coroutines.flow.FlowKt__EmittersKt: java.lang.Object access$invokeSafely$FlowKt__EmittersKt(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3,java.lang.Throwable,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
kotlinx.coroutines.channels.Channel: kotlinx.coroutines.channels.ChannelIterator iterator()
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow flowCombineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void beforeTask(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: FlowKt__DelayKt$debounceInternal$1$3$1(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.internal.Ref$ObjectRef,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object emitSuspend(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.SQLiteCopyOpenHelper$createFrameworkOpenHelper$configuration$1: void onUpgrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int)
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
androidx.room.EntityInsertionAdapter: long[] insertAndReturnIdsArray(java.util.Collection)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void unregisterContentObserver(android.database.ContentObserver)
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.JobSupport$ChildCompletion: void invoke(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.BuiltInTypeConverters$State: androidx.room.BuiltInTypeConverters$State valueOf(java.lang.String)
kotlinx.coroutines.NodeList: java.lang.String getString(java.lang.String)
androidx.room.RoomDatabase: androidx.room.InvalidationTracker createInvalidationTracker()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow observeOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.flow.Flow fuseStateFlow(kotlinx.coroutines.flow.StateFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4)
androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlinx.coroutines.flow.internal.ChannelFlowMerge: ChannelFlowMerge(kotlinx.coroutines.flow.Flow,int,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
kotlinx.coroutines.DefaultExecutor: void shutdown()
androidx.room.QueryInterceptorDatabase: void execSQL(java.lang.String)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow merge(kotlinx.coroutines.flow.Flow[])
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function6)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: ChannelsKt__DeprecatedKt$drop$1(int,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.room.SharedSQLiteStatement: SharedSQLiteStatement(androidx.room.RoomDatabase)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
kotlinx.coroutines.EventLoop: long getNextTime()
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowMerge: java.lang.String additionalToStringProps()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$1: void set(java.lang.Object,java.lang.Object)
androidx.room.RoomDatabase$Companion: RoomDatabase$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.InvokeOnCancel: java.lang.String toString()
kotlinx.coroutines.AbstractTimeSource: void trackTask()
kotlinx.coroutines.CoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.CancellableContinuationImpl: void releaseClaimedReusableContinuation()
kotlinx.coroutines.channels.ChannelCoroutine: boolean isClosedForReceive()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setRawInputType(int)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean isTerminated()
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1: FlowKt__LimitKt$take$2$1(kotlin.jvm.internal.Ref$IntRef,int,kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.channels.ProducerScope: boolean offer(java.lang.Object)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxInlineActionWidth()
androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveCatching()
kotlinx.coroutines.sync.SemaphoreKt: int access$getSEGMENT_SIZE$p()
kotlinx.coroutines.CompletableDeferred: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object receiveOrNull(kotlin.coroutines.Continuation)
androidx.room.CoroutinesRoom$Companion: java.lang.Object execute(androidx.room.RoomDatabase,boolean,java.util.concurrent.Callable,kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key: ExecutorCoroutineDispatcher$Key(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
kotlinx.coroutines.flow.SharedFlowImpl: long access$getHead(kotlinx.coroutines.flow.SharedFlowImpl)
androidx.room.AutoCloser: AutoCloser(long,java.util.concurrent.TimeUnit,java.util.concurrent.Executor)
androidx.room.AmbiguousColumnResolver: void dfs(java.util.List,java.util.List,int,kotlin.jvm.functions.Function1)
com.google.android.material.chip.Chip: void setChipIconResource(int)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel zip$default(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.room.RoomDatabase: java.lang.Object getTypeConverter(java.lang.Class)
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2: FlowKt__ReduceKt$fold$2(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlowKt: java.lang.Object withContextUndispatched$default(kotlin.coroutines.CoroutineContext,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,int,java.lang.Object)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: void getCLOSED$annotations()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow subscribeOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
androidx.room.AmbiguousColumnResolver$resolve$1$2: void invoke(java.util.List)
kotlinx.coroutines.internal.AtomicOp: java.lang.Object prepare(java.lang.Object)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintList(android.content.res.ColorStateList)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Throwable tryReleaseClaimedContinuation(kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: AbstractSendChannel$SendBuffered(java.lang.Object)
kotlinx.coroutines.internal.ThreadSafeHeap: boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
androidx.room.util.FtsTableInfo$Companion: FtsTableInfo$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy: android.os.IBinder asBinder()
kotlinx.coroutines.flow.StartedLazily$command$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalGap(int)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1: FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.TimeoutCancellationException: TimeoutCancellationException(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ErrorsKt: kotlinx.coroutines.flow.Flow retryWhen(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
kotlinx.coroutines.flow.SharedFlowImpl: void correctCollectorIndexesOnDropOldest(long)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flatMapLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.selects.SelectKt: void getALREADY_SELECTED$annotations()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow filter(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.room.RoomTrackingLiveData: java.lang.Runnable getInvalidationRunnable()
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase build()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: android.os.Bundle respond(android.os.Bundle)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CompletableDeferred: boolean start()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
kotlinx.coroutines.channels.ReceiveOrClosed: kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
androidx.room.IMultiInstanceInvalidationService$Default: int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow delayFlow(kotlinx.coroutines.flow.Flow,long)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.CompletedContinuation: java.lang.Object component1()
kotlinx.coroutines.channels.ProducerScope: boolean close(java.lang.Throwable)
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.room.QueryInterceptorDatabase: void setTransactionSuccessful()
kotlinx.coroutines.CompletedWithCancellation: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractSendChannel: boolean close(java.lang.Throwable)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
androidx.constraintlayout.helper.widget.Flow: void setOrientation(int)
androidx.room.InvalidationTracker: void addWeakObserver(androidx.room.InvalidationTracker$Observer)
kotlinx.coroutines.internal.SystemPropsKt: int systemProp(java.lang.String,int,int,int)
kotlinx.coroutines.JobSupport: void continueCompleting(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
kotlin.jvm.internal.PropertyReference0: java.lang.Object getDelegate()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4,kotlin.coroutines.Continuation)
kotlinx.coroutines.Deferred: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object single(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.DefaultIoScheduler: java.util.concurrent.Executor getExecutor()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectBuilderImpl: void doAfterSelect()
androidx.room.CoroutinesRoom$Companion$execute$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractChannel$ReceiveElementWithUndeliveredHandler: kotlin.jvm.functions.Function1 resumeOnCancellationFun(java.lang.Object)
androidx.room.QueryInterceptorStatement: long executeInsert()
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object receiveOrNull(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelResult: java.lang.Object unbox-impl()
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.RoomSQLiteQuery: void copyArgumentsFrom(androidx.room.RoomSQLiteQuery)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
kotlinx.coroutines.internal.SegmentOrClosed: boolean isClosed-impl(java.lang.Object)
kotlinx.coroutines.selects.SelectBuilderImpl: void invoke(kotlinx.coroutines.selects.SelectClause1,kotlin.jvm.functions.Function2)
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: ChannelsKt__DeprecatedKt$last$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow retry$default(kotlinx.coroutines.flow.Flow,long,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
kotlinx.coroutines.flow.FlowKt__LimitKt: kotlinx.coroutines.flow.Flow dropWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.util.TableInfoKt: androidx.room.util.TableInfo$Index readIndex(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String,boolean)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task add$default(kotlinx.coroutines.scheduling.WorkQueue,kotlinx.coroutines.scheduling.Task,boolean,int,java.lang.Object)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
kotlinx.coroutines.channels.ReceiveChannel$onReceiveOrNull$1$registerSelectClause1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransformUnsafe$FlowKt__ZipKt(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
kotlinx.coroutines.BlockingCoroutine: void afterCompletion(java.lang.Object)
kotlinx.coroutines.ChildContinuation: ChildContinuation(kotlinx.coroutines.CancellableContinuationImpl)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: ChannelsKt__DeprecatedKt$lastOrNull$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$2: FlowKt__CollectionKt$toCollection$2(java.util.Collection)
kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc: java.lang.Object failure(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.room.MultiInstanceInvalidationClient: void setObserver(androidx.room.InvalidationTracker$Observer)
kotlinx.coroutines.internal.ConcurrentKt: java.lang.Object withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0)
androidx.room.QueryInterceptorStatement: QueryInterceptorStatement(androidx.sqlite.db.SupportSQLiteStatement,java.lang.String,java.util.concurrent.Executor,androidx.room.RoomDatabase$QueryCallback)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel requireNoNulls(kotlinx.coroutines.channels.ReceiveChannel)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(android.graphics.Path)
androidx.room.Index$Order: androidx.room.Index$Order valueOf(java.lang.String)
kotlinx.coroutines.flow.FlowKt: java.lang.Object collectWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.channels.ArrayChannel: void ensureCapacity(int)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1: SafeCollector_commonKt$unsafeFlow$1$collect$1(kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1,kotlin.coroutines.Continuation)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
androidx.room.RoomTrackingLiveData: void onActive()
kotlinx.coroutines.JobSupport: boolean tryMakeCancelling(kotlinx.coroutines.Incomplete,java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel zip(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object)
kotlinx.coroutines.Deferred: kotlin.sequences.Sequence getChildren()
androidx.room.AmbiguousColumnResolver$resolve$4: AmbiguousColumnResolver$resolve$4(kotlin.jvm.internal.Ref$ObjectRef)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$$inlined$unsafeFlow$1: FlowKt__TransformKt$runningReduce$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.room.AutoClosingRoomOpenHelper: androidx.sqlite.db.SupportSQLiteOpenHelper getDelegate()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
kotlinx.coroutines.internal.DispatchedContinuationKt: boolean executeUnconfined(kotlinx.coroutines.internal.DispatchedContinuation,java.lang.Object,int,boolean,kotlin.jvm.functions.Function0)
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
kotlinx.coroutines.flow.FlowKt: void subscribe(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object singleOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
kotlinx.coroutines.flow.StartedLazily$command$1$1: java.lang.Object emit(int,kotlin.coroutines.Continuation)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
kotlinx.coroutines.flow.EmptyFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport$AwaitContinuation: java.lang.String nameString()
kotlinx.coroutines.RemoveOnCancel: RemoveOnCancel(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.util.CursorUtil: java.lang.Object useCursor(android.database.Cursor,kotlin.jvm.functions.Function1)
kotlinx.coroutines.DefaultExecutor: void shutdownForTests(long)
com.google.android.material.chip.Chip: float getIconEndPadding()
com.google.android.material.chip.Chip: void setElevation(float)
kotlinx.coroutines.channels.ReceiveChannel$onReceiveOrNull$1$registerSelectClause1$1: ReceiveChannel$onReceiveOrNull$1$registerSelectClause1$1(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
kotlinx.coroutines.ThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.sync.SemaphoreSegment: void set(int,java.lang.Object)
androidx.room.MultiInstanceInvalidationClient: androidx.room.InvalidationTracker$Observer getObserver()
androidx.room.Fts4: java.lang.String languageId()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
kotlinx.coroutines.BlockingCoroutine: BlockingCoroutine(kotlin.coroutines.CoroutineContext,java.lang.Thread,kotlinx.coroutines.EventLoop)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.room.migration.MigrationKt: androidx.room.migration.Migration Migration(int,int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()
androidx.room.RoomOpenHelper$ValidationResult: RoomOpenHelper$ValidationResult(boolean,java.lang.String)
kotlinx.coroutines.flow.FlowKt__CountKt$count$1: FlowKt__CountKt$count$1(kotlin.coroutines.Continuation)
androidx.room.TransactionElement: kotlin.coroutines.ContinuationInterceptor getTransactionDispatcher$room_ktx_release()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
kotlinx.coroutines.JobSupport: void registerSelectClause1Internal$kotlinx_coroutines_core(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1: FlowKt__DelayKt$sample$2$values$1$1(kotlinx.coroutines.channels.ProducerScope)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: long getMaximumSize()
androidx.room.MultiInstanceInvalidationClient: java.util.concurrent.Executor getExecutor()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: android.database.Cursor query(java.lang.String)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode nextIfRemoved()
androidx.room.AutoCloser: boolean isActive()
androidx.room.EntityInsertionAdapter: java.lang.Long[] insertAndReturnIdsArrayBox(java.util.Collection)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flatMapMerge(kotlinx.coroutines.flow.Flow,int,kotlin.jvm.functions.Function2)
androidx.room.QueryInterceptorDatabase: boolean needUpgrade(int)
androidx.room.InvalidationTracker$ObservedTableTracker: void resetTriggerState()
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
kotlinx.coroutines.JobSupportKt: java.lang.Object unboxState(java.lang.Object)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: void resumeReceiveClosed(kotlinx.coroutines.channels.Closed)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: ChannelLimitedFlowMerge(java.lang.Iterable,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.selects.SelectKt: void getSelectOpSequenceNumber$annotations()
com.google.android.material.internal.ClippableRoundedCornerLayout: ClippableRoundedCornerLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
kotlinx.coroutines.android.HandlerDispatcher: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1()
kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filterIndexed$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
kotlinx.coroutines.intrinsics.CancellableKt: void runSafely(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function0)
androidx.room.QueryInterceptorDatabase: long getPageSize()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
kotlinx.coroutines.ExecutorCoroutineDispatcher: void close()
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow filterIsInstance(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.EventLoopKt: kotlinx.coroutines.EventLoop createEventLoop()
kotlinx.coroutines.internal.ScopeCoroutine: kotlinx.coroutines.Job getParent$kotlinx_coroutines_core()
kotlinx.coroutines.channels.ArrayChannel: kotlinx.coroutines.internal.Symbol updateBufferSize(int)
androidx.room.SQLiteCopyOpenHelper: void setDatabaseConfiguration(androidx.room.DatabaseConfiguration)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
kotlinx.coroutines.channels.ChannelIterator$next0$1: ChannelIterator$next0$1(kotlin.coroutines.Continuation)
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
kotlinx.coroutines.JobSupport$Finishing: void addExceptionLocked(java.lang.Throwable)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StateFlowSlot: boolean takePending()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: CombineKt$zipImpl$1$1$1(kotlinx.coroutines.CompletableJob,kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.CancellableContinuationImpl: void parentCancelled$kotlinx_coroutines_core(java.lang.Throwable)
kotlinx.coroutines.JobKt: void cancelChildren$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
kotlinx.coroutines.CancellableContinuation: void completeResume(java.lang.Object)
kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
androidx.room.EntityUpsertionAdapter: java.util.List upsertAndReturnIdsList(java.util.Collection)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel distinctBy(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
androidx.constraintlayout.helper.widget.Flow: Flow(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int addLast(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow switchMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.Segment: boolean tryIncPointers$kotlinx_coroutines_core()
com.google.android.material.chip.Chip: void setTextStartPadding(float)
kotlinx.coroutines.ChildJob: kotlinx.coroutines.selects.SelectClause0 getOnJoin()
kotlinx.coroutines.EventLoopImplBase: boolean isCompleted()
androidx.room.TypeConverters: androidx.room.BuiltInTypeConverters builtInTypeConverters()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow cache(kotlinx.coroutines.flow.Flow)
androidx.room.CoroutinesRoom$Companion$execute$4$job$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.Job$Key: Job$Key()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1$emit$1: CombineKt$zipImpl$1$1$second$1$1$emit$1(kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: kotlinx.coroutines.internal.Symbol access$getCLOSED$p()
kotlinx.coroutines.JobSupport: boolean isCompletedExceptionally()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
kotlinx.coroutines.flow.internal.SafeCollector: void releaseIntercepted()
kotlin.jvm.internal.PropertyReference1: java.lang.Object getDelegate(java.lang.Object)
kotlinx.coroutines.flow.StateFlowImpl: boolean compareAndSet(java.lang.Object,java.lang.Object)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1: java.lang.Object invoke(java.lang.Object)
androidx.room.MultiInstanceInvalidationService$callbackList$1: void onCallbackDied(androidx.room.IMultiInstanceInvalidationCallback,java.lang.Object)
kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope plus(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.CompletableJob SupervisorJob(kotlinx.coroutines.Job)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2: FlowKt__ReduceKt$first$$inlined$collectWhile$2(kotlin.jvm.functions.Function2,kotlin.jvm.internal.Ref$ObjectRef)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void helpRemovePrev()
kotlinx.coroutines.channels.LinkedListChannel: boolean isBufferFull()
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1: FlowKt__DistinctKt$defaultAreEquivalent$1()
kotlinx.coroutines.EventLoopImplBase: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
androidx.room.BuiltInTypeConverters$State: androidx.room.BuiltInTypeConverters$State[] values()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__EmittersKt: kotlinx.coroutines.flow.Flow onCompletion(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.InvokeOnCancelling: void invoke(java.lang.Throwable)
androidx.room.util.TableInfo$Column: TableInfo$Column(java.lang.String,java.lang.String,boolean,int)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$2: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: java.lang.Object emitAllImpl$FlowKt__ChannelsKt(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
kotlinx.coroutines.channels.SendElementWithUndeliveredHandler: void undeliveredElement()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
kotlinx.coroutines.channels.AbstractChannel: void cancel()
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.AbstractFlow$collect$1: AbstractFlow$collect$1(kotlinx.coroutines.flow.AbstractFlow,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
kotlinx.coroutines.channels.ChannelResult: boolean isFailure-impl(java.lang.Object)
androidx.room.util.FtsTableInfo: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
kotlinx.coroutines.CancellableContinuationImpl: void resumeImpl$default(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Object,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
kotlinx.coroutines.CancellableContinuationImpl: void resumeImpl(java.lang.Object,int,kotlin.jvm.functions.Function1)
com.google.android.material.textfield.TextInputLayout: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean inTransaction()
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
kotlinx.coroutines.CompletionStateKt: java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation)
androidx.constraintlayout.widget.Guideline: void setFilterRedundantCalls(boolean)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractSendChannel: void access$helpCloseAndResumeWithSendException(kotlinx.coroutines.channels.AbstractSendChannel,kotlin.coroutines.Continuation,java.lang.Object,kotlinx.coroutines.channels.Closed)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
androidx.room.RoomDatabase: java.lang.ThreadLocal getSuspendingTransactionId()
kotlinx.coroutines.scheduling.NanoTimeSource: NanoTimeSource()
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDbLockedByCurrentThread$1: java.lang.Object get(java.lang.Object)
androidx.room.RoomDatabase: void internalBeginTransaction()
kotlinx.coroutines.CancellableContinuationImpl: void invokeOnCancellation(kotlin.jvm.functions.Function1)
kotlinx.coroutines.AbstractCoroutine: void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.ScopeCoroutine: void afterResume(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toCollection(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.cardview.widget.CardView: int getContentPaddingLeft()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.ranges.LongRange)
kotlinx.coroutines.selects.SelectBuilderImpl: boolean trySelect()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.ranges.LongRange)
kotlinx.coroutines.CompletableDeferred: void cancel(java.util.concurrent.CancellationException)
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy: void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback,int)
kotlinx.coroutines.YieldContext: YieldContext()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$2: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.channels.AbstractSendChannel$onSend$1: AbstractSendChannel$onSend$1(kotlinx.coroutines.channels.AbstractSendChannel)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flattenMerge$default(kotlinx.coroutines.flow.Flow,int,int,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.google.android.material.textfield.TextInputLayout: void setBoxCornerFamily(int)
kotlinx.coroutines.flow.StateFlowSlot: void makePending()
kotlinx.coroutines.flow.FlowKt__DistinctKt: void getDefaultAreEquivalent$annotations$FlowKt__DistinctKt()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean isWriteAheadLoggingEnabled()
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StateFlowImpl: void setValue(java.lang.Object)
androidx.room.util.ViewInfo$Companion: ViewInfo$Companion()
androidx.room.RoomWarnings$Companion: RoomWarnings$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel distinctBy$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: java.lang.Object resumeValue(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.room.IMultiInstanceInvalidationService$Default: void broadcastInvalidation(int,java.lang.String[])
androidx.room.Entity: androidx.room.Index[] indices()
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: FlowKt__ReduceKt$firstOrNull$1(kotlin.coroutines.Continuation)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
androidx.room.RoomSQLiteQuery$Companion: androidx.room.RoomSQLiteQuery copyFrom(androidx.sqlite.db.SupportSQLiteQuery)
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.internal.Symbol access$getPENDING$p()
kotlinx.coroutines.scheduling.WorkQueue: int getBufferSize$kotlinx_coroutines_core()
androidx.room.Index$Order: androidx.room.Index$Order[] values()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: void getResult$annotations()
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.RoomOpenHelper: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
androidx.room.QueryInterceptorOpenHelper: void close()
androidx.room.QueryInterceptorProgram: void saveArgsToCache(int,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.google.android.material.textfield.TextInputLayout: int getMaxEms()
androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean isFirst()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel flatMap$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4: java.lang.Throwable invoke(java.lang.Throwable)
androidx.room.AmbiguousColumnResolver$Solution$Companion: AmbiguousColumnResolver$Solution$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.CoroutineScopeKt: void cancel$default(kotlinx.coroutines.CoroutineScope,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int compareTo(kotlinx.coroutines.EventLoopImplBase$DelayedTask)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: void forEachSlotLocked(kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow skip(kotlinx.coroutines.flow.Flow,int)
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean isBeforeFirst()
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode resolve$room_runtime_release(android.content.Context)
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
kotlinx.coroutines.JobSupportKt: void getEMPTY_ACTIVE$annotations()
com.google.android.material.button.MaterialButton: int getTextLayoutWidth()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object any(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
kotlinx.coroutines.scheduling.WorkQueue: int getSize$kotlinx_coroutines_core()
androidx.room.SQLiteCopyOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.intrinsics.CancellableKt: void dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable)
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
kotlin.jvm.internal.PropertyReference: boolean isLateinit()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
kotlinx.coroutines.internal.MainDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: SelectBuilderImpl$AtomicSelectOp(kotlinx.coroutines.selects.SelectBuilderImpl,kotlinx.coroutines.internal.AtomicDesc)
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletableJob: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
kotlinx.coroutines.CompletableJob: kotlin.coroutines.CoroutineContext$Key getKey()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: AbstractChannel$ReceiveHasNext(kotlinx.coroutines.channels.AbstractChannel$Itr,kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: StartedWhileSubscribed$command$2(kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatMapMerge$default(kotlinx.coroutines.flow.Flow,int,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.CancellableContinuation: java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
kotlinx.coroutines.JobSupport: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.room.util.StringUtil: void getEMPTY_STRING_ARRAY$annotations()
androidx.room.RenameColumn$Entries: androidx.room.RenameColumn[] value()
androidx.room.EntityInsertionAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
androidx.room.Fts4: androidx.room.FtsOptions$Order order()
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
androidx.room.FtsOptions$MatchInfo: androidx.room.FtsOptions$MatchInfo[] values()
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.Object[])
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$2: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.scheduling.CoroutineScheduler: int getAvailableCpuPermits()
com.google.android.material.chip.Chip: void setChipEndPadding(float)
com.google.android.material.textfield.TextInputLayout: int getEndIconMinSize()
androidx.room.AutoClosingRoomOpenHelperFactory: androidx.room.AutoClosingRoomOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)
androidx.room.util.ViewInfo: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel withIndex(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ArrayChannel: boolean isBufferEmpty()
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.jvm.functions.Function0)
kotlinx.coroutines.channels.ConflatedChannel: boolean isBufferEmpty()
kotlinx.coroutines.flow.FlowKt: java.lang.Object toSet(kotlinx.coroutines.flow.Flow,java.util.Set,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.Receive: void resumeReceiveClosed(kotlinx.coroutines.channels.Closed)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$none$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
kotlinx.coroutines.channels.AbstractChannelKt: void getOFFER_SUCCESS$annotations()
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
androidx.room.OnConflictStrategy$Companion: OnConflictStrategy$Companion()
androidx.room.RoomSQLiteQuery: java.lang.String getSql()
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
kotlinx.coroutines.internal.Symbol: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.FlowCoroutine: FlowCoroutine(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
kotlin.jvm.internal.FunctionReference: int hashCode()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForString$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow scan(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.SQLiteCopyOpenHelper: void close()
kotlinx.coroutines.ChildJob: java.lang.Object join(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ArrayQueue: void clear()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(java.lang.Runnable)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.scheduling.SchedulerTimeSource: SchedulerTimeSource()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void executeTask(kotlinx.coroutines.scheduling.Task)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setMaxWidthResource(int)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy: IMultiInstanceInvalidationService$Stub$Proxy(android.os.IBinder)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore fillPlaceholder(int,java.lang.Object)
androidx.room.EntityDeletionOrUpdateAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
kotlinx.coroutines.CancellableContinuationImpl: boolean cancel(java.lang.Throwable)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow filter(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.room.IMultiInstanceInvalidationCallback$Default: IMultiInstanceInvalidationCallback$Default()
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
androidx.room.Relation: java.lang.Class entity()
kotlinx.coroutines.selects.SelectClause1: void registerSelectClause1(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: void clearBindings()
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
kotlinx.coroutines.JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
kotlinx.coroutines.CompletedContinuation: java.lang.Object component4()
kotlinx.coroutines.internal.ThreadState: ThreadState(kotlin.coroutines.CoroutineContext,int)
kotlinx.coroutines.ParentJob: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
androidx.room.CoroutinesRoom: kotlinx.coroutines.flow.Flow createFlow(androidx.room.RoomDatabase,boolean,java.lang.String[],java.util.concurrent.Callable)
kotlinx.coroutines.JobSupport$ChildCompletion: java.lang.Object invoke(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean enableWriteAheadLogging()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(long[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: FlowKt__ReduceKt$reduce$2$emit$1(kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow unsafeTransform(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.NodeList getOrPromoteCancellingList(kotlinx.coroutines.Incomplete)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: CoroutineContextKt$foldCopies$folded$1(kotlin.jvm.internal.Ref$ObjectRef,boolean)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
kotlinx.coroutines.flow.FlowKt__LimitKt: kotlinx.coroutines.flow.Flow take(kotlinx.coroutines.flow.Flow,int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findTask(boolean)
androidx.room.RoomTrackingLiveData: void refreshRunnable$lambda$0(androidx.room.RoomTrackingLiveData)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.Task createTask(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext)
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.Job Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
com.google.android.material.chip.Chip: float getChipCornerRadius()
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.StackTraceElement getStackTraceElement()
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
androidx.room.EntityUpsertionAdapter: java.lang.Long[] upsertAndReturnIdsArrayBox(java.lang.Object[])
androidx.room.RoomDatabase$MigrationContainer: boolean contains(int,int)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object count(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object next(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: FlowKt__LimitKt$collectWhile$collector$1$emit$1(kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow filterNot(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask: EventLoopImplBase$DelayedResumeTask(kotlinx.coroutines.EventLoopImplBase,long,kotlinx.coroutines.CancellableContinuation)
androidx.core.app.ActivityCompat$Api16Impl: void finishAffinity(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.cardview.widget.CardView: void setMinimumHeight(int)
androidx.room.util.FtsTableInfo: java.util.Set parseOptions(java.lang.String)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.flow.ReadonlySharedFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException getCancellationException()
kotlinx.coroutines.scheduling.DefaultScheduler: void close()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long markFrozen()
androidx.lifecycle.LiveData: boolean hasObservers()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterNotNull(kotlinx.coroutines.channels.ReceiveChannel)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void bindString(int,java.lang.String)
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
kotlinx.coroutines.channels.SendChannel: kotlinx.coroutines.selects.SelectClause2 getOnSend()
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement access$createNewStatement(androidx.room.SharedSQLiteStatement)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel dropWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$1: java.lang.Object get(java.lang.Object)
kotlin.jvm.internal.PropertyReference: boolean equals(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
kotlinx.coroutines.flow.SubscribedFlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
androidx.room.RenameColumn: java.lang.String fromColumnName()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setForeignKeyConstraintsEnabled$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setForeignKeyConstraintsEnabled$1(boolean)
kotlinx.coroutines.internal.StackTraceRecoveryKt: boolean isArtificial(java.lang.StackTraceElement)
kotlinx.coroutines.JobSupport$AwaitContinuation: java.lang.Throwable getContinuationCancellationCause(kotlinx.coroutines.Job)
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2: FlowKt__ReduceKt$reduce$2(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.DisposeOnCancel: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.DisposableHandle disposeOnCompletion(kotlinx.coroutines.Job,kotlinx.coroutines.DisposableHandle)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object toList(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void setPageSize(long)
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KMutableProperty1$Setter getSetter()
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: void bindLong(int,long)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow,int)
kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow: java.lang.Object getValue()
kotlinx.coroutines.android.HandlerContext: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlin.jvm.functions.Function1 safeCtor(kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1: FlowKt__TransformKt$runningFold$1$1(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.CompletableJob: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: void invoke(java.lang.Throwable)
androidx.room.QueryInterceptorDatabase: void execSQL(java.lang.String,java.lang.Object[])
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabelResource(int)
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.ExecutorsKt: java.util.concurrent.Executor asExecutor(kotlinx.coroutines.CoroutineDispatcher)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1: FlowKt__TransformKt$filterIsInstance$$inlined$filter$1(kotlinx.coroutines.flow.Flow)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.channels.Channel: boolean close(java.lang.Throwable)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
kotlinx.coroutines.DispatcherExecutor: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1: FlowKt__EmittersKt$onEmpty$1$1(kotlin.jvm.internal.Ref$BooleanRef,kotlinx.coroutines.flow.FlowCollector)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMap(kotlinx.coroutines.channels.ReceiveChannel,java.util.Map,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase: androidx.room.InvalidationTracker getInvalidationTracker()
androidx.room.Index: java.lang.String[] value()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.channels.LinkedListChannel: boolean isBufferAlwaysFull()
kotlinx.coroutines.DispatchedTaskKt: void dispatch(kotlinx.coroutines.DispatchedTask,int)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
kotlinx.coroutines.Job: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: CombineKt$zipImpl$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.EventLoopImplPlatform: java.lang.Thread getThread()
com.google.android.material.button.MaterialButton: void setIconPadding(int)
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
kotlinx.coroutines.ParentJob: boolean isCancelled()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
kotlinx.coroutines.selects.SelectInstance: boolean trySelect()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function5)
androidx.room.RoomDatabase: void clearAllTables()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: FlowKt__ErrorsKt$catchImpl$2$emit$1(kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ProducerScope: void invokeOnClose(kotlin.jvm.functions.Function1)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean yieldIfContendedSafely(long)
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object tryReceive-PtdJZtk()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow,int)
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow conflate(kotlinx.coroutines.flow.Flow)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
androidx.core.graphics.drawable.IconCompat: IconCompat()
kotlinx.coroutines.android.HandlerDispatcher: kotlinx.coroutines.android.HandlerDispatcher getImmediate()
kotlinx.coroutines.DispatchedTask: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: boolean systemProp(java.lang.String,boolean)
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.selects.SeqNumber access$getSelectOpSequenceNumber$p()
androidx.room.RoomDatabase: java.util.Map getAutoMigrationSpecs()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$3: FlowKt__DelayKt$debounce$3(kotlin.jvm.functions.Function1)
androidx.room.util.StringUtil: java.lang.String joinIntoString(java.util.List)
kotlinx.coroutines.internal.ArrayQueue: ArrayQueue()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
androidx.appcompat.widget.SearchView: int getMaxWidth()
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletedWithCancellation: int hashCode()
kotlinx.coroutines.EventLoopImplBase: boolean shouldUnpark(kotlinx.coroutines.EventLoopImplBase$DelayedTask)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.Job Job(kotlinx.coroutines.Job)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
androidx.room.RoomDatabase$MigrationContainer: java.util.Map getMigrations()
kotlinx.coroutines.internal.CtorCache: kotlin.jvm.functions.Function1 get(java.lang.Class)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
kotlinx.coroutines.CoroutineScopeKt: boolean isActive(kotlinx.coroutines.CoroutineScope)
kotlinx.coroutines.flow.internal.AbortFlowException: AbortFlowException(kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.channels.AbstractChannel$onReceiveCatching$1: AbstractChannel$onReceiveCatching$1(kotlinx.coroutines.channels.AbstractChannel)
kotlinx.coroutines.flow.CallbackFlowBuilder: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorResumeNext(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow receiveAsFlow(kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel drop$default(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
androidx.room.AutoClosingRoomOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()
kotlinx.coroutines.flow.FlowKt__ErrorsKt: boolean isSameExceptionAs$FlowKt__ErrorsKt(java.lang.Throwable,java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.os.LocaleListCompat$Api21Impl: boolean matchesLanguageAndScript(java.util.Locale,java.util.Locale)
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1: java.lang.Object invoke()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
androidx.room.QueryInterceptorDatabase: long insert(java.lang.String,int,android.content.ContentValues)
kotlinx.coroutines.channels.AbstractChannel$TryPollDesc: java.lang.Object failure(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.internal.ResizableAtomicArray: int currentLength()
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.room.RoomSQLiteQuery: void getLongBindings$annotations()
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.flow.SharedFlowSlot createSlot()
kotlinx.coroutines.flow.FlowKt: java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletableDeferred: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow filterNotNull(kotlinx.coroutines.flow.Flow)
com.google.android.material.chip.Chip: void setBackgroundColor(int)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.CancellableContinuationKt: void removeOnCancellation(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: FlowKt__ZipKt$combineTransform$7$2(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: boolean timeToExecute(long)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.NoOpContinuation: void resumeWith(java.lang.Object)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore next()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy: java.lang.String getInterfaceDescriptor()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)
kotlinx.coroutines.internal.OpDescriptor: java.lang.Object perform(java.lang.Object)
com.google.android.material.internal.BaselineLayout: int getBaseline()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
kotlinx.coroutines.CancellableContinuationImpl: void callCancelHandler(kotlin.jvm.functions.Function1,java.lang.Throwable)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: void completeResumeReceive(java.lang.Object)
androidx.room.util.TableInfo$Column: TableInfo$Column(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object receiveSuspend(int,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobImpl: boolean complete()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ReceiveChannel$onReceiveOrNull$1: void registerSelectClause1(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
kotlinx.coroutines.internal.FastServiceLoader: java.lang.Object use(java.util.jar.JarFile,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.FastServiceLoader: java.lang.Object getProviderInstance(java.lang.String,java.lang.ClassLoader,java.lang.Class)
kotlinx.coroutines.CompletableDeferredImpl: kotlinx.coroutines.selects.SelectClause1 getOnAwait()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: int addFailReason(long)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void disableWriteAheadLogging()
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object firstOrNull(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
kotlinx.coroutines.flow.SharedFlowKt: kotlinx.coroutines.flow.MutableSharedFlow MutableSharedFlow(int,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.intrinsics.UndispatchedKt: void startDirect(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)
androidx.room.RoomDatabase$endTransaction$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
androidx.room.RoomSQLiteQuery$Companion: void getDESIRED_POOL_SIZE$annotations()
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: ExecutorCoroutineDispatcher$Key$1()
androidx.appcompat.app.AppCompatDelegate$Api24Impl: android.os.LocaleList localeListForLanguageTags(java.lang.String)
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: void selectAwaitCompletion$kotlinx_coroutines_core(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)
androidx.room.Update: java.lang.Class entity()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.ReceiveOrClosed: java.lang.Object getOfferResult()
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlinx.coroutines.internal.ThreadSafeHeap: void siftDownFrom(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
kotlinx.coroutines.internal.SystemPropsKt: int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
kotlinx.coroutines.CompletableJob: boolean cancel(java.lang.Throwable)
androidx.room.MultiInstanceInvalidationService$callbackList$1: MultiInstanceInvalidationService$callbackList$1(androidx.room.MultiInstanceInvalidationService)
androidx.room.InvalidationTracker: void internalInit$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumes$1: ChannelsKt__DeprecatedKt$consumes$1(kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: ChannelFlowTransformLatest$flowCollect$3(kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StartedLazily$command$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletableDeferred: boolean isCompleted()
kotlinx.coroutines.flow.StartedLazily: kotlinx.coroutines.flow.Flow command(kotlinx.coroutines.flow.StateFlow)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.room.IMultiInstanceInvalidationService$Stub: android.os.IBinder asBinder()
kotlinx.coroutines.Delay: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt: void subscribe(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.RoomOpenHelper$Delegate: void dropAllTables(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
kotlinx.coroutines.ChildJob: boolean isActive()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
androidx.room.MultiInstanceInvalidationClient: android.content.ServiceConnection getServiceConnection()
kotlinx.coroutines.JobKt: void ensureActive(kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.android.HandlerContext)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toMutableList(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.room.InvalidationTracker$Observer: void onInvalidated(java.util.Set)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: ChannelsKt__DeprecatedKt$maxWith$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: java.lang.Object singleOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object offerSelectInternal(java.lang.Object,kotlinx.coroutines.selects.SelectInstance)
androidx.room.InvalidationTracker$WeakObserver: void onInvalidated(java.util.Set)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.room.ColumnInfo: int collate()
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalStyle(int)
androidx.room.QueryInterceptorStatement: void executeInsert$lambda$2(androidx.room.QueryInterceptorStatement)
androidx.room.SQLiteCopyOpenHelper: java.lang.String getDatabaseName()
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1: void invoke(java.lang.Throwable)
kotlinx.coroutines.JobSupport: java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(int[])
kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher()
kotlinx.coroutines.CompletableDeferredImpl: CompletableDeferredImpl(kotlinx.coroutines.Job)
androidx.room.SQLiteCopyOpenHelper: androidx.sqlite.db.SupportSQLiteOpenHelper createFrameworkOpenHelper(java.io.File)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow compose(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2: FlowKt__ReduceKt$single$2(kotlin.jvm.internal.Ref$ObjectRef)
kotlinx.coroutines.internal.ThreadSafeHeap: void swap(int,int)
kotlinx.coroutines.channels.Receive: kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
kotlinx.coroutines.ThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.CoroutineStart: void invoke(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
kotlinx.coroutines.JobNode: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3)
kotlin.jvm.internal.CallableReference: boolean isOpen()
kotlinx.coroutines.flow.internal.AbstractSharedFlow: int access$getNCollectors(kotlinx.coroutines.flow.internal.AbstractSharedFlow)
kotlinx.coroutines.flow.FlowKt__MigrationKt: void subscribe(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaxSqlCacheSize$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope MainScope()
kotlinx.coroutines.JobSupport$Finishing: boolean isActive()
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.room.CoroutinesRoom: java.lang.Object execute(androidx.room.RoomDatabase,boolean,java.util.concurrent.Callable,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1: java.lang.Object[] invoke()
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
androidx.room.AutoCloser: int getRefCount$room_runtime_release()
androidx.room.FtsOptions$Order: androidx.room.FtsOptions$Order[] values()
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
kotlinx.coroutines.internal.ClassValueCtorCache$cache$1: java.lang.Object computeValue(java.lang.Class)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function7)
kotlinx.coroutines.internal.FastServiceLoaderKt: boolean getANDROID_DETECTED()
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel produceIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlinx.coroutines.flow.Flow distinctUntilChangedBy$FlowKt__DistinctKt(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.internal.ChannelFlow: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow map(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: ChannelsKt__DeprecatedKt$firstOrNull$1(kotlin.coroutines.Continuation)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.channels.ChannelResult: boolean isSuccess-impl(java.lang.Object)
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow publishOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
androidx.room.SharedSQLiteStatement: void assertNotMainThread()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
kotlinx.coroutines.channels.ArrayChannel: void onCancelIdempotent(boolean)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consumeEach(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharedFlowImpl: void cancelEmitter(kotlinx.coroutines.flow.SharedFlowImpl$Emitter)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlinx.coroutines.Deferred: java.lang.Object await(kotlin.coroutines.Continuation)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addTypeConverter(java.lang.Object)
androidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1: java.lang.Object invoke(java.lang.Object)
kotlin.jvm.internal.CallableReference: boolean isFinal()
kotlinx.coroutines.channels.ChannelResult: java.lang.String toString-impl(java.lang.Object)
kotlinx.coroutines.channels.ChannelCoroutine: void invokeOnClose(kotlin.jvm.functions.Function1)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void registerDataSetObserver(android.database.DataSetObserver)
androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)
androidx.room.CoroutinesRoom$Companion$createFlow$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
kotlinx.coroutines.JobSupport: java.lang.String nameString$kotlinx_coroutines_core()
kotlinx.coroutines.channels.Send: void completeResumeSend()
kotlinx.coroutines.selects.SelectKt: java.lang.Object select(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow: SubscriptionCountStateFlow(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$maximumSize$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$maximumSize$1()
androidx.room.RenameTable: java.lang.String fromTableName()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.SharedFlow onSubscription(kotlinx.coroutines.flow.SharedFlow,kotlin.jvm.functions.Function2)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel zip$default(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: ChannelsKt__Channels_commonKt$consumeEach$3(kotlin.coroutines.Continuation)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
kotlinx.coroutines.internal.MainDispatchersKt: java.lang.Void throwMissingMainDispatcherException()
kotlinx.coroutines.CoroutineStart: CoroutineStart(java.lang.String,int)
kotlinx.coroutines.flow.FlowKt: java.lang.Object toSet$default(kotlinx.coroutines.flow.Flow,java.util.Set,kotlin.coroutines.Continuation,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1: FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1(kotlinx.coroutines.channels.BroadcastChannel)
kotlinx.coroutines.channels.SendChannel: boolean isClosedForSend()
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlin.jvm.functions.Function1 bindCancellationFun(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
androidx.room.MultiInstanceInvalidationClient$1: boolean isRemote$room_runtime_release()
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: FlowKt__EmittersKt$transform$1$1(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onEmpty(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: CombineKt$zipImpl$1$1$second$1(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineName$Key: CoroutineName$Key()
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.room.AutoCloser: int getRefCountForTest$room_runtime_release()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
kotlinx.coroutines.AbstractCoroutine: AbstractCoroutine(kotlin.coroutines.CoroutineContext,boolean,boolean)
androidx.core.content.res.ResourcesCompat$Api15Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int)
kotlinx.coroutines.channels.Closed: void completeResumeSend()
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: java.lang.Object invoke(kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryUnpark()
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object offerInternal(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1: FlowKt__MergeKt$flatMapMerge$$inlined$map$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setLocale$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.flow.FlowKt__DistinctKt: void getDefaultKeySelector$annotations$FlowKt__DistinctKt()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.sequences.Sequence)
kotlinx.coroutines.flow.ChannelAsFlow: ChannelAsFlow(kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: java.lang.Object invoke(kotlinx.coroutines.flow.SharingCommand,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BufferOverflow: BufferOverflow(java.lang.String,int)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.room.RoomDatabase: java.util.Set getRequiredAutoMigrationSpecs()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
kotlinx.coroutines.channels.AbstractChannel: void onReceiveDequeued()
kotlinx.coroutines.flow.FlowKt__EmittersKt: kotlinx.coroutines.flow.Flow onEmpty(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.StateFlowKt: void update(kotlinx.coroutines.flow.MutableStateFlow,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: kotlinx.coroutines.internal.ConcurrentLinkedListNode getRightmostAliveNode()
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object lastOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: java.lang.String toString()
androidx.room.EntityInsertionAdapter: void insert(java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: java.lang.Object flowCollect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.android.HandlerDispatcherKt: void access$updateChoreographerAndPostFrameCallback(kotlinx.coroutines.CancellableContinuation)
kotlin.jvm.internal.Lambda: int getArity()
androidx.room.MapInfo: java.lang.String valueTable()
androidx.room.AmbiguousColumnResolver$ResultColumn: int component2()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow retry(kotlinx.coroutines.flow.Flow,long,kotlin.jvm.functions.Function2)
kotlinx.coroutines.BlockingEventLoop: java.lang.Thread getThread()
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.RoomDatabase: java.util.Map getBackingFieldMap()
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
com.google.android.material.chip.Chip: void setChecked(boolean)
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: SafeCollectorKt$emitFun$1()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.room.RoomSQLiteQuery: RoomSQLiteQuery(int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.DiagnosticCoroutineContextException: DiagnosticCoroutineContextException(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.AbstractTimeSource: void parkNanos(java.lang.Object,long)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object none(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineContextKt$foldCopies$1: kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
kotlin.jvm.internal.PropertyReference0: kotlin.reflect.KCallable computeReflected()
kotlinx.coroutines.flow.SharedFlowImpl: boolean access$tryEmitLocked(kotlinx.coroutines.flow.SharedFlowImpl,java.lang.Object)
androidx.room.Fts3: java.lang.String tokenizer()
kotlinx.coroutines.internal.LimitedDispatcher: LimitedDispatcher(kotlinx.coroutines.CoroutineDispatcher,int)
androidx.room.RoomSQLiteQuery: void init(java.lang.String,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function7)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: void finishOnSuccess(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)
kotlinx.coroutines.selects.SelectBuilderImpl: void invoke(kotlinx.coroutines.selects.SelectClause2,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.room.util.TableInfoKt: androidx.room.util.TableInfo readTableInfo(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
kotlinx.coroutines.flow.FlowKt: int getDEFAULT_CONCURRENCY()
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: java.lang.String systemProp(java.lang.String)
androidx.room.AmbiguousColumnResolver$ResultColumn: java.lang.String component1()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobNode: java.lang.String toString()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
kotlinx.coroutines.JobSupport: void onCancelling(java.lang.Throwable)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlin.jvm.functions.Function1 resumeOnCancellationFun(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.selects.SelectKt: java.lang.Object access$getRESUMED$p()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel takeWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.room.InvalidationTracker$WeakObserver: InvalidationTracker$WeakObserver(androidx.room.InvalidationTracker,androidx.room.InvalidationTracker$Observer)
kotlinx.coroutines.flow.internal.FlowExceptions_commonKt: int checkIndexOverflow(int)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void usePrivateScheduler$kotlinx_coroutines_core()
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.StackTraceElement getStackTraceElement()
kotlinx.coroutines.sync.SemaphoreKt: int access$getMAX_SPIN_CYCLES$p()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow compose(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
kotlinx.coroutines.channels.ReceiveChannel: boolean cancel(java.lang.Throwable)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
androidx.room.util.ViewInfo: int hashCode()
kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1: FlowKt__ZipKt$nullArrayFactory$1()
kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.ExecutorCoroutineDispatcher from(java.util.concurrent.ExecutorService)
kotlinx.coroutines.SelectAwaitOnCompletion: SelectAwaitOnCompletion(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryCreateWorker(long)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_NEW$p()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
kotlinx.coroutines.CompletionHandlerBase: java.lang.Object invoke(java.lang.Object)
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KCallable computeReflected()
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
kotlinx.coroutines.internal.AtomicOp: boolean isDecided()
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: FlowKt__ShareKt$launchSharing$1$2(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.MutableSharedFlow,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.RemoveOnCancel: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.EventLoopKt: long processNextEventInCurrentThread()
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: void invoke(java.lang.Throwable)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.room.Fts4: java.lang.Class contentEntity()
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.channels.ChannelIterator iterator()
kotlinx.coroutines.IncompleteStateBox: IncompleteStateBox(kotlinx.coroutines.Incomplete)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedColor(int)
androidx.room.QueryInterceptorDatabase: void beginTransaction$lambda$0(androidx.room.QueryInterceptorDatabase)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.checkbox.MaterialCheckBox: java.lang.String getButtonStateDescription()
kotlinx.coroutines.flow.SharedFlowKt: void getNO_VALUE$annotations()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: java.lang.String getString(int)
kotlinx.coroutines.internal.SystemPropsKt: int getAVAILABLE_PROCESSORS()
com.actiontracker.app.ui.WallpaperActivity: WallpaperActivity()
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object invokeSuspend(java.lang.Object)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.internal.InlineList: int hashCode()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void pokeOpen()
kotlinx.coroutines.scheduling.SchedulerTimeSource: long nanoTime()
kotlinx.coroutines.flow.internal.ChannelFlow: ChannelFlow(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1: java.lang.String invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.EntityUpsertionAdapter: long upsertAndReturnId(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: FlowKt__DelayKt$sample$2$1$1(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl: void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
androidx.room.util.UUIDUtil: java.util.UUID convertByteToUUID(byte[])
com.google.android.material.textfield.TextInputLayout: void setMinEms(int)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)
androidx.room.RoomOpenHelper$Delegate: void onPreMigrate(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
kotlinx.coroutines.ResumeOnCompletion: ResumeOnCompletion(kotlin.coroutines.Continuation)
kotlinx.coroutines.TimeoutCancellationException: kotlinx.coroutines.TimeoutCancellationException createCopy()
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
kotlinx.coroutines.internal.SystemPropsKt: java.lang.String systemProp(java.lang.String)
androidx.room.util.CursorUtil$wrapMappedColumns$2: int getColumnIndex(java.lang.String)
kotlinx.coroutines.channels.ProducerCoroutine: void onCompleted(kotlin.Unit)
androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)
kotlinx.coroutines.internal.InlineList: boolean equals-impl(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.StateFlowSlot: kotlin.coroutines.Continuation[] freeLocked(kotlinx.coroutines.flow.StateFlowImpl)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexedNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask: java.lang.String toString()
kotlinx.coroutines.scheduling.CoroutineScheduler: void runSafely(kotlinx.coroutines.scheduling.Task)
kotlinx.coroutines.CancelFutureOnCompletion: CancelFutureOnCompletion(java.util.concurrent.Future)
kotlinx.coroutines.channels.SendElement: java.lang.String toString()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable unwrap(java.lang.Throwable)
androidx.room.RoomSQLiteQuery: void bindBlob(int,byte[])
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow debounce(kotlinx.coroutines.flow.Flow,long)
androidx.room.InvalidationTracker: void removeObserver(androidx.room.InvalidationTracker$Observer)
kotlin.jvm.internal.FunctionReference: boolean isInline()
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
kotlinx.coroutines.internal.ConcurrentKt: void ReentrantLock$annotations()
kotlinx.coroutines.JobSupport: void parentCancelled(kotlinx.coroutines.ParentJob)
kotlinx.coroutines.flow.internal.ChannelFlowMerge: kotlinx.coroutines.channels.ReceiveChannel produceImpl(kotlinx.coroutines.CoroutineScope)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toList(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.ChildHandleNode: ChildHandleNode(kotlinx.coroutines.ChildJob)
androidx.room.TransactionElement: void acquire()
kotlinx.coroutines.JobImpl: boolean handlesException()
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: FlowKt__ReduceKt$singleOrNull$1(kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__EmittersKt: kotlinx.coroutines.flow.Flow unsafeTransform(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.room.RoomWarnings: RoomWarnings()
kotlinx.coroutines.selects.SeqNumber: long next()
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getSuperButtonTintList()
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlinx.coroutines.channels.ChannelIterator: java.lang.Object hasNext(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.ChildJob: void cancel(java.util.concurrent.CancellationException)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonTintList()
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
kotlinx.coroutines.scheduling.DefaultIoScheduler: java.lang.String toString()
kotlinx.coroutines.Job$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: java.lang.Object executeSqliteStatementWithRefCount(kotlin.jvm.functions.Function1)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.material.checkbox.MaterialCheckBox: int getCheckedState()
kotlinx.coroutines.channels.RendezvousChannel: boolean isBufferAlwaysEmpty()
kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: void completeResumeReceive(java.lang.Object)
kotlinx.coroutines.channels.Channel: java.lang.Object receiveOrNull(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StartedLazily: StartedLazily()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow debounceDuration(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlin.jvm.functions.Function1 createConstructor(java.lang.Class)
kotlinx.coroutines.flow.internal.StackFrameContinuation: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.channels.AbstractChannel$Itr: void setResult(java.lang.Object)
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl: void onPointerCaptureChanged(android.view.Window$Callback,boolean)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1: FlowKt__EmittersKt$unsafeTransform$1$1(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function5)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1: FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1(kotlin.jvm.functions.Function2,kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow runningFold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalBias(float)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object awaitValue(kotlinx.coroutines.flow.SharedFlowSlot,kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: ChannelsKt__DeprecatedKt$dropWhile$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.sync.Semaphore Semaphore$default(int,int,int,java.lang.Object)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task poll()
androidx.room.Junction: java.lang.String entityColumn()
kotlinx.coroutines.intrinsics.UndispatchedKt: java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.Symbol: Symbol(java.lang.String)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consumeEach(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelResult: java.lang.Object constructor-impl(java.lang.Object)
kotlinx.coroutines.flow.SharedFlowImpl: void access$enqueueLocked(kotlinx.coroutines.flow.SharedFlowImpl,java.lang.Object)
androidx.room.AutoCloser: void setDelegateDatabase$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.CoroutineExceptionHandlerKt: kotlinx.coroutines.CoroutineExceptionHandler CoroutineExceptionHandler(kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.ThreadSafeHeap: int getSize()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$$inlined$unsafeFlow$1: FlowKt__LimitKt$drop$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,int)
androidx.room.DelegatingOpenHelper: androidx.sqlite.db.SupportSQLiteOpenHelper getDelegate()
androidx.room.AutoCloser$Companion: AutoCloser$Companion()
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object pollInternal()
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: java.lang.Object invoke(kotlinx.coroutines.flow.SharingCommand,kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.ThreadLocalEventLoop: void resetEventLoop$kotlinx_coroutines_core()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlinx.coroutines.DefaultExecutor: java.lang.Thread getThread()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode access$correctPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.OpDescriptor)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.room.util.TableInfo$Column: boolean equals(java.lang.Object)
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
kotlinx.coroutines.Deferred: java.lang.Object join(kotlin.coroutines.Continuation)
androidx.room.util.ViewInfo: ViewInfo(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
androidx.room.util.TableInfo$Column$Companion: TableInfo$Column$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.MutableSharedFlow: boolean tryEmit(java.lang.Object)
androidx.room.RoomDatabase$JournalMode: boolean isLowRamDevice(android.app.ActivityManager)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.QueryInterceptorDatabase: long setMaximumSize(long)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1: FlowKt__ZipKt$combine$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.room.InvalidationLiveDataContainer: java.util.Set getLiveDataSet$room_runtime_release()
androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: HandlerContext$scheduleResumeAfterDelay$1(kotlinx.coroutines.android.HandlerContext,java.lang.Runnable)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: java.lang.Object access$emitAllImpl$FlowKt__ChannelsKt(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuationKt: java.lang.Object suspendCancellableCoroutineReusable(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api19Impl: android.os.Bundle getExtras(android.view.accessibility.AccessibilityNodeInfo)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.StackTraceElement artificialFrame(java.lang.String)
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.actiontracker.app.data.AppDatabase: AppDatabase()
androidx.room.ForeignKey: java.lang.String[] parentColumns()
androidx.room.TransactionExecutor: void scheduleNext()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode getAffectedNode()
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.channels.AbstractChannel)
kotlinx.coroutines.DebugStringsKt: java.lang.String getClassSimpleName(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.SharedFlow asSharedFlow(kotlinx.coroutines.flow.MutableSharedFlow)
kotlinx.coroutines.channels.SendChannel: void invokeOnClose(kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task add(kotlinx.coroutines.scheduling.Task,boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
kotlinx.coroutines.sync.SemaphoreSegment: SemaphoreSegment(long,kotlinx.coroutines.sync.SemaphoreSegment,int)
androidx.room.InvalidationLiveDataContainer: void onInactive(androidx.lifecycle.LiveData)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
kotlinx.coroutines.flow.FlowKt__CountKt$count$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException)
androidx.room.AmbiguousColumnResolver$ResultColumn: int getIndex()
kotlinx.coroutines.AbstractTimeSource: AbstractTimeSource()
kotlinx.coroutines.selects.SelectBuilderImpl: void invoke(kotlinx.coroutines.selects.SelectClause2,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.Deferred: boolean isCancelled()
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow delayEach(kotlinx.coroutines.flow.Flow,long)
androidx.room.InvalidationTracker$ObservedTableTracker: InvalidationTracker$ObservedTableTracker(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1: FlowKt__ZipKt$combine$6$1(kotlinx.coroutines.flow.Flow[])
kotlinx.coroutines.Dispatchers: void getUnconfined$annotations()
kotlinx.coroutines.flow.FlowKt__MigrationKt: java.lang.Void noImpl()
kotlinx.coroutines.DebugKt: boolean getDEBUG()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
kotlinx.coroutines.channels.ChannelResult: ChannelResult(java.lang.Object)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object access$collectWithContextUndispatched(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int getIndex()
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean isAfterLast()
kotlinx.coroutines.BuildersKt__Builders_commonKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobKt: kotlinx.coroutines.Job Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
kotlinx.coroutines.internal.StackTraceRecoveryKt: void StackTraceElement$annotations()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
androidx.room.QueryInterceptorDatabase: boolean yieldIfContendedSafely(long)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collectLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: void run()
androidx.room.util.TableInfo: androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
androidx.room.RoomDatabase: java.lang.Object unwrapOpenHelper(java.lang.Class,androidx.sqlite.db.SupportSQLiteOpenHelper)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: int getType(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow sample-HG0u8IE(kotlinx.coroutines.flow.Flow,long)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
kotlinx.coroutines.internal.LockFreeTaskQueue: boolean addLast(java.lang.Object)
androidx.room.RoomSQLiteQuery: void close()
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol access$getPERMIT$p()
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1: FlowKt__EmittersKt$unsafeTransform$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.ParentJob: void cancel(java.util.concurrent.CancellationException)
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior()
kotlinx.coroutines.channels.ChannelResult: boolean isClosed-impl(java.lang.Object)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.CompletableJob SupervisorJob$default(kotlinx.coroutines.Job,int,java.lang.Object)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$1: java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()
kotlin.collections.AbstractMutableList: AbstractMutableList()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1: FlowKt__ErrorsKt$catchImpl$1(kotlin.coroutines.Continuation)
androidx.lifecycle.LiveData: void observeForever(androidx.lifecycle.Observer)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consume(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1: kotlin.Pair invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelResult: void getHolder$annotations()
kotlinx.coroutines.CompletableDeferred: kotlin.coroutines.CoroutineContext$Key getKey()
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object pollSelectInternal(kotlinx.coroutines.selects.SelectInstance)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: int getNCollectors()
androidx.room.CoroutinesRoom$Companion: CoroutinesRoom$Companion()
androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.appcompat.widget.SearchView: int getImeOptions()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow buffer(kotlinx.coroutines.flow.Flow,int,kotlinx.coroutines.channels.BufferOverflow)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object)
androidx.room.QueryInterceptorStatement: void simpleQueryForString$lambda$4(androidx.room.QueryInterceptorStatement)
kotlinx.coroutines.ChildJob: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
kotlinx.coroutines.channels.ReceiveChannel$onReceiveOrNull$1$registerSelectClause1$1: java.lang.Object invoke-WpGqRn0(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.room.QueryInterceptorDatabase: void execSQL$lambda$10(androidx.room.QueryInterceptorDatabase,java.lang.String)
kotlinx.coroutines.internal.InlineList: java.lang.Object constructor-impl$default(java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.room.RoomDatabase$MigrationContainer: RoomDatabase$MigrationContainer()
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1: FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
kotlinx.coroutines.Job: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
kotlinx.coroutines.flow.SharedFlowImpl: void access$setQueueSize$p(kotlinx.coroutines.flow.SharedFlowImpl,int)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.MutableSharedFlow: java.util.List getReplayCache()
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
kotlinx.coroutines.JobKt: void cancelChildren$default(kotlinx.coroutines.Job,java.lang.Throwable,int,java.lang.Object)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull()
androidx.room.util.TableInfo$Index: TableInfo$Index(java.lang.String,boolean,java.util.List,java.util.List)
kotlinx.coroutines.flow.internal.SafeCollectorKt: kotlin.jvm.functions.Function3 access$getEmitFun$p()
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
androidx.room.RoomTrackingLiveData: java.util.concurrent.atomic.AtomicBoolean getInvalid()
kotlinx.coroutines.selects.SelectBuilderImpl$SelectOnCancelling: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.internal.AtomicOp: long getOpSequence()
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: FlowKt__ReduceKt$first$$inlined$collectWhile$2$1(kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2,kotlin.coroutines.Continuation)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1: java.lang.Integer invoke(androidx.sqlite.db.SupportSQLiteStatement)
androidx.room.EntityInsertionAdapter: void insert(java.lang.Object[])
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$maximumSize$1: java.lang.Object get(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.StateFlow asStateFlow(kotlinx.coroutines.flow.MutableStateFlow)
kotlinx.coroutines.flow.internal.AbstractSharedFlowKt: void getEMPTY_RESUMES$annotations()
kotlinx.coroutines.internal.StackTraceRecoveryKt: void initCause(java.lang.Throwable,java.lang.Throwable)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.Deferred: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: MissingMainCoroutineDispatcher(java.lang.Throwable,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol access$getCANCELLED$p()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.room.migration.AutoMigrationSpec$-CC: void $default$onPostMigrate(androidx.room.migration.AutoMigrationSpec,androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.util.TableInfo$Index: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1: java.lang.Object invoke(java.lang.Object)
androidx.room.RoomDatabase$PrepackagedDatabaseCallback: RoomDatabase$PrepackagedDatabaseCallback()
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
kotlinx.coroutines.AbstractTimeSourceKt: void unregisterTimeLoopThread()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel distinct(kotlinx.coroutines.channels.ReceiveChannel)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl: boolean removeTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: SharedFlowImpl$Emitter(kotlinx.coroutines.flow.SharedFlowImpl,long,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.DispatchedTask: DispatchedTask(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(int)
kotlinx.coroutines.CompletableJob: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void dispose()
androidx.room.RoomDatabase: java.util.List getAutoMigrations(java.util.Map)
kotlinx.coroutines.ChildJob: boolean isCompleted()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void close()
kotlinx.coroutines.DisposeOnCancel: void invoke(java.lang.Throwable)
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: int getAVAILABLE_PROCESSORS()
androidx.room.util.CursorUtil: android.database.Cursor wrapMappedColumns(android.database.Cursor,java.lang.String[],int[])
androidx.room.InvalidationTracker$ObservedTableTracker: void setNeedsSync(boolean)
kotlinx.coroutines.internal.Segment: void onSlotCleaned()
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.ParentJob: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy: void onInvalidation(java.lang.String[])
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object getLastReplayedLocked()
kotlinx.coroutines.NodeList: NodeList()
androidx.room.paging.LimitOffsetDataSource: LimitOffsetDataSource(androidx.room.RoomDatabase,androidx.room.RoomSQLiteQuery,boolean,boolean,java.lang.String[])
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuationImpl: boolean tryResume()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(java.util.Iterator)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object invoke(kotlin.Unit,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractSendChannel: int countQueueSize()
androidx.room.InvalidationTracker$ObservedTableTracker$Companion: InvalidationTracker$ObservedTableTracker$Companion()
kotlinx.coroutines.ChildJob: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
kotlinx.coroutines.flow.internal.StackFrameContinuation: java.lang.StackTraceElement getStackTraceElement()
kotlinx.coroutines.channels.AbstractChannel$Itr: AbstractChannel$Itr(kotlinx.coroutines.channels.AbstractChannel)
kotlinx.coroutines.NodeList: kotlinx.coroutines.NodeList getList()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
androidx.appcompat.widget.AppCompatSpinner$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1: java.lang.Object emit(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.util.concurrent.Executor getExecutor()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object minWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toSet(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
com.google.android.material.carousel.CarouselLayoutManager: CarouselLayoutManager()
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Deferred async(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
androidx.room.AutoCloser: java.lang.Object executeRefCountingFunction(kotlin.jvm.functions.Function1)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: java.lang.Object invoke-WpGqRn0(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StateFlow: java.util.List getReplayCache()
com.google.android.material.textfield.TextInputLayout: int getMinEms()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function6)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
kotlinx.coroutines.UndispatchedCoroutine: UndispatchedCoroutine(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder setQueryCallback(androidx.room.RoomDatabase$QueryCallback,java.util.concurrent.Executor)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.room.R: R()
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.AbstractMutableSet: AbstractMutableSet()
kotlinx.coroutines.EventLoopImplBase: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.ChildJob: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask: java.lang.String toString()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
kotlinx.coroutines.internal.DispatchedContinuation: void dispatchYield$kotlinx_coroutines_core(kotlin.coroutines.CoroutineContext,java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void setVersion(int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StateFlowSlot: boolean allocateLocked(java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
kotlinx.coroutines.internal.LimitedDispatcher: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1: FlowKt__MergeKt$flatMapConcat$$inlined$map$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10(kotlin.ranges.LongRange)
kotlinx.coroutines.scheduling.DefaultIoScheduler: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: void setTextAppearance(int)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
kotlinx.coroutines.internal.SegmentOrClosed: java.lang.Object unbox-impl()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
kotlinx.coroutines.ParentJob: boolean start()
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.StateFlow stateIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
kotlinx.coroutines.channels.Closed: void completeResumeReceive(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$needUpgrade$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$needUpgrade$1(int)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt: void sendBlocking(kotlinx.coroutines.channels.SendChannel,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.RoomOpenHelper: void createMasterTableIfNotExists(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.JobKt: void cancel$default(kotlinx.coroutines.Job,java.lang.String,java.lang.Throwable,int,java.lang.Object)
kotlinx.coroutines.DisposableHandle: void dispose()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.channels.ReceiveChannel fixedPeriodTicker(kotlinx.coroutines.CoroutineScope,long,long)
kotlinx.coroutines.internal.InlineList: int hashCode-impl(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: boolean retry(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
kotlin.jvm.internal.PropertyReference0: kotlin.reflect.KProperty$Getter getGetter()
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot: boolean allocateLocked(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: java.lang.Object invoke-WpGqRn0(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__CountKt$count$3: FlowKt__CountKt$count$3(kotlin.coroutines.Continuation)
kotlinx.coroutines.AbstractCoroutine: void afterResume(java.lang.Object)
androidx.room.AutoCloser$Companion: AutoCloser$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.room.Room: Room()
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc describeSendBuffered(java.lang.Object)
kotlinx.coroutines.internal.ClassValueCtorCache$cache$1: ClassValueCtorCache$cache$1()
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object getNextOrClosed()
kotlinx.coroutines.JobSupport: java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
kotlinx.coroutines.channels.ProduceKt: java.lang.Object awaitClose(kotlinx.coroutines.channels.ProducerScope,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setSingleLine(boolean)
kotlinx.coroutines.channels.LinkedListChannel: java.lang.Object offerInternal(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ReceiveChannel: void cancel(java.util.concurrent.CancellationException)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filterNot(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow transformLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
kotlinx.coroutines.internal.ThreadSafeHeapNode: kotlinx.coroutines.internal.ThreadSafeHeap getHeap()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
kotlinx.coroutines.EventLoop: boolean isUnconfinedQueueEmpty()
androidx.room.util.TableInfo$Column: int findAffinity(java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot createSlot()
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
kotlinx.coroutines.EventLoop: void incrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object)
kotlinx.coroutines.JobKt: void cancelFutureOnCancellation(kotlinx.coroutines.CancellableContinuation,java.util.concurrent.Future)
kotlinx.coroutines.channels.AbstractChannelKt: void getPOLL_FAILED$annotations()
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
kotlinx.coroutines.channels.ConflatedChannel: void onCancelIdempotent(boolean)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object poll()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.CoroutineExceptionHandlerImplKt: void handleCoroutineExceptionImpl(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.google.android.material.chip.Chip: float getChipEndPadding()
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1: java.lang.Object invoke(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$delete$1: java.lang.Integer invoke(androidx.sqlite.db.SupportSQLiteDatabase)
com.google.android.material.button.MaterialButton: int getIconGravity()
kotlinx.coroutines.JobSupport: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object)
kotlinx.coroutines.selects.SelectBuilderImpl$PairSelectOp: SelectBuilderImpl$PairSelectOp(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: long getPageSize()
kotlinx.coroutines.CompletableDeferred: boolean complete(java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: int getColumnCount()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.Upsert: java.lang.Class entity()
com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
androidx.room.BuiltInTypeConverters$State: BuiltInTypeConverters$State(java.lang.String,int)
kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
kotlinx.coroutines.internal.SystemPropsKt: boolean systemProp(java.lang.String,boolean)
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1: FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1(kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.android.HandlerContext: void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceive()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: FlowKt__ZipKt$combineTransformUnsafe$1(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object next()
kotlinx.coroutines.internal.AtomicKt: void getNO_DECISION$annotations()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.internal.StackTraceRecoveryKt: void CoroutineStackFrame$annotations()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$any$1: ChannelsKt__DeprecatedKt$any$1(kotlin.coroutines.Continuation)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: FlowKt__TransformKt$runningReduce$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1,kotlin.coroutines.Continuation)
com.google.android.material.textfield.MaterialAutoCompleteTextView: int getSimpleItemSelectedColor()
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
androidx.room.util.DBUtil: java.lang.String processForeignKeyCheckFailure(android.database.Cursor)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
kotlinx.coroutines.flow.ChannelFlowBuilder: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.channels.ReceiveChannel fixedPeriodTicker$default(kotlinx.coroutines.CoroutineScope,long,long,int,java.lang.Object)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl: boolean isInLayout(android.view.View)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CompletableJob: void cancel(java.util.concurrent.CancellationException)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow onEach(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.jvm.functions.Function1)
kotlinx.coroutines.CancelledContinuation: CancelledContinuation(kotlin.coroutines.Continuation,java.lang.Throwable,boolean)
kotlinx.coroutines.JobSupport: boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
kotlinx.coroutines.Empty: Empty(boolean)
kotlinx.coroutines.flow.FlowKt: java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
androidx.room.RoomDatabase: void setTransactionSuccessful()
androidx.room.RoomDatabase: void getMDatabase$annotations()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatten(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.JobKt: boolean isActive(kotlin.coroutines.CoroutineContext)
com.actiontracker.app.ui.SettingsActivity: SettingsActivity()
kotlinx.coroutines.flow.SubscribedFlowCollector: java.lang.Object onSubscription(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: ChannelsKt__DeprecatedKt$singleOrNull$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.CoroutineScheduler: CoroutineScheduler(int,int,long,java.lang.String)
kotlinx.coroutines.EventLoop: EventLoop()
kotlinx.coroutines.internal.DispatchedContinuation: void awaitReusability()
androidx.room.RoomTrackingLiveData: void onInactive()
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.channels.ArrayChannel: boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive)
kotlinx.coroutines.android.HandlerContext: int hashCode()
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior()
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void restore$kotlinx_coroutines_core()
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
kotlinx.coroutines.internal.DispatchedContinuation: void resumeWith(java.lang.Object)
kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1: void run()
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.EventLoop: void decrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object)
kotlinx.coroutines.NodeList: boolean isActive()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean moveToFirst()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: java.lang.Object findSegmentInternal(kotlinx.coroutines.internal.Segment,long,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.JobSupport: java.lang.Object cancelMakeCompleting(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
kotlinx.coroutines.channels.Channel: java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.Channel: kotlinx.coroutines.selects.SelectClause2 getOnSend()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: int executeUpdateDelete()
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalStyle(int)
androidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteOpenHelper getOpenHelper()
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: int getCount()
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KProperty$Getter getGetter()
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void shutdown$kotlinx_coroutines_core(long)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.SharedFlow asSharedFlow(kotlinx.coroutines.flow.MutableSharedFlow)
kotlinx.coroutines.JobSupport: java.lang.String cancellationExceptionMessage()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.StackTraceElement getStackTraceElement()
kotlinx.coroutines.internal.LockFreeTaskQueue: int getSize()
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: SubscribedFlowCollector$onSubscription$1(kotlinx.coroutines.flow.SubscribedFlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
kotlinx.coroutines.Unconfined: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
androidx.room.QueryInterceptorOpenHelper: java.lang.String getDatabaseName()
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState$default(java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.BeforeResumeCancelHandler: java.lang.Object invoke(java.lang.Object)
androidx.room.RoomTrackingLiveData: boolean getInTransaction()
kotlinx.coroutines.Deferred: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable access$recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
androidx.room.CoroutinesRoom$Companion$execute$4$job$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.SemaphoreImpl: boolean tryResumeAcquire(kotlinx.coroutines.CancellableContinuation)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
kotlinx.coroutines.internal.AtomicKt: void getRETRY_ATOMIC$annotations()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.sync.Semaphore Semaphore(int,int)
kotlinx.coroutines.flow.StateFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
androidx.room.RoomOpenHelper: void onUpgrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int)
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.ChannelAsFlow: ChannelAsFlow(kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String nameString()
kotlinx.coroutines.JobSupport: boolean isScopedCoroutine()
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object receive(kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.google.android.material.textfield.TextInputLayout: int getMaxWidth()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.SharedFlowImpl: kotlin.coroutines.Continuation[] updateCollectorIndexLocked$kotlinx_coroutines_core(long)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow transform(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.ChannelResult: int hashCode-impl(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.ktx.R: R()
kotlinx.coroutines.channels.Closed: java.lang.Object getPollResult()
androidx.room.Query: java.lang.String value()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addCallback(androidx.room.RoomDatabase$Callback)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object emit(kotlin.coroutines.Continuation,java.lang.Object)
androidx.room.DatabaseConfiguration: DatabaseConfiguration(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean,boolean,java.util.Set,java.lang.String,java.io.File,java.util.concurrent.Callable)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.Job$DefaultImpls: boolean cancel$default(kotlinx.coroutines.Job,java.lang.Throwable,int,java.lang.Object)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.channels.ReceiveChannel fixedPeriodTicker$default(kotlinx.coroutines.CoroutineScope,long,long,int,java.lang.Object)
androidx.room.util.TableInfoKt: java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.AbstractCoroutine: boolean isActive()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
kotlinx.coroutines.Job: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1: java.lang.Object prepare(java.lang.Object)
kotlinx.coroutines.JobKt__JobKt: void ensureActive(kotlinx.coroutines.Job)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
androidx.core.app.NavUtils$Api16Impl: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow withIndex(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull()
androidx.room.InvalidationTracker$ObserverWrapper: void notifyByTableInvalidStatus$room_runtime_release(java.util.Set)
kotlinx.coroutines.JobSupport$Finishing: java.lang.String toString()
androidx.room.OnConflictStrategy$Companion: void getFAIL$annotations()
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.selects.SelectClause1 getOnReceiveCatching()
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlinx.coroutines.CompletableDeferred: boolean cancel(java.lang.Throwable)
kotlinx.coroutines.flow.SafeFlow: java.lang.Object collectSafely(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.room.DeleteTable: java.lang.String tableName()
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.room.PrimaryKey: boolean autoGenerate()
kotlinx.coroutines.channels.Closed: Closed(java.lang.Throwable)
kotlinx.coroutines.android.HandlerContext: java.lang.String toString()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.scheduling.UnlimitedIoScheduler: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.JobSupportKt: void getSEALED$annotations()
androidx.room.MapInfo: java.lang.String keyColumn()
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addLastIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedCallback registerOnBackPressedCallback(java.lang.Object,androidx.appcompat.app.AppCompatDelegateImpl)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1: FlowKt__TransformKt$map$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.MutableStateFlow: void resetReplayCache()
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
androidx.room.InvalidationTracker: androidx.lifecycle.LiveData createLiveData(java.lang.String[],java.util.concurrent.Callable)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: ChannelsKt__DeprecatedKt$mapIndexed$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.RemoveOnCancel: void invoke(java.lang.Throwable)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.channels.Channel getChannel()
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2: FlowKt__ZipKt$combine$$inlined$unsafeFlow$2(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.ThreadContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object getCONDITION_FALSE()
kotlinx.coroutines.JobImpl: boolean getHandlesException$kotlinx_coroutines_core()
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] values()
androidx.room.CoroutinesRoom$Companion$execute$4$job$1: CoroutinesRoom$Companion$execute$4$job$1(java.util.concurrent.Callable,kotlinx.coroutines.CancellableContinuation,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.ColumnInfo: boolean index()
androidx.room.QueryInterceptorStatement: java.lang.String simpleQueryForString()
kotlinx.coroutines.flow.internal.ChannelFlow: kotlin.jvm.functions.Function2 getCollectToFun$kotlinx_coroutines_core()
kotlinx.coroutines.CompletableJob: boolean complete()
kotlinx.coroutines.flow.internal.FlowCoroutineKt: java.lang.Object flowScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: ChannelFlow$collectToFun$1(kotlinx.coroutines.flow.internal.ChannelFlow,kotlin.coroutines.Continuation)
kotlinx.coroutines.InvokeOnCancelling: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.util.TableInfo$Column$Companion: boolean defaultValueEquals(java.lang.String,java.lang.String)
kotlinx.coroutines.JobCancellingNode: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Deferred async(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
kotlinx.coroutines.DefaultExecutor: boolean isThreadPresent$kotlinx_coroutines_core()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
androidx.room.util.TableInfo$ForeignKeyWithSequence: TableInfo$ForeignKeyWithSequence(int,int,java.lang.String,java.lang.String)
kotlinx.coroutines.channels.AbstractChannel$onReceiveCatching$1: void registerSelectClause1(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)
kotlinx.coroutines.NonDisposableHandle: void dispose()
kotlinx.coroutines.CancelFutureOnCancel: CancelFutureOnCancel(java.util.concurrent.Future)
kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId copy(long)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow transformWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.DispatchedTaskKt: void runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1: java.lang.Boolean invoke(java.lang.Throwable)
kotlinx.coroutines.AbstractTimeSourceKt: void unTrackTask()
kotlinx.coroutines.channels.ClosedReceiveChannelException: ClosedReceiveChannelException(java.lang.String)
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: FlowCoroutineKt$scopedFlow$1$1(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.room.FtsOptions$MatchInfo: androidx.room.FtsOptions$MatchInfo[] $values()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowOf(java.lang.Object[])
kotlinx.coroutines.internal.DispatchedContinuation: boolean postponeCancellation(java.lang.Throwable)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode[] realloc()
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1(kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow cancellable(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.CancellableContinuationImpl: boolean isCompleted()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel withIndex(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.scheduling.GlobalQueue: GlobalQueue()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
kotlinx.coroutines.CancellableContinuationKt: java.lang.Object suspendCancellableCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
androidx.room.TransactionElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int getIndexInArray()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
kotlinx.coroutines.internal.LockFreeLinkedListHead: void validate$kotlinx_coroutines_core()
kotlinx.coroutines.ParentJob: boolean isActive()
kotlinx.coroutines.flow.StartedWhileSubscribed: long access$getStopTimeout$p(kotlinx.coroutines.flow.StartedWhileSubscribed)
kotlinx.coroutines.JobSupport: java.lang.Object awaitSuspend(kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
androidx.core.view.ViewCompat$Api18Impl: void setClipBounds(android.view.View,android.graphics.Rect)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow zip(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
kotlinx.coroutines.TimeoutCancellationException: java.lang.Throwable createCopy()
androidx.room.AmbiguousColumnResolver$Solution$Companion: androidx.room.AmbiguousColumnResolver$Solution getNO_SOLUTION()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow debounce-HG0u8IE(kotlinx.coroutines.flow.Flow,long)
kotlinx.coroutines.CoroutineScopeKt: void cancel(kotlinx.coroutines.CoroutineScope,java.util.concurrent.CancellationException)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
kotlinx.coroutines.flow.internal.NullSurrogateKt: void getDONE$annotations()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
kotlinx.coroutines.internal.LockFreeLinkedListKt: void getSUCCESS$annotations()
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CompletableDeferred: java.util.concurrent.CancellationException getCancellationException()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: ChannelFlowTransformLatest(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1: SemaphoreImpl$onCancellationRelease$1(kotlinx.coroutines.sync.SemaphoreImpl)
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: AbstractChannel$ReceiveSelect(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2,int)
kotlinx.coroutines.CoroutineExceptionHandler: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp: LockFreeLinkedListNode$PrepareOp(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object maxWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)
androidx.room.util.ViewInfo: androidx.room.util.ViewInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.channels.AbstractChannel$TryPollDesc describeTryPoll()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.JobImpl: boolean completeExceptionally(java.lang.Throwable)
kotlinx.coroutines.JobSupport: java.lang.Throwable getCompletionCause()
kotlinx.coroutines.flow.FlowKt__ContextKt: void checkFlowContext$FlowKt__ContextKt(kotlin.coroutines.CoroutineContext)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.selects.SelectBuilder: void invoke(kotlinx.coroutines.selects.SelectClause1,kotlin.jvm.functions.Function2)
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__CountKt: java.lang.Object count(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.room.InvalidationTracker$Companion: void getRESET_UPDATED_TABLES_SQL$room_runtime_release$annotations()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
androidx.room.AutoClosingRoomOpenHelper: AutoClosingRoomOpenHelper(androidx.sqlite.db.SupportSQLiteOpenHelper,androidx.room.AutoCloser)
kotlinx.coroutines.JobSupport$children$1: JobSupport$children$1(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp: java.lang.Object perform(java.lang.Object)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
kotlinx.coroutines.CompletableDeferredImpl: void registerSelectClause1(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.DispatchedContinuation: void get_state$kotlinx_coroutines_core$annotations()
kotlinx.coroutines.ParentJob: kotlinx.coroutines.selects.SelectClause0 getOnJoin()
androidx.room.RenameColumn: java.lang.String toColumnName()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean isDatabaseIntegrityOk()
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
androidx.room.MultiInstanceInvalidationClient: int getClientId()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.StateFlow stateIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: java.lang.Object stateIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.Object[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper: void close()
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.SendingCollector: SendingCollector(kotlinx.coroutines.channels.SendChannel)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void setLocale(java.util.Locale)
androidx.room.QueryInterceptorDatabase: void execSQL$lambda$11(androidx.room.QueryInterceptorDatabase,java.lang.String,java.util.List)
com.google.android.material.chip.Chip: java.lang.CharSequence getAccessibilityClassName()
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] values()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.sync.SemaphoreSegment: java.lang.String toString()
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
androidx.room.AutoCloser: androidx.sqlite.db.SupportSQLiteDatabase getDelegateDatabase$room_runtime_release()
androidx.room.DeleteColumn$Entries: androidx.room.DeleteColumn[] value()
androidx.room.RoomDatabase$PrepackagedDatabaseCallback: void onOpenPrepackagedDatabase(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
androidx.room.QueryInterceptorDatabase: int getVersion()
kotlinx.coroutines.channels.AbstractSendChannel$SendBufferedDesc: java.lang.Object failure(kotlinx.coroutines.internal.LockFreeLinkedListNode)
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
androidx.room.AutoCloser: java.lang.Runnable getOnAutoCloseCallback$room_runtime_release()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.OpDescriptor: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel zip(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel)
androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
kotlinx.coroutines.flow.FlowKt__ShareKt: java.lang.Object stateIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StateFlowKt: java.lang.Object updateAndGet(kotlinx.coroutines.flow.MutableStateFlow,kotlin.jvm.functions.Function1)
androidx.room.SQLiteCopyOpenHelper$createFrameworkOpenHelper$configuration$1: SQLiteCopyOpenHelper$createFrameworkOpenHelper$configuration$1(int,int)
kotlinx.coroutines.flow.StateFlowImpl$collect$1: StateFlowImpl$collect$1(kotlinx.coroutines.flow.StateFlowImpl,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object resumedState(kotlinx.coroutines.NotCompleted,java.lang.Object,int,kotlin.jvm.functions.Function1,java.lang.Object)
androidx.room.RoomDatabase: boolean isOpen()
kotlinx.coroutines.internal.ClassValueCtorCache: kotlin.jvm.functions.Function1 get(java.lang.Class)
kotlinx.coroutines.flow.SharedFlowImpl: void dropOldestLocked()
kotlinx.coroutines.internal.LockFreeLinkedList_commonKt: void getREMOVE_PREPARED$annotations()
androidx.room.QueryInterceptorProgram: void clearBindings()
androidx.room.DatabaseConfiguration: DatabaseConfiguration(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean,boolean,java.util.Set,java.lang.String,java.io.File,java.util.concurrent.Callable,androidx.room.RoomDatabase$PrepackagedDatabaseCallback,java.util.List)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(int[])
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobSupport: java.lang.Throwable createCauseException(java.lang.Object)
kotlinx.coroutines.CancelHandlerBase: void invoke(java.lang.Throwable)
androidx.room.RoomDatabase$Callback: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
kotlinx.coroutines.ResumeOnCompletion: void invoke(java.lang.Throwable)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
androidx.room.QueryInterceptorStatement: void bindDouble(int,double)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$none$1: ChannelsKt__DeprecatedKt$none$1(kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: void undoPrepare()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1: CoroutineContextKt$hasCopyableElements$1()
kotlinx.coroutines.selects.SelectKt: java.lang.Object select$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase(androidx.room.AutoCloser)
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
kotlinx.coroutines.internal.AtomicOp: void complete(java.lang.Object,java.lang.Object)
kotlinx.coroutines.DefaultExecutor: void shutdownError()
kotlinx.coroutines.CancellableContinuationImpl: boolean isCancelled()
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaxSqlCacheSize$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaxSqlCacheSize$1(int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
kotlinx.coroutines.flow.internal.ChannelFlow: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
kotlinx.coroutines.channels.SendChannel: java.lang.Object trySend-JP2dKIU(java.lang.Object)
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function5)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object first(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int)
kotlinx.coroutines.flow.StartedWhileSubscribed: int hashCode()
androidx.room.MultiInstanceInvalidationService$binder$1: int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String)
kotlinx.coroutines.CoroutinesInternalError: CoroutinesInternalError(java.lang.String,java.lang.Throwable)
kotlinx.coroutines.channels.ArrayChannel: boolean isClosedForReceive()
kotlinx.coroutines.flow.FlowKt__CountKt$count$4: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StartedLazily$command$1$1: StartedLazily$command$1$1(kotlin.jvm.internal.Ref$BooleanRef,kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: FlowKt__LimitKt$dropWhile$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object[] growBuffer(java.lang.Object[],int,int)
androidx.appcompat.app.AppCompatDelegate$Api33Impl: void localeManagerSetApplicationLocales(java.lang.Object,android.os.LocaleList)
androidx.room.DatabaseConfiguration: DatabaseConfiguration(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean,boolean,java.util.Set,java.lang.String,java.io.File,java.util.concurrent.Callable,androidx.room.RoomDatabase$PrepackagedDatabaseCallback,java.util.List,java.util.List)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.internal.ThreadSafeHeapNode: void setHeap(kotlinx.coroutines.internal.ThreadSafeHeap)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $values()
androidx.room.QueryInterceptorOpenHelperFactory: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
kotlinx.coroutines.channels.ChannelResult: java.lang.Object getOrThrow-impl(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setLocale$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setLocale$1(java.util.Locale)
androidx.appcompat.widget.Toolbar: void setLogo(int)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
kotlinx.coroutines.AbstractCoroutine: void resumeWith(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
androidx.constraintlayout.helper.widget.Flow: void setLastHorizontalBias(float)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.scheduling.CoroutineScheduler: int parkedWorkersStackNextIndex(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
kotlinx.coroutines.EventLoopImplBase: boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase)
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: android.os.Bundle getExtras()
androidx.room.CoroutinesRoom$Companion$execute$4$1: CoroutinesRoom$Companion$execute$4$1(android.os.CancellationSignal,kotlinx.coroutines.Job)
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object removeFirstOrNull()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean moveToLast()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
androidx.room.QueryInterceptorProgram: void close()
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.Update: int onConflict()
kotlinx.coroutines.channels.Channel: java.lang.Object tryReceive-PtdJZtk()
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KCallable getReflected()
kotlinx.coroutines.scheduling.TaskContext: void afterTask()
androidx.room.ForeignKey$Companion: ForeignKey$Companion()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean moveToPrevious()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder allowMainThreadQueries()
kotlinx.coroutines.flow.internal.FusibleFlow$DefaultImpls: kotlinx.coroutines.flow.Flow fuse$default(kotlinx.coroutines.flow.internal.FusibleFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,java.lang.Object)
kotlinx.coroutines.CoroutineId: long getId()
androidx.room.InvalidationTracker: void getRefreshRunnable$annotations()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.SendElement: void resumeSendClosed(kotlinx.coroutines.channels.Closed)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$2: java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.internal.MainDispatcherLoader: MainDispatcherLoader()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
kotlinx.coroutines.internal.LockFreeLinkedListKt: void getUNDECIDED$annotations()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
kotlinx.coroutines.channels.ConflatedChannel: ConflatedChannel(kotlin.jvm.functions.Function1)
kotlinx.coroutines.EventLoopImplBase: java.lang.Object delay(long,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()
kotlinx.coroutines.ThreadContextElement: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
androidx.room.QueryInterceptorDatabase: void setForeignKeyConstraintsEnabled(boolean)
kotlinx.coroutines.internal.LockFreeLinkedListHead: boolean isEmpty()
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeAtImpl(int)
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.CoroutineId: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.String)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.List map(kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
androidx.room.InvalidationTracker: androidx.room.RoomDatabase getDatabase$room_runtime_release()
kotlinx.coroutines.internal.LimitedDispatcherKt: void checkParallelism(int)
kotlinx.coroutines.internal.ThreadSafeHeapNode: int getIndex()
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
kotlinx.coroutines.Job$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job,kotlinx.coroutines.Job)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
androidx.lifecycle.LiveData: void changeActiveCounter(int)
androidx.constraintlayout.helper.widget.Flow: void setPaddingTop(int)
kotlinx.coroutines.flow.SubscribedFlowCollector: SubscribedFlowCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
kotlinx.coroutines.internal.ThreadLocalKey: ThreadLocalKey(java.lang.ThreadLocal)
com.google.android.material.textfield.TextInputLayout: void setStartIconScaleType(android.widget.ImageView$ScaleType)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
kotlinx.coroutines.ChildJob: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
androidx.room.QueryInterceptorStatement: void close()
kotlin.collections.AbstractList: AbstractList()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
androidx.appcompat.widget.SearchView: void setInputType(int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowCombineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
androidx.room.CoroutinesRoom$Companion: CoroutinesRoom$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.room.QueryInterceptorDatabase: void beginTransactionNonExclusive()
kotlinx.coroutines.DeferredCoroutine: java.lang.Object await(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: void complete(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1: java.lang.Void invoke(java.lang.Throwable)
com.google.android.material.appbar.MaterialToolbar: void setSubtitleCentered(boolean)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow runningReduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.internal.ChannelFlowKt: kotlinx.coroutines.flow.FlowCollector access$withUndispatchedContextCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.PropertyReference: int hashCode()
kotlinx.coroutines.JobSupport: boolean joinInternal()
kotlinx.coroutines.channels.ChannelKt: java.lang.Object onClosed-WpGqRn0(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.UnlimitedIoScheduler: UnlimitedIoScheduler()
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
kotlinx.coroutines.EventLoop_commonKt: long delayNanosToMillis(long)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
androidx.room.QueryInterceptorStatement: void execute()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object none(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ExceptionsConstructorKt: int fieldsCountOrDefault(java.lang.Class,int)
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
androidx.room.TransactionExecutor: TransactionExecutor(java.util.concurrent.Executor)
kotlinx.coroutines.channels.Channel$DefaultImpls: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletedContinuation: java.lang.String toString()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode removeOrNext()
androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement getStmt(boolean)
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: ProduceKt$awaitClose$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ThreadLocalKey: boolean equals(java.lang.Object)
kotlinx.coroutines.Delay: java.lang.Object delay(long,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow retryWhen(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: FlowKt__ShareKt$launchSharingDeferred$1(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CompletableDeferred,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: CombineKt$combineInternal$2(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1: FlowKt__EmittersKt$onEmpty$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1: FlowKt__LimitKt$drop$2$1(kotlin.jvm.internal.Ref$IntRef,int,kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: void cleanPrev()
androidx.room.paging.LimitOffsetDataSource: LimitOffsetDataSource(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,boolean,java.lang.String[])
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
androidx.room.EntityDeletionOrUpdateAdapter: int handleMultiple(java.lang.Object[])
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: void close()
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand[] values()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMutableSet(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: FlowKt__ReduceKt$single$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectBuilder: void invoke(kotlinx.coroutines.selects.SelectClause2,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow callbackFlow(kotlin.jvm.functions.Function2)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsets(int,androidx.core.graphics.Insets)
kotlinx.coroutines.flow.FlowKt: java.lang.Object reduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.room.QueryInterceptorProgram: void bindDouble(int,double)
kotlinx.coroutines.JobSupport: java.lang.String toString()
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.DeleteTable$Entries: androidx.room.DeleteTable[] value()
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setLocale$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlinx.coroutines.channels.BroadcastChannel)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.FlowCoroutine: boolean childCancelled(java.lang.Throwable)
kotlinx.coroutines.CompletableDeferredImpl: boolean complete(java.lang.Object)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
kotlinx.coroutines.CancellableContinuationImpl: void callCancelHandlerSafely(kotlin.jvm.functions.Function0)
kotlinx.coroutines.channels.ChannelsKt: void sendBlocking(kotlinx.coroutines.channels.SendChannel,java.lang.Object)
kotlinx.coroutines.CoroutineScopeKt: void cancel(kotlinx.coroutines.CoroutineScope,java.lang.String,java.lang.Throwable)
kotlinx.coroutines.JobSupport: boolean isCancelling(kotlinx.coroutines.Incomplete)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1: ChannelsKt__DeprecatedKt$consumesAll$1(kotlinx.coroutines.channels.ReceiveChannel[])
kotlinx.coroutines.channels.Channel: boolean isEmpty()
com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$insert$1: java.lang.Long invoke(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.CoroutineDispatcher$Key: CoroutineDispatcher$Key()
kotlinx.coroutines.ChildHandle: boolean childCancelled(java.lang.Throwable)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow map(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.CompletableJob: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion: CoroutineScheduler$Companion()
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1(kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow flatten(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.internal.AtomicOp: java.lang.Object decide(java.lang.Object)
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher from(android.os.Handler,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.flow.SubscribedSharedFlow: SubscribedSharedFlow(kotlinx.coroutines.flow.SharedFlow,kotlin.jvm.functions.Function2)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
kotlinx.coroutines.EventLoopImplBase: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.JobSupport: kotlin.sequences.Sequence getChildren()
com.google.android.material.chip.Chip: float getTextStartPadding()
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CancellableContinuationImpl getReusableCancellableContinuation()
kotlinx.coroutines.flow.StartedLazily: java.lang.String toString()
kotlinx.coroutines.EventLoopImplBase: boolean enqueueImpl(java.lang.Runnable)
com.actiontracker.app.ui.MainActivity: MainActivity()
kotlinx.coroutines.flow.SharedFlowKt: java.lang.Object getBufferAt(java.lang.Object[],long)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core()
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: java.lang.Object failure(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: kotlinx.coroutines.selects.SelectClause1 onReceiveOrNull(kotlinx.coroutines.channels.ReceiveChannel)
com.google.android.material.textfield.TextInputLayout: int getStartIconMinSize()
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void bindBlob(int,byte[])
kotlinx.coroutines.flow.SharedFlowImpl: void enqueueLocked(java.lang.Object)
com.google.android.material.chip.Chip: void setIconStartPadding(float)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
androidx.room.RoomDatabase: void assertNotMainThread()
kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KCallable computeReflected()
kotlinx.coroutines.channels.ProduceKt$awaitClose$2: ProduceKt$awaitClose$2()
kotlinx.coroutines.flow.SharedFlowImpl: long access$tryPeekLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot)
kotlinx.coroutines.Delay$DefaultImpls: java.lang.Object delay(kotlinx.coroutines.Delay,long,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharedFlowKt: void access$setBufferAt(java.lang.Object[],long,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler: void shutdown(long)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
kotlinx.coroutines.CoroutineName: CoroutineName(java.lang.String)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: FlowKt__DelayKt$debounceInternal$1$values$1(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.InvalidationTracker: java.lang.String[] getTablesNames$room_runtime_release()
androidx.startup.InitializationProvider: InitializationProvider()
kotlinx.coroutines.YieldContext$Key: YieldContext$Key(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.room.InvalidationTracker$ObserverWrapper: void notifyByTableNames$room_runtime_release(java.lang.String[])
kotlinx.coroutines.YieldKt: java.lang.Object yield(kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
kotlinx.coroutines.JobSupport: void onStart()
androidx.room.InvalidationTracker: InvalidationTracker(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
kotlinx.coroutines.Incomplete: boolean isActive()
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.DelayKt$awaitCancellation$1: DelayKt$awaitCancellation$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.BuildersKt__Builders_commonKt: java.lang.Object invoke$$forInline(kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ThreadLocalKey: java.lang.String toString()
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
kotlinx.coroutines.channels.ProducerCoroutine: boolean isActive()
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$1: ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$1(java.lang.reflect.Constructor)
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.flow.StateFlowImpl: void getValue$annotations()
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot createSlot()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
kotlinx.coroutines.JobKt__JobKt: void cancel(kotlinx.coroutines.Job,java.lang.String,java.lang.Throwable)
androidx.room.QueryInterceptorOpenHelper: androidx.sqlite.db.SupportSQLiteOpenHelper getDelegate()
kotlinx.coroutines.flow.internal.AbstractSharedFlow: AbstractSharedFlow()
kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc: AbstractSendChannel$TryOfferDesc(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListHead)
kotlinx.coroutines.selects.SelectBuilderImpl: kotlinx.coroutines.DisposableHandle getParentHandle()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
kotlinx.coroutines.JobSupport$Finishing: boolean isSealed()
kotlinx.coroutines.JobNode: kotlinx.coroutines.JobSupport getJob()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
kotlinx.coroutines.channels.ChannelIterator$next0$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: double getDouble(int)
kotlinx.coroutines.flow.ChannelFlowBuilder: java.lang.Object collectTo$suspendImpl(kotlinx.coroutines.flow.ChannelFlowBuilder,kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: CombineKt$zipImpl$1$1$2$1(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.internal.ChildCancelledException: ChildCancelledException()
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
androidx.room.EntityInsertionAdapter: EntityInsertionAdapter(androidx.room.RoomDatabase)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement getStmt()
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1(java.lang.Object,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt: java.lang.Object first(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
kotlinx.coroutines.LazyDeferredCoroutine: LazyDeferredCoroutine(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.Job SupervisorJob(kotlinx.coroutines.Job)
kotlinx.coroutines.JobSupport: void afterCompletion(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1: FlowKt__MigrationKt$onErrorReturn$1()
kotlinx.coroutines.channels.ReceiveChannel$onReceiveOrNull$1$registerSelectClause1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.selects.SelectClause1 onReceiveOrNull(kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.ChannelFlowBuilder: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
kotlinx.coroutines.internal.ScopeCoroutine: java.lang.StackTraceElement getStackTraceElement()
kotlinx.coroutines.ChildJob: kotlin.sequences.Sequence getChildren()
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flattenMerge(kotlinx.coroutines.flow.Flow,int)
kotlinx.coroutines.CompletedContinuation: CompletedContinuation(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.ChildJob: kotlin.coroutines.CoroutineContext$Key getKey()
kotlinx.coroutines.DisposeOnCompletion: void invoke(java.lang.Throwable)
androidx.room.IMultiInstanceInvalidationCallback$Stub: android.os.IBinder asBinder()
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder openHelperFactory(androidx.sqlite.db.SupportSQLiteOpenHelper$Factory)
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KCallable compute()
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consume(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException$default(kotlinx.coroutines.JobSupport,java.lang.Throwable,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.CompletableDeferredKt: boolean completeWith(kotlinx.coroutines.CompletableDeferred,java.lang.Object)
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] $values()
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(float,float)
androidx.room.RoomSQLiteQuery$Companion: RoomSQLiteQuery$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
kotlinx.coroutines.CompletableDeferred: java.lang.Object await(kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryAcquireCpuPermit()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.appbar.MaterialToolbar: android.widget.ImageView$ScaleType getLogoScaleType()
kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred(kotlinx.coroutines.Job)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object firstOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: kotlinx.coroutines.internal.ConcurrentLinkedListNode getNext()
kotlinx.coroutines.channels.ConflatedChannel: boolean isBufferFull()
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1: FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.CompletableJob: kotlinx.coroutines.selects.SelectClause0 getOnJoin()
kotlinx.coroutines.flow.FlowKt: java.lang.Object toList(kotlinx.coroutines.flow.Flow,java.util.List,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.JobSupport: java.lang.Object awaitInternal$kotlinx_coroutines_core(kotlin.coroutines.Continuation)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.room.RoomDatabase$JournalMode: RoomDatabase$JournalMode(java.lang.String,int)
androidx.room.AutoClosingRoomOpenHelperFactory: AutoClosingRoomOpenHelperFactory(androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.AutoCloser)
kotlinx.coroutines.flow.ChannelAsFlow: void markConsumed()
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
kotlinx.coroutines.sync.SemaphoreImpl: void release()
kotlinx.coroutines.internal.SegmentOrClosed: java.lang.Object constructor-impl(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.SharedFlow shareIn$default(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,int,int,java.lang.Object)
kotlinx.coroutines.internal.ThreadState: void restore(kotlin.coroutines.CoroutineContext)
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName: androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName[] values()
kotlinx.coroutines.flow.internal.ChannelFlow: int getProduceCapacity$kotlinx_coroutines_core()
kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList getList()
kotlinx.coroutines.ParentJob: java.util.concurrent.CancellationException getChildJobCancellationCause()
kotlinx.coroutines.CancelFutureOnCompletion: void invoke(java.lang.Throwable)
kotlinx.coroutines.flow.ChannelAsFlow: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.DebugStringsKt: java.lang.String toDebugString(kotlin.coroutines.Continuation)
androidx.lifecycle.LiveData: boolean hasActiveObservers()
androidx.room.QueryInterceptorProgram: void bindNull(int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.google.android.material.chip.Chip: void setTextEndPadding(float)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function6)
androidx.room.MultiInstanceInvalidationClient: androidx.room.InvalidationTracker getInvalidationTracker()
kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveCatching()
androidx.room.IMultiInstanceInvalidationCallback$Default: void onInvalidation(java.lang.String[])
kotlinx.coroutines.flow.SharedFlowImpl: long updateNewCollectorIndexLocked$kotlinx_coroutines_core()
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$3: java.lang.Throwable invoke(java.lang.Throwable)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlinx.coroutines.Job,java.util.concurrent.CancellationException)
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.QueryInterceptorDatabase: boolean isWriteAheadLoggingEnabled()
androidx.room.InvalidationLiveDataContainer: InvalidationLiveDataContainer(androidx.room.RoomDatabase)
kotlinx.coroutines.Deferred: kotlinx.coroutines.selects.SelectClause0 getOnJoin()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1: FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.EventLoop: void dispatchUnconfined(kotlinx.coroutines.DispatchedTask)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: boolean getRemoved()
kotlinx.coroutines.JobSupport: boolean cancelParent(java.lang.Throwable)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
kotlinx.coroutines.CoroutineId: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.internal.LimitedDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
com.google.android.material.chip.Chip: float getChipStartPadding()
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher from(android.os.Handler)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: kotlinx.coroutines.flow.Flow asFlow(kotlinx.coroutines.channels.BroadcastChannel)
androidx.room.Database: boolean exportSchema()
kotlinx.coroutines.flow.FlowKt: void ensureActive(kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.channels.ConflatedChannel: boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.room.RoomDatabase: boolean isOpenInternal()
kotlinx.coroutines.SupervisorJobImpl: SupervisorJobImpl(kotlinx.coroutines.Job)
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object getNextParkedWorker()
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlinx.coroutines.Job,java.lang.Throwable)
androidx.room.InvalidationTracker$Companion: InvalidationTracker$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Throwable,long,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2: CancellableFlowImpl$collect$2(kotlinx.coroutines.flow.FlowCollector)
androidx.room.RoomOpenHelper: void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.EntityInsertionAdapter: java.util.List insertAndReturnIdsList(java.lang.Object[])
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3(java.lang.Iterable)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setMaxImageSize(int)
androidx.lifecycle.LiveData: java.lang.Object getValue()
kotlinx.coroutines.flow.ChannelAsFlow: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.core.view.ViewCompat$Api18Impl: android.graphics.Rect getClipBounds(android.view.View)
androidx.room.util.FtsTableInfo: FtsTableInfo(java.lang.String,java.util.Set,java.util.Set)
androidx.room.AutoCloser: void closeDatabaseIfOpen()
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$1()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: long getLong(int)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintList(android.content.res.ColorStateList)
kotlinx.coroutines.flow.internal.NoOpContinuation: NoOpContinuation()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel flatMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow distinctUntilChangedBy(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filter(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.room.RoomTrackingLiveData: RoomTrackingLiveData(androidx.room.RoomDatabase,androidx.room.InvalidationLiveDataContainer,boolean,java.util.concurrent.Callable,java.lang.String[])
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List parseFile(java.io.BufferedReader)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
androidx.room.RoomDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)
com.google.android.material.textfield.TextInputLayout: void setStartIconMinSize(int)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForString$1: AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForString$1()
kotlinx.coroutines.flow.FlowKt__CountKt$count$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: FlowKt__ZipKt$combineTransform$6(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractSendChannel: void helpCloseAndResumeWithSendException(kotlin.coroutines.Continuation,java.lang.Object,kotlinx.coroutines.channels.Closed)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.DisposeOnCompletion: DisposeOnCompletion(kotlinx.coroutines.DisposableHandle)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.Flow)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow flowOf(java.lang.Object[])
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: UndispatchedContextCollector$emitRef$1(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
kotlinx.coroutines.BuildersKt__BuildersKt: java.lang.Object runBlocking$default(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CancelHandler component2()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$any$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp: kotlinx.coroutines.internal.AtomicOp getAtomicOp()
androidx.room.QueryInterceptorStatement: void clearBindings()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: FlowKt__CountKt$count$4$emit$1(kotlinx.coroutines.flow.FlowKt__CountKt$count$4,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase$beginTransaction$1: java.lang.Object invoke(java.lang.Object)
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy: int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String)
com.google.android.material.chip.Chip: void setMaxWidth(int)
kotlinx.coroutines.CoroutineId$Key: CoroutineId$Key(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object last(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.DefaultExecutor: void reschedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
androidx.room.EntityDeletionOrUpdateAdapter: int handleMultiple(java.lang.Iterable)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
androidx.room.QueryInterceptorDatabase: boolean inTransaction()
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.SelectAwaitOnCompletion: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: ChannelFlowTransformLatest$flowCollect$3$1$emit$1(kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletableDeferredImpl: boolean getOnCancelComplete$kotlinx_coroutines_core()
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: int getColumnIndexOrThrow(java.lang.String)
kotlinx.coroutines.ThreadLocalEventLoop: void setEventLoop$kotlinx_coroutines_core(kotlinx.coroutines.EventLoop)
androidx.room.ForeignKey: boolean deferred()
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
androidx.room.AmbiguousColumnResolver$Solution: AmbiguousColumnResolver$Solution(java.util.List,int,int)
androidx.core.view.WindowCompat$Api16Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow channelFlow(kotlin.jvm.functions.Function2)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler getScheduler()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
kotlinx.coroutines.flow.StartedLazily$command$1$1$emit$1: StartedLazily$command$1$1$emit$1(kotlinx.coroutines.flow.StartedLazily$command$1$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: java.lang.Object invoke(java.lang.Throwable,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: java.lang.String toDebugString()
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1: java.lang.Boolean invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.scheduling.Task: Task()
androidx.room.FtsOptions$Order: androidx.room.FtsOptions$Order valueOf(java.lang.String)
kotlinx.coroutines.InactiveNodeList: InactiveNodeList(kotlinx.coroutines.NodeList)
kotlinx.coroutines.JobSupport$Finishing: void setExceptionsHolder(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel drop$default(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
kotlinx.coroutines.internal.ThreadSafeHeap: boolean addLastIf(kotlinx.coroutines.internal.ThreadSafeHeapNode,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KProperty$Getter getGetter()
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Failed access$getFailed$cp()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
kotlinx.coroutines.internal.SegmentOrClosed: int hashCode-impl(java.lang.Object)
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void cancelJobOnRejection(kotlin.coroutines.CoroutineContext,java.util.concurrent.RejectedExecutionException)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setForeignKeyConstraintsEnabled$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.ripple.RippleUtils$RippleUtilsLollipop: android.graphics.drawable.Drawable createOvalRipple(android.content.Context,int)
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: SafeCollector$collectContextSize$1()
kotlinx.coroutines.AbstractTimeSourceKt: void setTimeSource(kotlinx.coroutines.AbstractTimeSource)
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEditText$SuperCaller getSuperCaller()
kotlinx.coroutines.flow.StartedEagerly: StartedEagerly()
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
kotlinx.coroutines.internal.Segment: boolean decPointers$kotlinx_coroutines_core()
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3: FlowKt__CollectKt$collect$3(kotlin.jvm.functions.Function2)
androidx.room.util.TableInfo$Column: int hashCode()
kotlinx.coroutines.channels.AbstractChannel: boolean cancelInternal$kotlinx_coroutines_core(java.lang.Throwable)
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: boolean cancel$default(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow observeOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask: void run()
kotlinx.coroutines.JobSupport: void cancelInternal(java.lang.Throwable)
kotlinx.coroutines.internal.SegmentOrClosed: java.lang.String toString-impl(java.lang.Object)
kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.Job getParent()
kotlinx.coroutines.internal.LockFreeLinkedListNode: void helpRemove()
kotlinx.coroutines.channels.ConflatedChannel: java.lang.String getBufferDebugString()
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: boolean retry(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
kotlinx.coroutines.flow.FlowKt__CountKt$count$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SafeFlow: SafeFlow(kotlin.jvm.functions.Function2)
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlinx.coroutines.Job)
androidx.room.Embedded: java.lang.String prefix()
kotlinx.coroutines.JobKt__JobKt: java.lang.Throwable orCancellation$JobKt__JobKt(java.lang.Throwable,kotlinx.coroutines.Job)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
androidx.room.util.FtsTableInfo: androidx.room.util.FtsTableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder createFromAsset(java.lang.String)
kotlinx.coroutines.JobKt: java.lang.Object cancelAndJoin(kotlinx.coroutines.Job,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel dropWhile$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement createNewStatement()
kotlinx.coroutines.flow.MutableSharedFlow: void resetReplayCache()
kotlinx.coroutines.ChildContinuation: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.CoroutineExceptionHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: kotlinx.coroutines.internal.ConcurrentLinkedListNode getPrev()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.channels.ReceiveChannel produceIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)
kotlinx.coroutines.channels.Channel: boolean offer(java.lang.Object)
kotlinx.coroutines.flow.StateFlowSlot: StateFlowSlot()
androidx.lifecycle.LiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow mapLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__MergeKt: int getDEFAULT_CONCURRENCY()
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
kotlinx.coroutines.flow.FlowKt__ErrorsKt: kotlinx.coroutines.flow.Flow retry$default(kotlinx.coroutines.flow.Flow,long,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: float getFloat(int)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
kotlinx.coroutines.ChildJob: void cancel()
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.BeforeResumeCancelHandler: BeforeResumeCancelHandler()
kotlinx.coroutines.channels.ChannelCoroutine: void cancel(java.util.concurrent.CancellationException)
androidx.room.Database: androidx.room.AutoMigration[] autoMigrations()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Object recoverAndThrow$$forInline(java.lang.Throwable,kotlin.coroutines.Continuation)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
kotlinx.coroutines.CompletedContinuation: boolean getCancelled()
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2: java.lang.Throwable invoke(java.lang.Throwable)
kotlinx.coroutines.channels.Receive: java.lang.Object getOfferResult()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int)
kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow: java.lang.Integer getValue()
kotlinx.coroutines.flow.MutableStateFlow: kotlinx.coroutines.flow.StateFlow getSubscriptionCount()
kotlinx.coroutines.ThreadContextElementKt: kotlinx.coroutines.ThreadContextElement asContextElement$default(java.lang.ThreadLocal,java.lang.Object,int,java.lang.Object)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object single(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.room.Fts4: java.lang.String tokenizer()
com.google.android.material.chip.Chip: void setChipIconVisible(int)
kotlin.jvm.internal.PropertyReference: java.lang.String toString()
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDatabaseIntegrityOk$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.ChannelResult$Closed: java.lang.String toString()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void deactivate()
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.QueryInterceptorDatabase: void execPerConnectionSQL(java.lang.String,java.lang.Object[])
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: ThreadContextKt$findOne$1()
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLayoutDirection(android.content.res.Configuration,java.util.Locale)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1: CombineKt$zipImpl$1$1$second$1$1(kotlinx.coroutines.channels.ProducerScope)
kotlinx.coroutines.Empty: kotlinx.coroutines.NodeList getList()
kotlinx.coroutines.JobSupport: void cancel(java.util.concurrent.CancellationException)
kotlinx.coroutines.JobSupport: void cancel()
androidx.room.util.DBUtil: int readVersion(java.io.File)
com.google.android.material.chip.Chip: void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void registerContentObserver(android.database.ContentObserver)
kotlinx.coroutines.flow.internal.StackFrameContinuation: StackFrameContinuation(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.internal.SegmentOrClosed: boolean equals-impl0(java.lang.Object,java.lang.Object)
kotlinx.coroutines.ResumeAwaitOnCompletion: java.lang.Object invoke(java.lang.Object)
androidx.room.IMultiInstanceInvalidationCallback: void onInvalidation(java.lang.String[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flattenMerge(kotlinx.coroutines.flow.Flow,int)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
kotlinx.coroutines.flow.AbstractFlow: java.lang.Object collectSafely(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
kotlinx.coroutines.channels.ChannelCoroutine: boolean isEmpty()
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2: FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.room.RoomDatabase$Callback: RoomDatabase$Callback()
androidx.room.util.TableInfo$Column$Companion: TableInfo$Column$Companion()
com.google.android.material.textfield.TextInputLayout: void setMaxEms(int)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1: FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object access$emitSuspend(kotlinx.coroutines.flow.SharedFlowImpl,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletedContinuation: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
kotlinx.coroutines.flow.ReadonlyStateFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4: ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4(java.lang.reflect.Constructor)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.room.RoomSQLiteQuery: void clearBindings()
androidx.room.util.CursorUtil: int getColumnIndex(android.database.Cursor,java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: java.lang.String getSceneString()
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode getOriginalNext()
kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: void resumeReceiveClosed(kotlinx.coroutines.channels.Closed)
kotlinx.coroutines.AbstractTimeSourceKt: void registerTimeLoopThread()
androidx.lifecycle.LiveData: int getVersion()
kotlinx.coroutines.CompletedContinuation: kotlin.jvm.functions.Function1 component3()
kotlinx.coroutines.flow.internal.FusibleFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.DispatcherExecutor: DispatcherExecutor(kotlinx.coroutines.CoroutineDispatcher)
kotlinx.coroutines.CancellableContinuation: void resumeUndispatched(kotlinx.coroutines.CoroutineDispatcher,java.lang.Object)
kotlinx.coroutines.flow.StateFlowImpl: void resetReplayCache()
kotlinx.coroutines.DispatchedCoroutine: boolean tryResume()
kotlinx.coroutines.channels.ProduceKt: java.lang.Object awaitClose$default(kotlinx.coroutines.channels.ProducerScope,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: CoroutineScheduler$Worker(kotlinx.coroutines.scheduling.CoroutineScheduler)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.ReceiveOrClosed sendBuffered(java.lang.Object)
kotlinx.coroutines.internal.MainDispatchersKt: boolean isMissing(kotlinx.coroutines.MainCoroutineDispatcher)
androidx.room.util.FtsTableInfo: boolean equals(java.lang.Object)
androidx.room.util.TableInfo: TableInfo(java.lang.String,java.util.Map,java.util.Set,java.util.Set)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.RoomDatabaseKt: kotlin.coroutines.CoroutineContext access$createTransactionContext(androidx.room.RoomDatabase,kotlin.coroutines.ContinuationInterceptor)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.EventLoop: void decrementUseCount(boolean)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: java.lang.Object invoke(kotlin.Unit,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: DownstreamExceptionContext(java.lang.Throwable,kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.room.InvalidationTracker$ObservedTableTracker: long[] getTableObservers()
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1: RoomDatabaseKt$startTransactionCoroutine$2$1(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CancellableContinuation,androidx.room.RoomDatabase,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__EmittersKt: void ensureActive(kotlinx.coroutines.flow.FlowCollector)
androidx.room.RoomSQLiteQuery$Companion: RoomSQLiteQuery$Companion()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.jvm.functions.Function0)
kotlinx.coroutines.JobSupport: java.lang.String stateString(java.lang.Object)
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletableDeferred: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
kotlinx.coroutines.channels.Channel$DefaultImpls: void cancel(kotlinx.coroutines.channels.Channel)
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUndispatched(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxWidth()
androidx.room.IMultiInstanceInvalidationService$Default: void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback,int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object removeFirstIfIsInstanceOfOrPeekIf(kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getSEALED$p()
androidx.room.AutoClosingRoomOpenHelperFactory: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)
kotlinx.coroutines.internal.ThreadLocalKey: int hashCode()
androidx.room.RoomSQLiteQuery: RoomSQLiteQuery(int)
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobCancellationException: java.lang.String toString()
androidx.room.RoomTrackingLiveData: java.util.concurrent.Executor getQueryExecutor()
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlin.coroutines.CoroutineContext getContext()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow,java.lang.Object)
androidx.room.MultiInstanceInvalidationClient: void removeObserverRunnable$lambda$2(androidx.room.MultiInstanceInvalidationClient)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
kotlinx.coroutines.internal.FastServiceLoader: java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader)
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: long getOpSequence()
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
androidx.room.MultiInstanceInvalidationClient: MultiInstanceInvalidationClient(android.content.Context,java.lang.String,android.content.Intent,androidx.room.InvalidationTracker,java.util.concurrent.Executor)
androidx.room.IMultiInstanceInvalidationService$Default: IMultiInstanceInvalidationService$Default()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getActualTextAlignment()
kotlinx.coroutines.ChildJob: java.util.concurrent.CancellationException getCancellationException()
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
kotlinx.coroutines.CancelFutureOnCompletion: java.lang.Object invoke(java.lang.Object)
androidx.room.MultiInstanceInvalidationClient: androidx.room.IMultiInstanceInvalidationCallback getCallback()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.EventLoopImplBase: void schedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object fold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean isClosed()
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,int,java.lang.Object)
kotlinx.coroutines.GlobalScope: kotlin.coroutines.CoroutineContext getCoroutineContext()
kotlinx.coroutines.DebugKt: void resetCoroutineId()
kotlinx.coroutines.ParentJob: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.room.util.UUIDUtil: byte[] convertUUIDToByte(java.util.UUID)
kotlinx.coroutines.CompletableJob: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
com.google.android.material.chip.Chip: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
kotlinx.coroutines.JobNode: void setJob(kotlinx.coroutines.JobSupport)
androidx.room.IMultiInstanceInvalidationService$Stub: IMultiInstanceInvalidationService$Stub()
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder createFromInputStream(java.util.concurrent.Callable)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: ChannelFlowMerge$collectTo$2$1(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.internal.SendingCollector,kotlinx.coroutines.sync.Semaphore,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collect(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.util.ArrayDeque createStackTrace(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.EventLoop: long delta(boolean)
kotlinx.coroutines.flow.SharedFlowImpl: long getHead()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: java.lang.Object prepare(java.lang.Object)
androidx.room.Fts4: androidx.room.FtsOptions$MatchInfo matchInfo()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean tryAcquireCpuPermit()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void idleReset(int)
com.google.android.material.textfield.TextInputLayout: int getBoxCollapsedPaddingTop()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel dropWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1: FlowKt__LimitKt$take$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: ChannelsKt__DeprecatedKt$filterNotNull$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.JobKt: void cancelChildren$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1: FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void close()
kotlinx.coroutines.CoroutineId: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlinx.coroutines.EventLoop: boolean isActive()
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobKt: void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1: SafeCollector_commonKt$unsafeFlow$1(kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: ChannelsKt__DeprecatedKt$flatMap$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1: ExceptionsConstructorKt$createConstructor$nullResult$1()
kotlinx.coroutines.DiagnosticCoroutineContextException: java.lang.String getLocalizedMessage()
com.google.android.material.chip.Chip: void setCloseIconSize(float)
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
kotlinx.coroutines.internal.ScopeCoroutine: boolean isScopedCoroutine()
kotlinx.coroutines.DispatchedTask: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel withIndex$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
androidx.room.RoomTrackingLiveData: java.lang.Runnable getRefreshRunnable()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: ChannelsKt__DeprecatedKt$takeWhile$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
kotlinx.coroutines.ThreadContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.room.Junction: java.lang.String parentColumn()
androidx.constraintlayout.helper.widget.Flow: void setPaddingBottom(int)
kotlinx.coroutines.CompletableJob: boolean isCompleted()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1: FlowKt__CollectKt$collect$3$emit$1(kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
kotlinx.coroutines.flow.FlowKt__CountKt$count$4: FlowKt__CountKt$count$4(kotlin.jvm.functions.Function2,kotlin.jvm.internal.Ref$IntRef)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
kotlinx.coroutines.flow.SharedFlowImpl: int access$getQueueSize$p(kotlinx.coroutines.flow.SharedFlowImpl)
kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(java.lang.Object[])
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull(kotlinx.coroutines.channels.ReceiveChannel)
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.RoomDatabase$beginTransaction$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.JobSupport: void initParentJob(kotlinx.coroutines.Job)
kotlinx.coroutines.CancellableContinuationImpl: void dispatchResume(int)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean isClosed()
kotlinx.coroutines.channels.Closed: java.lang.String toString()
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
kotlinx.coroutines.JobSupport: boolean childCancelled(java.lang.Throwable)
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: FlowKt__ReduceKt$first$3(kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.SemaphoreKt: void getBROKEN$annotations()
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean isLast()
kotlinx.coroutines.scheduling.CoroutineScheduler: int createNewWorker()
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: void invoke(java.lang.Throwable)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Object recoverAndThrow(java.lang.Throwable,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object trySend-JP2dKIU(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
kotlinx.coroutines.channels.RendezvousChannel: boolean isBufferFull()
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: FlowKt__ReduceKt$reduce$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel dropWhile$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.ResumeAwaitOnCompletion: ResumeAwaitOnCompletion(kotlinx.coroutines.CancellableContinuationImpl)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isReadOnly$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isReadOnly$1()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
kotlinx.coroutines.internal.LockFreeLinkedListHead: kotlinx.coroutines.internal.LockFreeLinkedListNode nextIfRemoved()
androidx.room.RoomSQLiteQuery: int getCapacity()
kotlinx.coroutines.internal.SegmentOrClosed: java.lang.String toString()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
androidx.room.RoomDatabase: RoomDatabase()
kotlinx.coroutines.channels.Closed: void resumeSendClosed(kotlinx.coroutines.channels.Closed)
kotlinx.coroutines.channels.AbstractSendChannel: void invokeOnCloseHandler(java.lang.Throwable)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
kotlinx.coroutines.internal.DispatchedContinuation: void resumeCancellableWith(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.room.RoomDatabase: void init(androidx.room.DatabaseConfiguration)
kotlinx.coroutines.CancellableContinuationImpl: void callOnCancellation(kotlin.jvm.functions.Function1,java.lang.Throwable)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.sync.SemaphoreSegment access$createSegment(long,kotlinx.coroutines.sync.SemaphoreSegment)
kotlinx.coroutines.flow.StartedLazily$command$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.DatabaseView: java.lang.String value()
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void beginTransactionNonExclusive()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$1: java.lang.Object invoke()
kotlinx.coroutines.Deferred: java.lang.Object getCompleted()
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.coroutines.CoroutineContext$Element tryCast$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.internal.InlineList: java.lang.Object unbox-impl()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2: FlowKt__ErrorsKt$catchImpl$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.internal.Ref$ObjectRef)
kotlinx.coroutines.flow.FlowKt__CountKt$count$2: FlowKt__CountKt$count$2(kotlin.jvm.internal.Ref$IntRef)
kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: void complete(java.lang.Object,java.lang.Object)
kotlinx.coroutines.selects.SelectBuilder: void invoke(kotlinx.coroutines.selects.SelectClause2,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
kotlinx.coroutines.DispatcherExecutor: void execute(java.lang.Runnable)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
androidx.room.InvalidationTracker$Companion: java.lang.String getTriggerName$room_runtime_release(java.lang.String,java.lang.String)
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: SemaphoreKt$withPermit$1(kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow,int)
kotlinx.coroutines.CancellableContinuation: boolean cancel(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt: java.lang.Object collectIndexed(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1: void invoke(java.lang.Throwable)
kotlinx.coroutines.selects.SelectBuilderImpl: void resumeWith(java.lang.Object)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long updateHead(long,int)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object getResult()
kotlinx.coroutines.DelayKt$awaitCancellation$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow publishOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.room.AmbiguousColumnResolver$ResultColumn: androidx.room.AmbiguousColumnResolver$ResultColumn copy$default(androidx.room.AmbiguousColumnResolver$ResultColumn,java.lang.String,int,int,java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getReadableDatabase()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
androidx.room.AmbiguousColumnResolver$Solution: int getOverlaps()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$3: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object lastIndexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1: AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorResume(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow emptyFlow()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1: FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
kotlinx.coroutines.flow.internal.ChannelFlow: kotlinx.coroutines.channels.ReceiveChannel produceImpl(kotlinx.coroutines.CoroutineScope)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.google.android.material.chip.Chip: float getTextEndPadding()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow drop(kotlinx.coroutines.flow.Flow,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: FlowKt__ZipKt$combineUnsafe$1$1(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlinx.coroutines.channels.AbstractChannel: void registerSelectReceiveMode(kotlinx.coroutines.selects.SelectInstance,int,kotlin.jvm.functions.Function2)
kotlinx.coroutines.InactiveNodeList: boolean isActive()
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
androidx.room.TransactionElement$Key: TransactionElement$Key()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDatabaseIntegrityOk$1: java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.CompletedExceptionally: CompletedExceptionally(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.AbstractTimeSource: java.lang.Runnable wrapTask(java.lang.Runnable)
kotlinx.coroutines.flow.SharedFlowImpl: void updateBufferLocked(long,long,long,long)
kotlinx.coroutines.flow.internal.ChannelFlowMerge: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object tryReceive-PtdJZtk()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
kotlinx.coroutines.CoroutineScopeKt: java.lang.Object currentCoroutineContext$$forInline(kotlin.coroutines.Continuation)
androidx.room.RoomDatabase$MigrationContainer: java.util.List findUpMigrationPath(java.util.List,boolean,int,int)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7,kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.Semaphore: java.lang.Object acquire(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow merge(kotlinx.coroutines.flow.Flow[])
androidx.room.AmbiguousColumnResolver: void dfs$default(androidx.room.AmbiguousColumnResolver,java.util.List,java.util.List,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.CompletableDeferred: boolean isActive()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1: CoroutinesRoom$Companion$createFlow$1$1$observer$1(java.lang.String[],kotlinx.coroutines.channels.Channel)
kotlinx.coroutines.JobSupport: boolean isActive()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow scanReduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
kotlinx.coroutines.JobKt: kotlinx.coroutines.Job Job(kotlinx.coroutines.Job)
kotlinx.coroutines.ChildContinuation: void invoke(java.lang.Throwable)
kotlinx.coroutines.internal.Removed: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CoroutineScopeKt: void cancel$default(kotlinx.coroutines.CoroutineScope,java.lang.String,java.lang.Throwable,int,java.lang.Object)
androidx.room.RoomOpenHelper: RoomOpenHelper(androidx.room.DatabaseConfiguration,androidx.room.RoomOpenHelper$Delegate,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.flow.StartedWhileSubscribed: StartedWhileSubscribed(long,long)
kotlinx.coroutines.flow.SharedFlowImpl: int getTotalSize()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: ChannelFlowOperator(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.Active: Active()
kotlinx.coroutines.CancelFutureOnCancel: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: boolean retry(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Void alreadyResumedError(java.lang.Object)
androidx.core.os.CancellationSignal$Api16Impl: void cancel(java.lang.Object)
androidx.constraintlayout.helper.widget.Flow: void setWrapMode(int)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: java.lang.String getPath()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.SelectJoinOnCompletion: java.lang.Object invoke(java.lang.Object)
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
kotlinx.coroutines.CompletableDeferred: kotlinx.coroutines.selects.SelectClause1 getOnAwait()
androidx.room.BuiltInTypeConverters: androidx.room.BuiltInTypeConverters$State uuid()
kotlinx.coroutines.CompletedExceptionally: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.jvm.functions.Function1)
androidx.room.EntityDeletionOrUpdateAdapter: int handle(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
kotlinx.coroutines.flow.SharedFlowImpl: kotlin.coroutines.Continuation[] findSlotsToResumeLocked(kotlin.coroutines.Continuation[])
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SubscribedSharedFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__LimitKt: java.lang.Object emitAbort$FlowKt__LimitKt(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.room.SharedSQLiteStatement$stmt$2: androidx.sqlite.db.SupportSQLiteStatement invoke()
kotlinx.coroutines.android.HandlerContext: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
kotlinx.coroutines.flow.FlowKt__ErrorsKt: java.lang.Object catchImpl(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.selects.SelectClause2 getOnSend()
androidx.room.RenameTable: java.lang.String toTableName()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
kotlinx.coroutines.GlobalScope: GlobalScope()
kotlinx.coroutines.CancellableContinuationImpl: void resume(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.Channel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
kotlinx.coroutines.JobKt__JobKt: boolean isActive(kotlin.coroutines.CoroutineContext)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void endTransaction()
androidx.room.Fts3: java.lang.String[] tokenizerArgs()
androidx.core.view.GravityCompat$Api17Impl: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot allocateSlot()
kotlinx.coroutines.DiagnosticCoroutineContextException: java.lang.Throwable fillInStackTrace()
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
kotlinx.coroutines.internal.DispatchedContinuation: boolean isReusable()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core(java.lang.String,java.lang.Throwable)
kotlinx.coroutines.CoroutineName$Key: CoroutineName$Key(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.PropertyReference1: java.lang.Object invoke(java.lang.Object)
androidx.room.RoomDatabase$Companion: RoomDatabase$Companion()
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(float,float,float,float)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode getOriginalNext()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
kotlinx.coroutines.flow.FlowKt: java.lang.Object toCollection(kotlinx.coroutines.flow.Flow,java.util.Collection,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobKt: void ensureActive(kotlinx.coroutines.Job)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(long[])
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: kotlinx.coroutines.internal.ThreadState invoke(kotlinx.coroutines.internal.ThreadState,kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1: java.lang.Object invoke()
androidx.appcompat.app.AppCompatDelegate$Api33Impl: android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object)
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow scan(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: ConcurrentLinkedListNode(kotlinx.coroutines.internal.ConcurrentLinkedListNode)
kotlinx.coroutines.android.HandlerContext: android.os.Handler access$getHandler$p(kotlinx.coroutines.android.HandlerContext)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.Removed access$removed(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEditTextBoxBackground()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
kotlinx.coroutines.flow.FlowKt: java.lang.Object catchImpl(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.DefaultExecutorKt: kotlinx.coroutines.Delay initializeDefaultDelay()
androidx.room.EntityUpsertionAdapter: long[] upsertAndReturnIdsArray(java.util.Collection)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setAccessibilityClassName(java.lang.CharSequence)
kotlinx.coroutines.selects.SelectBuilderImpl: void invoke(kotlinx.coroutines.selects.SelectClause0,kotlin.jvm.functions.Function1)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
kotlinx.coroutines.flow.SharedFlowKt: kotlinx.coroutines.flow.MutableSharedFlow MutableSharedFlow$default(int,int,kotlinx.coroutines.channels.BufferOverflow,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: java.lang.Object collect(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharedFlowImpl: void cleanupTailLocked()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResume(java.lang.Object,java.lang.Object)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
androidx.room.InvalidationTracker: java.lang.String[] resolveViews(java.lang.String[])
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode peek()
kotlinx.coroutines.flow.ThrowingCollector: ThrowingCollector(java.lang.Throwable)
kotlinx.coroutines.CancellableContinuation: java.lang.Object tryResumeWithException(java.lang.Throwable)
kotlinx.coroutines.internal.ThreadLocalKey: java.lang.ThreadLocal component1()
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl: ChannelFlowOperatorImpl(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean parkedWorkersStackPush(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
kotlinx.coroutines.DispatchedCoroutine: void afterCompletion(java.lang.Object)
kotlinx.coroutines.CompletedWithCancellation: kotlinx.coroutines.CompletedWithCancellation copy$default(kotlinx.coroutines.CompletedWithCancellation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.room.Database: java.lang.Class[] views()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.room.util.FtsTableInfo: int hashCode()
kotlinx.coroutines.CompletedWithCancellation: java.lang.Object component1()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: long insert(java.lang.String,int,android.content.ContentValues)
androidx.room.MultiInstanceInvalidationClient: void setService(androidx.room.IMultiInstanceInvalidationService)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase)
kotlinx.coroutines.JobSupportKt: void getTOO_LATE_TO_CANCEL$annotations()
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
androidx.room.AutoCloser: void decrementCountAndScheduleClose()
androidx.room.MultiInstanceInvalidationService: java.util.Map getClientNames$room_runtime_release()
kotlinx.coroutines.channels.ChannelResult$Closed: int hashCode()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow skip(kotlinx.coroutines.flow.Flow,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted getEagerly()
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void execPerConnectionSQL(java.lang.String,java.lang.Object[])
kotlinx.coroutines.scheduling.DefaultIoScheduler: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.room.Index: java.lang.String name()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.room.RoomDatabase$MigrationContainer: void addMigrations(androidx.room.migration.Migration[])
kotlinx.coroutines.channels.AbstractChannel: boolean isEmpty()
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.room.paging.LimitOffsetDataSource: LimitOffsetDataSource(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,java.lang.String[])
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMutableList(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl: kotlinx.coroutines.flow.Flow dropChannelOperators()
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalBias(float)
kotlinx.coroutines.Job: boolean isCancelled()
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
kotlinx.coroutines.channels.Send: void resumeSendClosed(kotlinx.coroutines.channels.Closed)
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1: DistinctFlowImpl$collect$2$emit$1(kotlinx.coroutines.flow.DistinctFlowImpl$collect$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)
kotlinx.coroutines.internal.FastServiceLoader: FastServiceLoader()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
kotlinx.coroutines.channels.Channel$DefaultImpls: java.lang.Object poll(kotlinx.coroutines.channels.Channel)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException getChildJobCancellationCause()
androidx.room.QueryInterceptorDatabase: boolean isDatabaseIntegrityOk()
kotlinx.coroutines.Deferred: kotlinx.coroutines.selects.SelectClause1 getOnAwait()
kotlinx.coroutines.flow.internal.ChannelFlow: java.lang.String additionalToStringProps()
kotlinx.coroutines.scheduling.CoroutineScheduler: void signalCpuWork()
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.ParentJob: kotlin.coroutines.CoroutineContext$Key getKey()
kotlinx.coroutines.internal.DispatchedContinuation: boolean resumeCancelled(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexedNotNull$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
androidx.room.Entity: java.lang.String[] primaryKeys()
androidx.room.AutoMigration: int to()
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted WhileSubscribed$default(kotlinx.coroutines.flow.SharingStarted$Companion,long,long,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object elementAtOrNull(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
kotlinx.coroutines.CompletedContinuation: java.lang.Throwable component5()
kotlinx.coroutines.scheduling.WorkQueue: long tryStealBlockingFrom(kotlinx.coroutines.scheduling.WorkQueue)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
kotlinx.coroutines.channels.ChannelResult: java.lang.String toString()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverStackTrace(java.lang.Throwable,kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode getAffectedNode()
androidx.room.RoomDatabase$MigrationContainer: void addMigration(androidx.room.migration.Migration)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void saveBinds(int,java.lang.Object)
kotlinx.coroutines.BlockingCoroutine: java.lang.Object joinBlocking()
kotlinx.coroutines.CancellableContinuationImplKt: void getRESUME_TOKEN$annotations()
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: int getVersion()
androidx.room.ColumnInfo$Companion: ColumnInfo$Companion()
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Worker parkedWorkersStackPop()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.room.IMultiInstanceInvalidationService: void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback,int)
kotlinx.coroutines.channels.ReceiveOrClosed: void completeResumeReceive(java.lang.Object)
com.google.android.material.button.MaterialButton: int getIconPadding()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
kotlinx.coroutines.LazyStandaloneCoroutine: LazyStandaloneCoroutine(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: java.lang.Object prepareSelectOp()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: ChannelsKt__DeprecatedKt$minWith$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.DispatchedTaskKt: boolean isCancellableMode(int)
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow buffer(kotlinx.coroutines.flow.Flow,int)
androidx.room.EntityUpsertionAdapter: void upsert(java.lang.Iterable)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
kotlinx.coroutines.CompletableDeferred: kotlin.sequences.Sequence getChildren()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1: AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1(androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine undispatchedCompletion(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
androidx.room.AutoCloser: void executeAutoCloser$lambda$0(androidx.room.AutoCloser)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
androidx.constraintlayout.helper.widget.Flow: void setLastVerticalBias(float)
androidx.constraintlayout.helper.widget.Flow: void setLastHorizontalStyle(int)
com.google.android.material.chip.Chip: float getChipStrokeWidth()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy: IMultiInstanceInvalidationCallback$Stub$Proxy(android.os.IBinder)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void beginTransaction()
kotlinx.coroutines.ParentJob: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
kotlinx.coroutines.CancellableContinuation: void resume(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel takeWhile$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flattenMerge$default(kotlinx.coroutines.flow.Flow,int,int,java.lang.Object)
kotlinx.coroutines.CompletedContinuation: CompletedContinuation(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable)
kotlinx.coroutines.flow.MutableSharedFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next()
com.google.android.material.button.MaterialButton: int getTextHeight()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
kotlinx.coroutines.ChildJob: boolean cancel(java.lang.Throwable)
kotlinx.coroutines.JobSupport$children$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.StackTraceRecoveryKt: void mergeRecoveredTraces(java.lang.StackTraceElement[],java.util.ArrayDeque)
kotlinx.coroutines.channels.ReceiveChannel$onReceiveOrNull$1$registerSelectClause1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuation$DefaultImpls: java.lang.Object tryResume$default(kotlinx.coroutines.CancellableContinuation,java.lang.Object,java.lang.Object,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelResult: int hashCode()
kotlinx.coroutines.flow.internal.SafeCollector_commonKt: kotlinx.coroutines.flow.Flow unsafeFlow(kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1: FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1(kotlin.jvm.functions.Function2,kotlinx.coroutines.flow.Flow)
androidx.room.QueryInterceptorDatabase: boolean isDbLockedByCurrentThread()
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Deferred async$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.internal.SegmentOrClosed: void getSegment$annotations()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaxSqlCacheSize$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.CompletableJob: kotlin.sequences.Sequence getChildren()
kotlinx.coroutines.flow.internal.NopCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.Job: boolean isCompleted()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: void invoke(java.lang.Throwable)
kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith$default(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Object delay(long,kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
kotlinx.coroutines.CompletableDeferred: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.room.DatabaseView: java.lang.String viewName()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler access$getThis$0$p(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
com.google.android.material.textfield.MaterialAutoCompleteTextView: float getPopupElevation()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
kotlinx.coroutines.channels.AbstractChannel: void tryStartBlockUnintercepted(kotlin.jvm.functions.Function2,kotlinx.coroutines.selects.SelectInstance,int,java.lang.Object)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectKt: java.lang.Object access$getUNDECIDED$p()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: ReceiveChannel$receiveOrNull$1(kotlin.coroutines.Continuation)
com.google.android.material.checkbox.MaterialCheckBox: java.lang.CharSequence getErrorAccessibilityLabel()
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder setTransactionExecutor(java.util.concurrent.Executor)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
kotlinx.coroutines.selects.SelectBuilderImpl: void handleBuilderException(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.ParentJob: kotlin.sequences.Sequence getChildren()
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher plus(kotlinx.coroutines.CoroutineDispatcher)
kotlinx.coroutines.EventLoopImplBase: long getNextTime()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CompletableDeferredImpl: boolean completeExceptionally(java.lang.Throwable)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: FlowKt__DelayKt$sample$2$values$1(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ShareKt: void launchSharingDeferred$FlowKt__ShareKt(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CompletableDeferred)
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean yieldIfContendedSafely()
kotlinx.coroutines.flow.SharedFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractChannel: boolean isBufferEmpty()
kotlinx.coroutines.CompletableDeferred: boolean completeExceptionally(java.lang.Throwable)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.AmbiguousColumnResolver$Match: kotlin.ranges.IntRange getResultRange()
kotlinx.coroutines.InvokeOnCompletion: void invoke(java.lang.Throwable)
kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ProducerCoroutine: void onCompleted(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$1()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.room.SQLiteCopyOpenHelper$createFrameworkOpenHelper$configuration$1: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.DefaultExecutorKt: kotlinx.coroutines.Delay getDefaultDelay()
kotlinx.coroutines.flow.MutableStateFlow: java.util.List getReplayCache()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toMap(kotlinx.coroutines.channels.ReceiveChannel,java.util.Map,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: FlowKt__MigrationKt$onErrorReturn$2(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectBuilderImpl$PairSelectOp: kotlinx.coroutines.internal.AtomicOp getAtomicOp()
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand[] $values()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.String toString()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.TransactionElement$Key: TransactionElement$Key(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object offerInternal(java.lang.Object)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
kotlinx.coroutines.flow.StateFlowImpl: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.selects.SeqNumber: SeqNumber()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: CombineKt$zipImpl$1$1$2(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,java.lang.Object,kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
androidx.room.QueryInterceptorDatabase: boolean isReadOnly()
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void isEmpty$annotations()
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalBias(float)
androidx.room.InvalidationTracker$Observer: boolean isRemote$room_runtime_release()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String getStateDebugRepresentation()
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object firstOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
androidx.room.QueryInterceptorStatement: long simpleQueryForLong()
kotlinx.coroutines.flow.FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: void completeResume(java.lang.Object)
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
kotlinx.coroutines.Dispatchers: void getMain$annotations()
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void onDowngrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int)
kotlinx.coroutines.scheduling.TasksKt: boolean isBlocking(kotlinx.coroutines.scheduling.Task)
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void getOnReceiveOrNull$annotations()
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt: java.lang.Object combineInternal(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.Channel$Factory: Channel$Factory()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.flow.internal.ChannelFlowKt: kotlinx.coroutines.flow.internal.ChannelFlow asChannelFlow(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.channels.Receive: kotlinx.coroutines.internal.Symbol getOfferResult()
kotlinx.coroutines.flow.AbstractFlow: AbstractFlow()
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.MultiInstanceInvalidationClient$serviceConnection$1: MultiInstanceInvalidationClient$serviceConnection$1(androidx.room.MultiInstanceInvalidationClient)
kotlinx.coroutines.JobSupport: void promoteSingleToNodeList(kotlinx.coroutines.JobNode)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: ChannelsKt__DeprecatedKt$first$1(kotlin.coroutines.Continuation)
androidx.room.util.DBUtil: void foreignKeyCheck(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
kotlinx.coroutines.internal.AtomicDesc: java.lang.Object prepare(kotlinx.coroutines.internal.AtomicOp)
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()
kotlinx.coroutines.internal.AtomicDesc: kotlinx.coroutines.internal.AtomicOp getAtomicOp()
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow takeWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobKt: kotlinx.coroutines.DisposableHandle cancelFutureOnCompletion(kotlinx.coroutines.Job,java.util.concurrent.Future)
kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.SendChannel$DefaultImpls: boolean close$default(kotlinx.coroutines.channels.SendChannel,java.lang.Throwable,int,java.lang.Object)
androidx.room.InvalidationTracker$ObservedTableTracker: boolean onRemoved(int[])
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object offerInternal(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow mapNotNull(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__CollectionKt: java.lang.Object toCollection(kotlinx.coroutines.flow.Flow,java.util.Collection,kotlin.coroutines.Continuation)
androidx.room.InvalidationTracker: androidx.arch.core.internal.SafeIterableMap getObserverMap$room_runtime_release()
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode correctPrev(kotlinx.coroutines.internal.OpDescriptor)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onCompletion(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder fallbackToDestructiveMigrationFrom(int[])
androidx.cardview.widget.CardView: float getCardElevation()
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.AbstractChannel$Itr: boolean hasNextResult(java.lang.Object)
androidx.room.InvalidationTracker$Companion: InvalidationTracker$Companion()
androidx.room.EntityInsertionAdapter: long insertAndReturnId(java.lang.Object)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.room.InvalidationTracker: java.lang.String[] validateAndResolveTableNames(java.lang.String[])
kotlinx.coroutines.flow.StateFlowKt: void getNONE$annotations()
kotlinx.coroutines.Job: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$1(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.ParentJob: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.AbstractCoroutine: java.lang.String cancellationExceptionMessage()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.room.RoomDatabase$endTransaction$1: java.lang.Object invoke(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: short getShort(int)
kotlinx.coroutines.channels.AbstractChannel: void access$registerSelectReceiveMode(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.selects.SelectInstance,int,kotlin.jvm.functions.Function2)
kotlinx.coroutines.CoroutineDispatcher$Key: CoroutineDispatcher$Key(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: java.lang.Object prepare(kotlinx.coroutines.internal.AtomicOp)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$needUpgrade$1: java.lang.Object invoke(java.lang.Object)
androidx.room.migration.MigrationImpl: kotlin.jvm.functions.Function1 getMigrateCallback()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CancelHandler: CancelHandler()
androidx.room.InvalidationTracker$ObserverWrapper: androidx.room.InvalidationTracker$Observer getObserver$room_runtime_release()
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: void bindBlob(int,byte[])
kotlinx.coroutines.flow.FlowKt__LimitKt: java.lang.Object collectWhile$$forInline(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextAlignment(android.view.View,int)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder setQueryExecutor(java.util.concurrent.Executor)
kotlinx.coroutines.channels.AbstractChannel$ReceiveElementWithUndeliveredHandler: AbstractChannel$ReceiveElementWithUndeliveredHandler(kotlinx.coroutines.CancellableContinuation,int,kotlin.jvm.functions.Function1)
androidx.room.util.DBUtil: android.os.CancellationSignal createCancellationSignal()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
kotlinx.coroutines.flow.FlowKt: java.lang.Object count(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.channels.ReceiveChannel fixedPeriodTicker(kotlinx.coroutines.CoroutineScope,long,long)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.SharedSQLiteStatement$stmt$2: SharedSQLiteStatement$stmt$2(androidx.room.SharedSQLiteStatement)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
com.actiontracker.app.ActionTrackerApplication: ActionTrackerApplication()
kotlinx.coroutines.CoroutineDispatcher: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.flow.internal.ChannelFlow: java.lang.String toString()
kotlinx.coroutines.channels.AbstractChannel$onReceive$1: void registerSelectClause1(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)
kotlinx.coroutines.Job: boolean start()
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api18Impl: boolean isInLayout(android.view.View)
kotlinx.coroutines.DefaultExecutor: boolean isShutDown()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object lastOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.RoomDatabase: void isOpenInternal$annotations()
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.DefaultExecutor: boolean notifyStartup()
kotlinx.coroutines.internal.ConcurrentLinkedListNode: boolean isTail()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
kotlinx.coroutines.ThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Key)
androidx.room.AmbiguousColumnResolver: int[][] resolve(java.lang.String[],java.lang.String[][])
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow debounceDuration(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
androidx.room.TransactionExecutor: void execute$lambda$1$lambda$0(java.lang.Runnable,androidx.room.TransactionExecutor)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.FunctionReference: boolean isOperator()
androidx.room.util.StringUtil: java.lang.StringBuilder newStringBuilder()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
androidx.room.RoomSQLiteQuery: void bindNull(int)
kotlinx.coroutines.internal.StackTraceRecoveryKt: int frameIndex(java.lang.StackTraceElement[],java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
androidx.room.InvalidationTracker$WeakObserver: androidx.room.InvalidationTracker getTracker()
kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1: CombineKt$combineInternal$2$1$1(kotlinx.coroutines.channels.Channel,int)
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
androidx.core.app.NavUtils$Api16Impl: android.content.Intent getParentActivityIntent(android.app.Activity)
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
kotlinx.coroutines.EventLoopImplBase: long processNextEvent()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.CoroutineId: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object first(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.room.IMultiInstanceInvalidationCallback$Stub: androidx.room.IMultiInstanceInvalidationCallback asInterface(android.os.IBinder)
androidx.room.RoomTrackingLiveData: androidx.room.InvalidationTracker$Observer getObserver()
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.BuildersKt__Builders_commonKt: java.lang.Object invoke(kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.SafeCollector: void checkContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CompletedContinuation copy(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable)
kotlinx.coroutines.CompletableDeferred: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.SemaphoreImpl: boolean tryResumeNextFromQueue()
androidx.room.util.TableInfoKt: java.util.Map readColumns(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
kotlinx.coroutines.JobSupport: boolean makeCompleting$kotlinx_coroutines_core(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDbLockedByCurrentThread$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDbLockedByCurrentThread$1()
kotlinx.coroutines.EventLoopImplBase: void shutdown()
androidx.room.RoomDatabase: void close()
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flattenConcat(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object flowCollect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.android.HandlerDispatcherKt: void getMain$annotations()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.room.RoomTrackingLiveData: java.util.concurrent.atomic.AtomicBoolean getComputing()
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
androidx.constraintlayout.widget.Barrier: void setMargin(int)
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: CoroutinesRoom$Companion$createFlow$1$1(boolean,androidx.room.RoomDatabase,kotlinx.coroutines.flow.FlowCollector,java.lang.String[],java.util.concurrent.Callable,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.room.util.TableInfo$ForeignKeyWithSequence: int getSequence()
kotlinx.coroutines.flow.FlowKt__LimitKt: kotlinx.coroutines.flow.Flow drop(kotlinx.coroutines.flow.Flow,int)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
kotlinx.coroutines.JobSupport: java.lang.Void loopOnState(kotlin.jvm.functions.Function1)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: EventLoopImplBase$DelayedTask(long)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1: FlowKt__TransformKt$runningReduce$1$1(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.flow.StateFlow: java.lang.Object getValue()
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder enableMultiInstanceInvalidation()
kotlinx.coroutines.ResumeUndispatchedRunnable: ResumeUndispatchedRunnable(kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CancellableContinuation)
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: FlowKt__ErrorsKt$retry$3(long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.EventLoop: boolean isUnconfinedLoopActive()
kotlinx.coroutines.flow.internal.NopCollector: NopCollector()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow emptyFlow()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object count(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1: void invoke(java.lang.Throwable)
androidx.room.Insert: int onConflict()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow consumeAsFlow(kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: ThreadContextKt$countAll$1()
kotlinx.coroutines.internal.InlineList: boolean equals-impl0(java.lang.Object,java.lang.Object)
kotlinx.coroutines.EventLoop: boolean processUnconfinedEvent()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: ChannelsKt__DeprecatedKt$filterNotNullTo$3(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ResizableAtomicArray: java.lang.Object get(int)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object maxWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterIndexed$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
kotlinx.coroutines.channels.Channel$Factory: int getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core()
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.CoroutineContext getContext()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
kotlinx.coroutines.DelayKt: kotlinx.coroutines.Delay getDelay(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.internal.ArrayQueue: void addLast(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: FlowKt__EmittersKt$transform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectKt: java.lang.Object getNOT_SELECTED()
androidx.room.RoomMasterTable: java.lang.String createInsertQuery(java.lang.String)
androidx.room.QueryInterceptorStatement: void bindString(int,java.lang.String)
androidx.room.DeleteColumn: java.lang.String tableName()
androidx.room.AmbiguousColumnResolver$resolve$1$1: void invoke(int,int,java.util.List)
kotlinx.coroutines.flow.FlowKt__MigrationKt: void forEach(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.EntityUpsertionAdapter: void upsert(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1: FlowKt__ShareKt$launchSharingDeferred$1$1(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.CompletableDeferred)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
kotlinx.coroutines.channels.ProducerCoroutine: ProducerCoroutine(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
kotlinx.coroutines.ExecutorCoroutineDispatcher: java.util.concurrent.Executor getExecutor()
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol access$getUNDEFINED$p()
androidx.room.BuiltInTypeConverters$State: androidx.room.BuiltInTypeConverters$State[] $values()
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object prepare(java.lang.Object)
androidx.room.DeleteColumn: java.lang.String columnName()
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext getContext()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.Channel: java.lang.Object receive(kotlin.coroutines.Continuation)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol access$getTAKEN$p()
androidx.room.util.TableInfo$ForeignKeyWithSequence: int compareTo(java.lang.Object)
kotlinx.coroutines.android.HandlerDispatcherKt: void postFrameCallback(android.view.Choreographer,kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: ChannelLimitedFlowMerge$collectTo$2$1(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.internal.SendingCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LimitedDispatcher: java.lang.Object delay(long,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
kotlinx.coroutines.flow.SubscribedSharedFlow$collect$1: SubscribedSharedFlow$collect$1(kotlinx.coroutines.flow.SubscribedSharedFlow,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
androidx.room.Room: java.lang.Object getGeneratedImplementation(java.lang.Class,java.lang.String)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
androidx.constraintlayout.widget.Barrier: int getType()
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: java.lang.Object updatedNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.sync.SemaphoreKt: void getSEGMENT_SIZE$annotations()
com.google.android.material.checkbox.MaterialCheckBox: void setEnabled(boolean)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol access$getBROKEN$p()
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
androidx.room.util.FtsTableInfo: java.lang.String[] access$getFTS_OPTIONS$cp()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] $values()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1: FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapNotNull$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: void detachChild$kotlinx_coroutines_core()
androidx.room.EntityDeletionOrUpdateAdapter: EntityDeletionOrUpdateAdapter(androidx.room.RoomDatabase)
kotlinx.coroutines.flow.SharedFlowImpl: long getQueueEndIndex()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration)
kotlinx.coroutines.internal.ConcurrentKt: java.util.List subscriberList()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobKt: kotlinx.coroutines.DisposableHandle disposeOnCompletion(kotlinx.coroutines.Job,kotlinx.coroutines.DisposableHandle)
kotlinx.coroutines.flow.FlowKt__LimitKt$emitAbort$1: FlowKt__LimitKt$emitAbort$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow concatMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5(kotlin.sequences.Sequence)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: ChannelsKt__DeprecatedKt$toMap$2(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowCombine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow flowOf(java.lang.Object)
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
kotlinx.coroutines.scheduling.WorkQueue: long tryStealLastScheduled(kotlinx.coroutines.scheduling.WorkQueue,boolean)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletableJob: boolean completeExceptionally(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.Send: Send()
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
kotlinx.coroutines.internal.SystemPropsKt: long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1: FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.ThrowingCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.util.TableInfo$Column: boolean isPrimaryKey()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState)
kotlinx.coroutines.flow.MutableSharedFlow: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: java.lang.Object firstOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.textfield.TextInputLayout: int getErrorAccessibilityLiveRegion()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
androidx.room.AmbiguousColumnResolver$Match: AmbiguousColumnResolver$Match(kotlin.ranges.IntRange,java.util.List)
kotlinx.coroutines.internal.StackTraceRecoveryKt: boolean elementWiseEquals(java.lang.StackTraceElement,java.lang.StackTraceElement)
androidx.room.FtsOptions$MatchInfo: FtsOptions$MatchInfo(java.lang.String,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.internal.MainDispatchersKt: void getSUPPORT_MISSING$annotations()
androidx.room.util.TableInfo$Index$Companion: TableInfo$Index$Companion()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getState$kotlinx_coroutines_core()
kotlinx.coroutines.internal.ArrayQueue: boolean isEmpty()
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: int hashCode()
androidx.core.text.TextUtilsCompat$Api17Impl: int getLayoutDirectionFromLocale(java.util.Locale)
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
androidx.room.util.TableInfo$ForeignKey: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
kotlinx.coroutines.Deferred: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.internal.Segment: boolean getRemoved()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: void complete(kotlinx.coroutines.internal.AtomicOp,java.lang.Object)
androidx.room.util.CursorUtil: int findColumnIndexBySuffix(java.lang.String[],java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.room.IMultiInstanceInvalidationCallback$Default: android.os.IBinder asBinder()
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.Job launchSharing$FlowKt__ShareKt(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.MutableSharedFlow,kotlinx.coroutines.flow.SharingStarted,java.lang.Object)
androidx.room.InvalidationTracker$WeakObserver: java.lang.ref.WeakReference getDelegateRef()
kotlinx.coroutines.internal.Removed: Removed(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.selects.SelectBuilderImpl: void setParentHandle(kotlinx.coroutines.DisposableHandle)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
kotlinx.coroutines.JobSupport: java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: java.lang.Object fold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion: CoroutineScheduler$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow buffer$default(kotlinx.coroutines.flow.Flow,int,int,java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
kotlinx.coroutines.sync.SemaphoreSegment: void cancel(int)
kotlinx.coroutines.selects.SelectKt: void getRESUMED$annotations()
kotlinx.coroutines.flow.FlowKt__ErrorsKt: kotlinx.coroutines.flow.Flow retry(kotlinx.coroutines.flow.Flow,long,kotlin.jvm.functions.Function2)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void setTransactionSuccessful()
kotlinx.coroutines.flow.internal.SafeCollector_commonKt: kotlinx.coroutines.Job transitiveCoroutineParent(kotlinx.coroutines.Job,kotlinx.coroutines.Job)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.EventLoopImplBase: int scheduleImpl(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
kotlinx.coroutines.channels.AbstractSendChannel: AbstractSendChannel(kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow: boolean increment(int)
kotlinx.coroutines.CancellableContinuationKt: kotlinx.coroutines.CancellableContinuationImpl getOrCreateCancellableContinuation(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow debounce-HG0u8IE(kotlinx.coroutines.flow.Flow,long)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.Channel$DefaultImpls: boolean offer(kotlinx.coroutines.channels.Channel,java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
androidx.appcompat.app.ResourcesFlusher$Api16Impl: void clear(android.util.LongSparseArray)
androidx.constraintlayout.helper.widget.Flow: void setVerticalStyle(int)
com.google.android.material.checkbox.MaterialCheckBox: void setChecked(boolean)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object getPeekedValueLockedAt(long)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: ExecutorCoroutineDispatcherImpl(java.util.concurrent.Executor)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
androidx.room.RoomDatabase: void access$internalEndTransaction(androidx.room.RoomDatabase)
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean move(int)
kotlinx.coroutines.flow.SharedFlowImpl: void resetReplayCache()
androidx.room.CoroutinesRoom$Companion$execute$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.AbstractTimeSource: void registerTimeLoopThread()
androidx.constraintlayout.helper.widget.Flow: void setPaddingLeft(int)
androidx.room.QueryInterceptorDatabase: void beginTransactionWithListenerNonExclusive$lambda$3(androidx.room.QueryInterceptorDatabase)
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$2: FlowKt__ReduceKt$last$2(kotlin.jvm.internal.Ref$ObjectRef)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexed$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
kotlinx.coroutines.selects.SelectClause0: void registerSelectClause0(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.CoroutineContextKt$foldCopies$1: CoroutineContextKt$foldCopies$1()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
kotlinx.coroutines.channels.Receive: void completeResumeReceive(java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.room.RoomSQLiteQuery$Companion: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)
com.google.android.material.button.MaterialButton: void setA11yClassName(java.lang.String)
kotlinx.coroutines.scheduling.TaskImpl: java.lang.String toString()
com.google.android.material.appbar.MaterialToolbar: java.lang.Integer getNavigationIconTint()
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.AbstractChannelKt: java.lang.Object toResult(kotlinx.coroutines.channels.Closed)
kotlinx.coroutines.channels.Channel$DefaultImpls: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull(kotlinx.coroutines.channels.Channel)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
kotlinx.coroutines.Deferred: void cancel()
kotlinx.coroutines.internal.ThreadLocalKey: kotlinx.coroutines.internal.ThreadLocalKey copy(java.lang.ThreadLocal)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
kotlinx.coroutines.flow.internal.StackFrameContinuation: kotlin.coroutines.CoroutineContext getContext()
androidx.room.AutoMigration: java.lang.Class spec()
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot: AbstractSharedFlowSlot()
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase$beginTransaction$1: RoomDatabase$beginTransaction$1(androidx.room.RoomDatabase)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: LockFreeLinkedListNode$CondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object fold$$forInline(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
kotlinx.coroutines.CompletableDeferred: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.ParentJob: void cancel()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: LockFreeTaskQueueCore(int,boolean)
kotlinx.coroutines.selects.SelectBuilderImpl: kotlin.coroutines.Continuation getCompletion()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy: void broadcastInvalidation(int,java.lang.String[])
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.InvalidationTracker$Observer: InvalidationTracker$Observer(java.lang.String[])
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.google.android.material.chip.Chip: void setChipStartPadding(float)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.room.RoomDatabase$MigrationContainer: java.util.List findMigrationPath(int,int)
kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp: java.lang.String toString()
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6,kotlin.coroutines.Continuation)
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
kotlinx.coroutines.internal.LockFreeLinkedListHead: boolean remove()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.internal.LockFreeLinkedListHead getQueue()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
androidx.core.os.LocaleListCompat$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void setIndex(int)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$1: java.lang.Throwable invoke(java.lang.Throwable)
kotlinx.coroutines.CoroutineContextKt: java.lang.Object withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0)
kotlinx.coroutines.flow.internal.ChannelFlowMerge: ChannelFlowMerge(kotlinx.coroutines.flow.Flow,int,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1(kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1: FlowKt__ZipKt$combineTransform$7$1(kotlinx.coroutines.flow.Flow[])
com.google.android.material.textfield.TextInputLayout: int getMinWidth()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
kotlinx.coroutines.CancellableContinuationImpl: boolean isReusable()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: ChannelsKt__DeprecatedKt$toChannel$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object pollInternal()
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void close()
kotlinx.coroutines.CancellableContinuationKt: java.lang.Object suspendCancellableCoroutineReusable$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
androidx.room.CoroutinesRoom$Companion: java.lang.Object execute(androidx.room.RoomDatabase,boolean,android.os.CancellationSignal,java.util.concurrent.Callable,kotlin.coroutines.Continuation)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getCLOSED_EMPTY$p()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: ChannelsKt__DeprecatedKt$indexOf$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ContextScope: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel map$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object getExceptionsHolder()
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
kotlinx.coroutines.scheduling.CoroutineScheduler: int decrementCreatedWorkers()
androidx.room.QueryInterceptorDatabase: void query$lambda$6(androidx.room.QueryInterceptorDatabase,java.lang.String)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flattenConcat(kotlinx.coroutines.flow.Flow)
androidx.room.paging.LimitOffsetDataSource$1: LimitOffsetDataSource$1(androidx.room.paging.LimitOffsetDataSource,java.lang.String[])
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaximumSize$1: java.lang.Long invoke(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlinx.coroutines.scheduling.TaskImpl: void run()
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object access$getNextOrClosed(kotlinx.coroutines.internal.ConcurrentLinkedListNode)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.room.AmbiguousColumnResolver$Solution$Companion: AmbiguousColumnResolver$Solution$Companion()
kotlinx.coroutines.flow.internal.UndispatchedContextCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void setIndexInArray(int)
kotlinx.coroutines.channels.LinkedListChannel: java.lang.Object offerSelectInternal(java.lang.Object,kotlinx.coroutines.selects.SelectInstance)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractChannel: void onCancelIdempotent(boolean)
androidx.room.QueryInterceptorDatabase: QueryInterceptorDatabase(androidx.sqlite.db.SupportSQLiteDatabase,java.util.concurrent.Executor,androidx.room.RoomDatabase$QueryCallback)
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
kotlinx.coroutines.JobSupport$Finishing: boolean isCancelling()
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
kotlinx.coroutines.NonDisposableHandle: NonDisposableHandle()
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
kotlinx.coroutines.channels.AbstractSendChannel$SendBufferedDesc: AbstractSendChannel$SendBufferedDesc(kotlinx.coroutines.internal.LockFreeLinkedListHead,java.lang.Object)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
androidx.appcompat.app.AppLocalesMetadataHolderService$Api24Impl: int getDisabledComponentFlag()
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
kotlinx.coroutines.Deferred: kotlin.coroutines.CoroutineContext$Key getKey()
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.lang.Object delay(long,kotlin.coroutines.Continuation)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.flow.ReadonlyStateFlow: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl: ChannelFlowOperatorImpl(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.ranges.IntRange)
kotlinx.coroutines.flow.internal.ChannelFlow: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object)
androidx.room.QueryInterceptorDatabase: int update(java.lang.String,int,android.content.ContentValues,java.lang.String,java.lang.Object[])
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
kotlinx.coroutines.JobSupportKt: void getCOMPLETING_WAITING_CHILDREN$annotations()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: RoomDatabaseKt$startTransactionCoroutine$2$1$1(androidx.room.RoomDatabase,kotlinx.coroutines.CancellableContinuation,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.SemaphoreImpl: boolean tryAcquire()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
kotlinx.coroutines.flow.FlowKt__CountKt: java.lang.Object count(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode takeAffectedNode(kotlinx.coroutines.internal.OpDescriptor)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.Entity: java.lang.String tableName()
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.RoomOpenHelper$Companion: boolean hasEmptySchema$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.EventLoopImplBase: void resetAll()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.OpDescriptor: boolean isEarlierThan(kotlinx.coroutines.internal.OpDescriptor)
kotlinx.coroutines.sync.SemaphoreImpl: boolean access$addAcquireToQueue(kotlinx.coroutines.sync.SemaphoreImpl,kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object closed-JP2dKIU(java.lang.Throwable)
kotlinx.coroutines.JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext)
androidx.room.RoomSQLiteQuery$Companion: void getQueryPool$annotations()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int getSize()
kotlinx.coroutines.scheduling.CoroutineScheduler: int createdWorkers(long)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
androidx.room.InvalidationTracker: java.util.Map getTableIdLookup$room_runtime_release()
kotlinx.coroutines.JobSupport$children$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet)
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharingStarted$Companion: SharingStarted$Companion()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
androidx.room.RoomSQLiteQuery$Companion: void getPOOL_LIMIT$annotations()
androidx.room.QueryInterceptorDatabase: void setTransactionSuccessful$lambda$5(androidx.room.QueryInterceptorDatabase)
kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)
androidx.room.util.TableInfo$Index: int hashCode()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow merge(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: int getMaxLines(android.widget.TextView)
kotlinx.coroutines.selects.SelectBuilder: void invoke(kotlinx.coroutines.selects.SelectClause0,kotlin.jvm.functions.Function1)
androidx.room.RoomDatabase: android.database.Cursor query(java.lang.String,java.lang.Object[])
androidx.constraintlayout.helper.widget.Flow: void setHorizontalAlign(int)
androidx.room.SQLiteCopyOpenHelper: SQLiteCopyOpenHelper(android.content.Context,java.lang.String,java.io.File,java.util.concurrent.Callable,int,androidx.sqlite.db.SupportSQLiteOpenHelper)
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.room.BuiltInTypeConverters: androidx.room.BuiltInTypeConverters$State enums()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.AbstractTimeSourceKt: void parkNanos(java.lang.Object,long)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object pollSelectInternal(kotlinx.coroutines.selects.SelectInstance)
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object failure-PtdJZtk()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.JobNode makeNode(kotlin.jvm.functions.Function1,boolean)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void park()
androidx.room.RoomDatabase$QueryCallback: void onQuery(java.lang.String,java.util.List)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void close()
kotlinx.coroutines.channels.ChannelCoroutine: boolean cancel(java.lang.Throwable)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$1()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineContextKt: java.lang.Object withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0)
androidx.room.QueryInterceptorStatement: int executeUpdateDelete()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
kotlinx.coroutines.EventLoop_commonKt: long delayToNanos(long)
kotlinx.coroutines.ThreadContextElementKt: java.lang.Object isPresent(java.lang.ThreadLocal,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addOneIfEmpty(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.selects.SelectBuilderImpl$DisposeNode: SelectBuilderImpl$DisposeNode(kotlinx.coroutines.DisposableHandle)
kotlinx.coroutines.JobCancellationException: java.lang.Throwable fillInStackTrace()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.CompletableDeferred: java.lang.Object getCompleted()
kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: void undeliveredElement()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorReturn$default(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel distinctBy(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2: FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.RoomSQLiteQuery: void getBindingTypes$annotations()
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: SchedulerCoroutineDispatcher()
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: java.lang.Object last(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ContextScope: kotlin.coroutines.CoroutineContext getCoroutineContext()
com.google.android.material.chip.Chip: void setCloseIconResource(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void runWorker()
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: FlowKt__DelayKt$debounceInternal$1(kotlin.jvm.functions.Function1,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.CoroutineScheduler: void parkedWorkersStackTopUpdate(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,int,int)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
androidx.room.QueryInterceptorProgram: void bindLong(int,long)
androidx.room.util.TableInfo$Companion: TableInfo$Companion()
kotlinx.coroutines.selects.SelectKt: void getUNDECIDED$annotations()
androidx.room.RoomDatabase: java.util.concurrent.locks.Lock getCloseLock$room_runtime_release()
com.google.android.material.chip.Chip: void setMinLines(int)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: MissingMainCoroutineDispatcher(java.lang.Throwable,java.lang.String)
kotlinx.coroutines.scheduling.WorkQueue: long tryStealFrom(kotlinx.coroutines.scheduling.WorkQueue)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: ChannelsKt__DeprecatedKt$elementAtOrNull$1(kotlin.coroutines.Continuation)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
kotlinx.coroutines.EventLoopImplPlatform: EventLoopImplPlatform()
androidx.room.AmbiguousColumnResolver$resolve$4: java.lang.Object invoke(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.room.util.TableInfo$ForeignKeyWithSequence: java.lang.String getTo()
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
kotlinx.coroutines.ChildJob: boolean isCancelled()
kotlinx.coroutines.CoroutineId: int hashCode()
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.room.AutoCloser: androidx.sqlite.db.SupportSQLiteOpenHelper getDelegateOpenHelper()
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: ChannelsKt__ChannelsKt$sendBlocking$1(kotlinx.coroutines.channels.SendChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectBuilderImpl: void access$doAfterSelect(kotlinx.coroutines.selects.SelectBuilderImpl)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.SharedFlow onSubscription(kotlinx.coroutines.flow.SharedFlow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode takeAffectedNode(kotlinx.coroutines.internal.OpDescriptor)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$delete$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$delete$1(java.lang.String,java.lang.String,java.lang.Object[])
kotlinx.coroutines.sync.SemaphoreImpl: SemaphoreImpl(int,int)
androidx.room.QueryInterceptorDatabase: boolean isExecPerConnectionSQLSupported()
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object pollSelectInternal(kotlinx.coroutines.selects.SelectInstance)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.SendElement: kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow mapNotNull(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDatabaseIntegrityOk$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDatabaseIntegrityOk$1()
androidx.room.CoroutinesRoom$Companion: kotlinx.coroutines.flow.Flow createFlow(androidx.room.RoomDatabase,boolean,java.lang.String[],java.util.concurrent.Callable)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: java.lang.Object collect(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2$emit$1: CancellableFlowImpl$collect$2$emit$1(kotlinx.coroutines.flow.CancellableFlowImpl$collect$2,kotlin.coroutines.Continuation)
androidx.room.RoomTrackingLiveData$observer$1: void onInvalidated(java.util.Set)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$1: java.lang.Object invoke()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaximumSize$1: java.lang.Object invoke(java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.internal.ThreadSafeHeapNode: void setIndex(int)
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
kotlinx.coroutines.CompletionHandlerException: CompletionHandlerException(java.lang.String,java.lang.Throwable)
kotlinx.coroutines.NodeList: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
kotlinx.coroutines.flow.internal.FusibleFlow: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1: FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.CompletableDeferred: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
kotlinx.coroutines.flow.FlowKt__MigrationKt: void subscribe(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: FlowKt__MergeKt$mapLatest$1(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowOf(java.lang.Object)
kotlinx.coroutines.EventLoopImplBase: EventLoopImplBase()
kotlinx.coroutines.internal.UndeliveredElementException: UndeliveredElementException(java.lang.String,java.lang.Throwable)
kotlinx.coroutines.JobImpl: boolean getOnCancelComplete$kotlinx_coroutines_core()
kotlinx.coroutines.ChildJob: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void close()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.Job: java.util.concurrent.CancellationException getCancellationException()
androidx.room.util.StringUtil: java.util.List splitToIntList(java.lang.String)
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.ArrayChannel: boolean isBufferFull()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$1: java.lang.Object[] invoke()
kotlinx.coroutines.ThreadContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
androidx.room.Index: androidx.room.Index$Order[] orders()
androidx.room.EntityDeletionOrUpdateAdapter: java.lang.String createQuery()
androidx.room.MultiInstanceInvalidationClient: void setClientId(int)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getStartIconScaleType()
androidx.room.EntityUpsertionAdapter: EntityUpsertionAdapter(androidx.room.EntityInsertionAdapter,androidx.room.EntityDeletionOrUpdateAdapter)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: java.lang.Object emit(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: void finishOnSuccess(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: kotlinx.coroutines.channels.ReceiveChannel produceImpl(kotlinx.coroutines.CoroutineScope)
kotlinx.coroutines.Delay$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnTimeout(kotlinx.coroutines.Delay,long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
androidx.room.QueryInterceptorDatabase: int delete(java.lang.String,java.lang.String,java.lang.Object[])
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object elementAt(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object access$awaitValue(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot,kotlin.coroutines.Continuation)
androidx.room.util.TableInfo$Column: boolean defaultValueEquals(java.lang.String,java.lang.String)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: long systemProp(java.lang.String,long,long,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: ChannelsKt__DeprecatedKt$withIndex$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: AutoClosingRoomOpenHelper$KeepAliveCursor(android.database.Cursor,androidx.room.AutoCloser)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
com.google.android.material.chip.Chip: void setCheckable(boolean)
androidx.room.MapInfo: java.lang.String keyTable()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: ChannelFlowTransformLatest$flowCollect$3$1$2(kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest,kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1: FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
kotlinx.coroutines.JobKt: boolean cancel$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
kotlinx.coroutines.DelayKt: java.lang.Object delay(long,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractChannelKt: void getENQUEUE_FAILED$annotations()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
kotlinx.coroutines.CompletableDeferredImpl: java.lang.Object getCompleted()
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object performAtomicTrySelect(kotlinx.coroutines.internal.AtomicDesc)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonIconTintList()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filter$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.sync.SemaphoreKt: void getMAX_SPIN_CYCLES$annotations()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
kotlinx.coroutines.flow.internal.CombineKt: kotlinx.coroutines.flow.Flow zipImpl(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object access$sendSuspend(kotlinx.coroutines.channels.AbstractSendChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9(kotlin.ranges.IntRange)
androidx.room.InvalidationTracker: java.util.concurrent.atomic.AtomicBoolean getPendingRefresh()
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher from$default(android.os.Handler,java.lang.String,int,java.lang.Object)
androidx.room.RoomDatabaseKt: java.lang.Object startTransactionCoroutine(androidx.room.RoomDatabase,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1: AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
kotlinx.coroutines.channels.ChannelIterator$DefaultImpls: java.lang.Object next(kotlinx.coroutines.channels.ChannelIterator,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharedFlowImpl: int getReplaySize()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1: java.lang.Void invoke()
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
kotlinx.coroutines.channels.ProducerScope: kotlinx.coroutines.channels.SendChannel getChannel()
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
androidx.room.SQLiteCopyOpenHelperFactory: SQLiteCopyOpenHelperFactory(java.lang.String,java.io.File,java.util.concurrent.Callable,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory)
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CancellableContinuationImpl claimReusableCancellableContinuation()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapNotNull$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.StateFlow getSubscriptionCount()
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: java.lang.Object onPrepare(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
androidx.room.RoomSQLiteQuery: void bindLong(int,long)
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
kotlinx.coroutines.ExceptionsKt: void addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable)
kotlinx.coroutines.DispatchedCoroutine: void afterResume(java.lang.Object)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: LockFreeTaskQueueCore$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: FlowKt__DelayKt$sample$2$1$2(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$execute$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: AbstractChannel$ReceiveElement(kotlinx.coroutines.CancellableContinuation,int)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.Job: kotlin.sequences.Sequence getChildren()
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.Incomplete: kotlinx.coroutines.NodeList getList()
kotlinx.coroutines.channels.AbstractSendChannel: boolean isBufferAlwaysFull()
kotlinx.coroutines.channels.SendElement: SendElement(java.lang.Object,kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.channels.ChannelResult: boolean equals-impl0(java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long wo(long,long)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.room.RoomSQLiteQuery: void release()
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$1: FlowKt__ReduceKt$first$$inlined$collectWhile$1(kotlin.jvm.internal.Ref$ObjectRef)
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext getCoroutineContext()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: CombineKt$zipImpl$1$1(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object getResult()
kotlinx.coroutines.internal.ClassValueCtorCache: ClassValueCtorCache()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object tryTakeValue(kotlinx.coroutines.flow.SharedFlowSlot)
kotlinx.coroutines.CancellableContinuation: java.lang.Object tryResume(java.lang.Object,java.lang.Object)
androidx.room.InvalidationTracker$ObservedTableTracker: boolean getNeedsSync()
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.cardview.widget.CardView: void setCardElevation(float)
kotlinx.coroutines.flow.FlowKt__CollectionKt: java.lang.Object toSet(kotlinx.coroutines.flow.Flow,java.util.Set,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable unwrapImpl(java.lang.Throwable)
kotlinx.coroutines.DefaultExecutor: boolean isShutdownRequested()
androidx.room.Delete: java.lang.Class entity()
kotlinx.coroutines.flow.internal.ChannelFlowMerge: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.CoroutinesRoomKt: kotlinx.coroutines.CoroutineDispatcher getQueryDispatcher(androidx.room.RoomDatabase)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.flow.SharedFlowKt: java.lang.Object access$getBufferAt(java.lang.Object[],long)
kotlinx.coroutines.CompletableDeferred: kotlinx.coroutines.selects.SelectClause0 getOnJoin()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlinx.coroutines.ChildJob: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.room.util.ViewInfo$Companion: ViewInfo$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void afterTask(int)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object tryReceive-PtdJZtk()
kotlinx.coroutines.internal.ResizableAtomicArray: void setSynchronized(int,java.lang.Object)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] $values()
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.SharingConfig configureSharing$FlowKt__ShareKt(kotlinx.coroutines.flow.Flow,int)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.room.QueryInterceptorDatabase: void beginTransaction()
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
kotlinx.coroutines.JobKt__JobKt: void ensureActive(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletableJob: boolean isActive()
androidx.room.SQLiteCopyOpenHelper$createFrameworkOpenHelper$configuration$1: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.channels.ChannelResult$Closed: boolean equals(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForLong$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.Job: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.channels.AbstractChannel: boolean isBufferAlwaysEmpty()
kotlinx.coroutines.JobSupport: void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: ChannelsKt__DeprecatedKt$zip$2(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow delayFlow(kotlinx.coroutines.flow.Flow,long)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
kotlinx.coroutines.flow.StateFlowImpl: kotlinx.coroutines.flow.StateFlowSlot createSlot()
androidx.room.QueryInterceptorDatabase: boolean yieldIfContendedSafely()
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.DefaultExecutor: void run()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$2: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$2(java.lang.String,java.lang.Object[])
kotlinx.coroutines.DispatchedTaskKt: boolean isReusableMode(int)
androidx.room.QueryInterceptorDatabase: long getMaximumSize()
androidx.constraintlayout.widget.ConstraintHelper: void setReferenceTags(java.lang.String)
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.Channel: boolean cancel(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow catch(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.DispatchedContinuation: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(java.lang.Iterable,kotlin.jvm.functions.Function3)
kotlinx.coroutines.ThreadContextElement$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.ThreadContextElement,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.room.QueryInterceptorProgram: QueryInterceptorProgram()
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String)
kotlinx.coroutines.flow.FlowKt__LimitKt$emitAbort$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryCreateWorker$default(kotlinx.coroutines.scheduling.CoroutineScheduler,long,int,java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
kotlinx.coroutines.CoroutineName: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel takeWhile$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId copy$default(kotlinx.coroutines.CoroutineId,long,int,java.lang.Object)
kotlinx.coroutines.channels.SendElementWithUndeliveredHandler: SendElementWithUndeliveredHandler(java.lang.Object,kotlinx.coroutines.CancellableContinuation,kotlin.jvm.functions.Function1)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.Job getParent()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
kotlinx.coroutines.scheduling.DefaultScheduler: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.constraintlayout.helper.widget.Flow: void setVerticalAlign(int)
androidx.room.DatabaseConfiguration: DatabaseConfiguration(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,boolean,java.util.Set)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
kotlinx.coroutines.CompletedExceptionally: boolean getHandled()
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
kotlinx.coroutines.CancelFutureOnCancel: void invoke(java.lang.Throwable)
kotlinx.coroutines.AbstractTimeSourceKt: long nanoTime()
kotlinx.coroutines.Deferred: boolean cancel(java.lang.Throwable)
kotlinx.coroutines.CoroutineDispatcher: void releaseInterceptedContinuation(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: ChannelFlow$collect$2(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.internal.ChannelFlow,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName copy(java.lang.String)
androidx.room.AutoCloser: void init(androidx.sqlite.db.SupportSQLiteOpenHelper)
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: kotlinx.coroutines.internal.ConcurrentLinkedListNode getLeftmostAliveNode()
androidx.room.util.TableInfo$ForeignKey: boolean equals(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$2: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLocale(android.content.res.Configuration,java.util.Locale)
kotlinx.coroutines.internal.SegmentOrClosed: SegmentOrClosed(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow scanFold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
androidx.room.MultiInstanceInvalidationClient: java.lang.Runnable getRemoveObserverRunnable()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
kotlinx.coroutines.JobSupport: void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.InvokeOnCancelling: InvokeOnCancelling(kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
kotlinx.coroutines.ParentJob: boolean isCompleted()
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
androidx.room.QueryInterceptorOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getReadableDatabase()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow zip(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.StandaloneCoroutine: StandaloneCoroutine(kotlin.coroutines.CoroutineContext,boolean)
androidx.room.ForeignKey: java.lang.Class entity()
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
kotlinx.coroutines.JobSupport$Finishing: boolean isCompleting()
kotlinx.coroutines.DispatchedTask: void run()
androidx.room.util.TableInfo$Index: java.lang.String toString()
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState(java.lang.Object,kotlinx.coroutines.CancellableContinuation)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.internal.ChannelFlowKt: java.lang.Object withContextUndispatched(kotlin.coroutines.CoroutineContext,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object receiveOrNull(kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuationImpl: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel take(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.CoroutineExceptionHandler$Key: CoroutineExceptionHandler$Key()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void onCorruption(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.scheduling.CoroutineScheduler: void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
kotlinx.coroutines.CompletableJob: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResumeWithException(java.lang.Throwable)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collectIndexed$$forInline(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
kotlinx.coroutines.scheduling.CoroutineScheduler: CoroutineScheduler(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext getImmediate()
androidx.room.TransactionElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder setAutoCloseTimeout(long,java.util.concurrent.TimeUnit)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StartedLazily$command$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.room.DatabaseConfiguration: DatabaseConfiguration(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean,boolean,java.util.Set,java.lang.String,java.io.File)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.room.paging.LimitOffsetDataSource: java.util.List convertRows(android.database.Cursor)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object access$hasNextSuspend(kotlinx.coroutines.channels.AbstractChannel$Itr,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
androidx.room.RoomDatabaseKt: java.lang.Object access$startTransactionCoroutine(androidx.room.RoomDatabase,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.room.util.TableInfoKt: java.util.List readForeignKeyFieldMappings(android.database.Cursor)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.lang.String toString()
kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext foldCopies(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,boolean)
kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: void dispose()
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
kotlinx.coroutines.flow.ChannelAsFlow: kotlinx.coroutines.flow.Flow dropChannelOperators()
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceive()
androidx.room.IMultiInstanceInvalidationCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: void dispose()
kotlinx.coroutines.DispatchedTaskKt: void resumeUnconfined(kotlinx.coroutines.DispatchedTask)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.room.DatabaseConfiguration: DatabaseConfiguration(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,android.content.Intent,boolean,boolean,java.util.Set,java.lang.String,java.io.File,java.util.concurrent.Callable,androidx.room.RoomDatabase$PrepackagedDatabaseCallback,java.util.List,java.util.List)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc describeAddLast(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.MutableSharedFlow: kotlinx.coroutines.flow.StateFlow getSubscriptionCount()
kotlinx.coroutines.DispatchedCoroutine: boolean trySuspend()
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.flow.SharedFlowSlot[] createSlotArray(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
kotlinx.coroutines.scheduling.TaskContextImpl: int getTaskMode()
kotlinx.coroutines.scheduling.CoroutineScheduler: java.lang.String toString()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.room.CoroutinesRoom$Companion$execute$2: CoroutinesRoom$Companion$execute$2(java.util.concurrent.Callable,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
kotlinx.coroutines.channels.AbstractChannel: boolean access$enqueueReceive(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.channels.Receive)
androidx.room.AmbiguousColumnResolver$Solution$Companion: androidx.room.AmbiguousColumnResolver$Solution build(java.util.List)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
androidx.room.IMultiInstanceInvalidationService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc describeTryOffer(java.lang.Object)
androidx.room.RoomOpenHelper$Delegate: void onPostMigrate(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow buffer$default(kotlinx.coroutines.flow.Flow,int,kotlinx.coroutines.channels.BufferOverflow,int,java.lang.Object)
kotlinx.coroutines.internal.ConcurrentKt: java.util.Set identitySet(int)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.internal.DispatchedContinuation: void release()
kotlinx.coroutines.CoroutineDispatcher$Key$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlinx.coroutines.BuildersKt: java.lang.Object invoke(kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull()
kotlinx.coroutines.ResumeAwaitOnCompletion: void invoke(java.lang.Throwable)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
kotlinx.coroutines.CompletedContinuation: int hashCode()
androidx.room.QueryInterceptorDatabase: android.database.Cursor query(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3: FlowKt__ZipKt$combine$$inlined$unsafeFlow$3(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.ThreadState: void append(kotlinx.coroutines.ThreadContextElement,java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$2: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2(kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: java.lang.Integer invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consumeEach$$forInline(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.SharedFlowImpl: boolean tryEmitNoCollectorsLocked(java.lang.Object)
kotlinx.coroutines.JobKt__FutureKt: kotlinx.coroutines.DisposableHandle cancelFutureOnCompletion(kotlinx.coroutines.Job,java.util.concurrent.Future)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: CoroutineScheduler$Worker(kotlinx.coroutines.scheduling.CoroutineScheduler,int)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextDirection(android.view.View,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.room.util.CursorUtil$wrapMappedColumns$2: CursorUtil$wrapMappedColumns$2(android.database.Cursor,java.lang.String[],int[])
androidx.room.QueryInterceptorDatabase: void setPageSize(long)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
kotlinx.coroutines.CompletionHandlerBase: void invoke(java.lang.Throwable)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: java.lang.Object getResult()
androidx.room.QueryInterceptorOpenHelper: QueryInterceptorOpenHelper(androidx.sqlite.db.SupportSQLiteOpenHelper,java.util.concurrent.Executor,androidx.room.RoomDatabase$QueryCallback)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filterNot$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.JobSupport: java.lang.Object joinSuspend(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: ChannelFlowMerge$collectTo$2(kotlinx.coroutines.Job,kotlinx.coroutines.sync.Semaphore,kotlinx.coroutines.channels.ProducerScope,kotlinx.coroutines.flow.internal.SendingCollector)
kotlinx.coroutines.internal.Segment: long getId()
kotlinx.coroutines.DefaultExecutor: void ensureStarted$kotlinx_coroutines_core()
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.String getBufferDebugString()
androidx.activity.ComponentActivity: void setContentView(android.view.View)
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1: FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1(kotlin.jvm.internal.Ref$ObjectRef)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.InvalidationTracker$refreshRunnable$1: java.util.Set checkUpdatedTable()
kotlinx.coroutines.channels.Channel: kotlinx.coroutines.selects.SelectClause1 getOnReceive()
androidx.room.Database: int version()
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: void finishOnSuccess(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()
kotlinx.coroutines.EventLoopImplBase: void setCompleted(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
kotlinx.coroutines.DisposableFutureHandle: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.CoroutineName: java.lang.String getName()
kotlinx.coroutines.sync.SemaphoreKt: void getCANCELLED$annotations()
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.actiontracker.app.data.AppDatabase_Impl: AppDatabase_Impl()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow,int)
com.google.android.material.checkbox.MaterialCheckBox: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
kotlinx.coroutines.JobSupport: boolean cancel(java.lang.Throwable)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: boolean markAsClosed()
kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1: LockFreeLinkedListNode$toString$1(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
androidx.room.Relation: androidx.room.Junction associateBy()
kotlinx.coroutines.ThreadContextElementKt: java.lang.Object ensurePresent(java.lang.ThreadLocal,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverStackTrace(java.lang.Throwable)
androidx.room.QueryInterceptorStatement: void bindNull(int)
androidx.room.InvalidationTracker: void addObserver(androidx.room.InvalidationTracker$Observer)
kotlinx.coroutines.Job: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.room.InvalidationTracker$Companion: void beginTransactionInternal$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.AmbiguousColumnResolver$Solution: androidx.room.AmbiguousColumnResolver$Solution access$getNO_SOLUTION$cp()
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: SharedFlowImpl$collect$1(kotlinx.coroutines.flow.SharedFlowImpl,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ProducerCoroutine: void onCancelled(java.lang.Throwable,boolean)
kotlinx.coroutines.JobKt__JobKt: boolean cancel(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p()
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType[] values()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1: java.lang.Object[] invoke()
androidx.room.EntityUpsertionAdapter: long[] upsertAndReturnIdsArray(java.lang.Object[])
androidx.room.QueryInterceptorDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: FlowKt__ZipKt$combine$1$1(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1: java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
kotlinx.coroutines.selects.SelectBuilderImpl: void resumeSelectWithException(java.lang.Throwable)
kotlinx.coroutines.internal.ThreadSafeHeap: void setSize(int)
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toStringInternalImpl()
kotlinx.coroutines.ParentJob: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.ranges.IntRange)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(java.lang.Object[])
kotlinx.coroutines.AbstractTimeSourceKt: java.lang.Runnable wrapTask(java.lang.Runnable)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
kotlinx.coroutines.JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlinx.coroutines.JobKt__JobKt: void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object lastIndexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: SchedulerCoroutineDispatcher(int,int,long,java.lang.String)
androidx.room.IMultiInstanceInvalidationService$Stub: androidx.room.IMultiInstanceInvalidationService asInterface(android.os.IBinder)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.channels.ArrayChannel: boolean isBufferAlwaysFull()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractSendChannel: void onClosedIdempotent(kotlinx.coroutines.internal.LockFreeLinkedListNode)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
kotlinx.coroutines.CancellableContinuation: void resumeWith(java.lang.Object)
androidx.room.InvalidationTracker: void notifyObserversByTableNames(java.lang.String[])
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel take$default(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
kotlinx.coroutines.intrinsics.UndispatchedKt: java.lang.Object undispatchedResult(kotlinx.coroutines.internal.ScopeCoroutine,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)
androidx.room.FtsOptions$MatchInfo: androidx.room.FtsOptions$MatchInfo valueOf(java.lang.String)
kotlinx.coroutines.scheduling.Task: int getMode()
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
kotlinx.coroutines.EventLoopImplBase: void closeQueue()
androidx.room.RoomDatabase$Builder: RoomDatabase$Builder(android.content.Context,java.lang.Class,java.lang.String)
kotlinx.coroutines.CancellableContinuationImpl: boolean isActive()
androidx.room.QueryInterceptorProgram: void bindString(int,java.lang.String)
kotlinx.coroutines.CoroutineId: CoroutineId(long)
kotlinx.coroutines.DefaultExecutor: void enqueue(java.lang.Runnable)
androidx.room.util.CursorUtil: android.database.Cursor copyAndClose(android.database.Cursor)
com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)
kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: java.lang.String toString()
kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
androidx.room.InvalidationTracker: boolean ensureInitialization$room_runtime_release()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatMapMerge(kotlinx.coroutines.flow.Flow,int,kotlin.jvm.functions.Function2)
kotlinx.coroutines.Job: java.lang.Object join(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$$inlined$sortedByDescending$1: int compare(java.lang.Object,java.lang.Object)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
kotlinx.coroutines.scheduling.CoroutineScheduler: void signalBlockingWork(boolean)
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2: FlowKt__CollectKt$collectIndexed$2(kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: java.lang.String toString()
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
com.google.android.material.floatingactionbutton.FloatingActionButton: FloatingActionButton(android.content.Context,android.util.AttributeSet)
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
androidx.room.RoomOpenHelper$Delegate: void validateMigration(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2: FlowKt__DelayKt$debounce$2(long)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: ChannelsKt__DeprecatedKt$take$1(int,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object indexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setTextLocale(android.widget.TextView,java.util.Locale)
kotlinx.coroutines.DeferredCoroutine: void registerSelectClause1(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedRippleColor(android.content.res.ColorStateList)
kotlinx.coroutines.CancellableContinuationKt: void disposeOnCancellation(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.DisposableHandle)
androidx.room.RoomDatabase: void setAutoMigrationSpecs(java.util.Map)
kotlinx.coroutines.ChildJob: boolean start()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.google.android.material.textfield.TextInputLayout: void setLengthCounter(com.google.android.material.textfield.TextInputLayout$LengthCounter)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object collectWithContextUndispatched(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
kotlinx.coroutines.CoroutineExceptionHandler: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.scheduling.CoroutineScheduler: int incrementCreatedWorkers()
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: ChannelsKt__DeprecatedKt$lastIndexOf$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1: FlowKt__DelayKt$debounceInternal$1$values$1$1(kotlinx.coroutines.channels.ProducerScope)
androidx.room.MultiInstanceInvalidationClient$serviceConnection$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
kotlinx.coroutines.selects.SelectKt: void onTimeout-8Mi8wO0(kotlinx.coroutines.selects.SelectBuilder,long,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.DispatchedTaskKt: void getMODE_CANCELLABLE$annotations()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
kotlinx.coroutines.JobKt: boolean cancel(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: void completeSelect(java.lang.Object)
kotlinx.coroutines.channels.ReceiveChannel: void cancel()
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: java.lang.Object updatedNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.channels.ChannelsKt: kotlin.jvm.functions.Function1 consumes(kotlinx.coroutines.channels.ReceiveChannel)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: java.lang.String simpleQueryForString()
androidx.room.RoomDatabase: java.util.concurrent.Executor getQueryExecutor()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void unregisterDataSetObserver(android.database.DataSetObserver)
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: FlowKt__ReduceKt$fold$1(kotlin.coroutines.Continuation)
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int)
com.google.android.material.textfield.MaterialAutoCompleteTextView: android.content.res.ColorStateList getSimpleItemSelectedRippleColor()
kotlinx.coroutines.flow.FlowKt__LimitKt: java.lang.Object collectWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)
kotlinx.coroutines.EventLoopImplPlatform: void reschedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt: java.lang.Object trySendBlocking(kotlinx.coroutines.channels.SendChannel,java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collectIndexed(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand valueOf(java.lang.String)
com.google.android.material.internal.TouchObserverFrameLayout: void setOnTouchListener(android.view.View$OnTouchListener)
kotlinx.coroutines.CoroutineId$Key: CoroutineId$Key()
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.String toString()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.MultiInstanceInvalidationClient$callback$1: void onInvalidation(java.lang.String[])
kotlinx.coroutines.ThreadContextElementKt: kotlinx.coroutines.ThreadContextElement asContextElement(java.lang.ThreadLocal,java.lang.Object)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
kotlinx.coroutines.flow.SharedFlowSlot: kotlin.coroutines.Continuation[] freeLocked(kotlinx.coroutines.flow.SharedFlowImpl)
kotlinx.coroutines.channels.Receive: Receive()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.EventLoopImplBase: void rescheduleAllDelayed()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
kotlinx.coroutines.internal.Symbol: java.lang.Object unbox(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1: void onInvalidated(java.util.Set)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: LockFreeTaskQueueCore$Companion()
kotlinx.coroutines.CompletableDeferred: java.lang.Object join(kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineName: java.lang.String component1()
kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: void completeResumeSend()
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.channels.AbstractChannel: AbstractChannel(kotlin.jvm.functions.Function1)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getEndIconScaleType()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1: FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1(java.lang.Object[])
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
androidx.room.util.TableInfo$Companion: TableInfo$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.sync.SemaphoreKt: void getTAKEN$annotations()
androidx.room.RoomSQLiteQuery: void bindDouble(int,double)
kotlinx.coroutines.JobSupport$children$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.CoroutineContextKt$foldCopies$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable,java.lang.String)
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1: LockFreeLinkedListNode$makeCondAddOp$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0)
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
kotlinx.coroutines.internal.SegmentOrClosed: boolean equals(java.lang.Object)
androidx.room.EntityInsertionAdapter: java.util.List insertAndReturnIdsList(java.util.Collection)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode removeFirstOrNull()
kotlinx.coroutines.CoroutineStart: boolean isLazy()
kotlinx.coroutines.internal.MainDispatcherFactory: java.lang.String hintOnError()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object single(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean inStack()
kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList getList()
androidx.room.AmbiguousColumnResolver$ResultColumn: int hashCode()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel map(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ArrayChannel: void enqueueElement(int,java.lang.Object)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.channels.AbstractChannel$TryPollDesc: void onRemoved(kotlinx.coroutines.internal.LockFreeLinkedListNode)
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable tryCopyAndVerify(java.lang.Throwable)
androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.MultiInstanceInvalidationClient: java.util.concurrent.atomic.AtomicBoolean getStopped()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1(kotlin.jvm.functions.Function0)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.selects.SelectBuilderImpl: void initCancellability()
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object pollInternal()
kotlinx.coroutines.scheduling.TaskContextImpl: TaskContextImpl(int)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void bindDouble(int,double)
androidx.room.RoomOpenHelper: void onDowngrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawableResource(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Throwable getContinuationCancellationCause(kotlinx.coroutines.Job)
kotlinx.coroutines.TimeoutCancellationException: TimeoutCancellationException(java.lang.String,kotlinx.coroutines.Job)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow debounce(kotlinx.coroutines.flow.Flow,long)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ProducerScope: kotlinx.coroutines.selects.SelectClause2 getOnSend()
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel withIndex$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow merge(java.lang.Iterable)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: void completeResumeReceive(java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$3: ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$3(java.lang.reflect.Constructor)
kotlinx.coroutines.JobSupport: boolean getCompletionCauseHandled()
kotlinx.coroutines.flow.SharedFlowImpl: int access$getBufferCapacity$p(kotlinx.coroutines.flow.SharedFlowImpl)
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object access$acquireSlowPath(kotlinx.coroutines.sync.SemaphoreImpl,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.Channel: void cancel()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1: CombineKt$combineInternal$2$1$1$emit$1(kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel requireNoNulls(kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: SchedulerCoroutineDispatcher(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.channels.AbstractSendChannel: boolean access$isFullImpl(kotlinx.coroutines.channels.AbstractSendChannel)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: void finishPrepare(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.AbstractSendChannel: boolean isClosedForSend()
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.channels.AbstractSendChannel: void registerSelectSend(kotlinx.coroutines.selects.SelectInstance,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Throwable helpCloseAndGetSendException(kotlinx.coroutines.channels.Closed)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.Send: kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
kotlinx.coroutines.channels.Closed: java.lang.Throwable getReceiveException()
kotlinx.coroutines.Dispatchers: void shutdown()
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
kotlinx.coroutines.channels.AbstractChannelKt: java.lang.Object toResult(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: FlowKt__ShareKt$launchSharing$1$1(kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
kotlinx.coroutines.DispatchedTaskKt: void resumeWithStackTrace(kotlin.coroutines.Continuation,java.lang.Throwable)
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder fallbackToDestructiveMigrationOnDowngrade()
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.CancelHandler makeCancelHandler(kotlin.jvm.functions.Function1)
androidx.room.util.TableInfo$Column: java.lang.String toString()
kotlinx.coroutines.channels.Channel: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean isRemoved()
androidx.room.InvalidationTracker$refreshRunnable$1: InvalidationTracker$refreshRunnable$1(androidx.room.InvalidationTracker)
kotlinx.coroutines.DebugStringsKt: java.lang.String getHexAddress(java.lang.Object)
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
androidx.room.RenameColumn: java.lang.String tableName()
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.channels.AbstractChannel: void cancel(java.util.concurrent.CancellationException)
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.channels.Closed getOfferResult()
kotlinx.coroutines.scheduling.WorkQueue: boolean pollTo(kotlinx.coroutines.scheduling.GlobalQueue)
kotlinx.coroutines.Job$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.Job,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.room.QueryInterceptorStatement: void simpleQueryForLong$lambda$3(androidx.room.QueryInterceptorStatement)
androidx.room.MultiInstanceInvalidationClient$1: void onInvalidated(java.util.Set)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: kotlinx.coroutines.internal.ConcurrentLinkedListNode nextOrIfClosed(kotlin.jvm.functions.Function0)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.room.util.StringUtil: void appendPlaceholders(java.lang.StringBuilder,int)
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void missing()
androidx.cardview.widget.CardView: float getMaxCardElevation()
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flatMapMerge$default(kotlinx.coroutines.flow.Flow,int,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.channels.ReceiveChannel: boolean isEmpty()
androidx.room.RenameTable$Entries: androidx.room.RenameTable[] value()
androidx.room.util.ViewInfo: boolean equals(java.lang.Object)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object emit$suspendImpl(kotlinx.coroutines.flow.SharedFlowImpl,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractChannel$onReceive$1: AbstractChannel$onReceive$1(kotlinx.coroutines.channels.AbstractChannel)
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
kotlinx.coroutines.JobSupport: boolean tryFinalizeSimpleState(kotlinx.coroutines.Incomplete,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Throwable helpCloseAndGetSendException(java.lang.Object,kotlinx.coroutines.channels.Closed)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$2: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$2(int)
kotlinx.coroutines.flow.MutableStateFlow: boolean compareAndSet(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.Channel: java.lang.Object poll()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: java.lang.Object invoke(int,kotlin.coroutines.Continuation)
androidx.constraintlayout.widget.Barrier: boolean getAllowsGoneWidget()
kotlinx.coroutines.channels.AbstractSendChannel: boolean isBufferFull()
androidx.room.RoomDatabase: void access$internalBeginTransaction(androidx.room.RoomDatabase)
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
kotlinx.coroutines.channels.ChannelCoroutine: void cancelInternal(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: FlowKt__ShareKt$launchSharing$1(kotlinx.coroutines.flow.SharingStarted,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.MutableSharedFlow,java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
androidx.room.MultiInstanceInvalidationService$binder$1: void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
androidx.lifecycle.LiveData: void postValue(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler: void dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler,java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean,int,java.lang.Object)
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void cancel$default(kotlinx.coroutines.channels.ReceiveChannel,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1: java.lang.Boolean invoke(boolean,kotlin.coroutines.CoroutineContext$Element)
androidx.room.RoomSQLiteQuery: void getBlobBindings$annotations()
androidx.room.util.FtsTableInfo$Companion: java.util.Set parseOptions(java.lang.String)
kotlinx.coroutines.flow.FlowKt__EmittersKt: kotlinx.coroutines.flow.Flow onStart(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt: void getDEFAULT_CONCURRENCY_PROPERTY_NAME$annotations()
kotlinx.coroutines.CancelHandlerBase: java.lang.Object invoke(java.lang.Object)
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
kotlinx.coroutines.EventLoopImplBase: void enqueue(java.lang.Runnable)
kotlinx.coroutines.selects.SelectBuilderImpl$onTimeout$$inlined$Runnable$1: void run()
kotlinx.coroutines.internal.LimitedDispatcher: void run()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: int update(java.lang.String,int,android.content.ContentValues,java.lang.String,java.lang.Object[])
androidx.room.Fts4: int[] prefix()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorResumeNext(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: FlowKt__CollectKt$launchIn$1(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel map$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.room.util.FtsTableInfo$Companion: java.util.Set readColumns(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
kotlinx.coroutines.selects.SelectBuilderImpl: kotlin.coroutines.CoroutineContext getContext()
com.google.android.material.appbar.MaterialToolbar: void setTitleCentered(boolean)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumes$1: void invoke(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt: java.lang.Object count(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.UnlimitedIoScheduler: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: FlowKt__ReduceKt$firstOrNull$3(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.AbstractFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.SendChannel$DefaultImpls: void isClosedForSend$annotations()
kotlinx.coroutines.ParentJob: java.lang.Object join(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StartedWhileSubscribed: kotlinx.coroutines.flow.Flow command(kotlinx.coroutines.flow.StateFlow)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: ChannelFlowTransformLatest(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.CompletedWithCancellation: kotlinx.coroutines.CompletedWithCancellation copy(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
androidx.cardview.widget.CardView: CardView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel drop(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.room.RoomOpenHelper$Delegate: androidx.room.RoomOpenHelper$ValidationResult onValidateSchema(androidx.sqlite.db.SupportSQLiteDatabase)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4(java.util.Iterator)
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type valueOf(java.lang.String)
androidx.room.RoomTrackingLiveData: java.util.concurrent.atomic.AtomicBoolean getRegisteredObserver()
kotlinx.coroutines.flow.FlowKt__MergeKt: void getDEFAULT_CONCURRENCY_PROPERTY_NAME$annotations()
kotlinx.coroutines.CancellableContinuation: void initCancellability()
kotlinx.coroutines.channels.AbstractChannel: boolean enqueueReceive(kotlinx.coroutines.channels.Receive)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: ChannelsKt__Channels_commonKt$consumeEach$1(kotlin.coroutines.Continuation)
androidx.core.app.ActivityCompat$Api16Impl: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void execute()
kotlinx.coroutines.StandaloneCoroutine: boolean handleJobException(java.lang.Throwable)
androidx.room.QueryInterceptorDatabase: void disableWriteAheadLogging()
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2: FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2(java.lang.Object)
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type[] values()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.room.EntityInsertionAdapter: java.lang.Long[] insertAndReturnIdsArrayBox(java.lang.Object[])
kotlinx.coroutines.selects.SelectBuilderImpl$SelectOnCancelling: void invoke(java.lang.Throwable)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$2: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlinx.coroutines.JobSupportKt: void getCOMPLETING_RETRY$annotations()
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabel(java.lang.CharSequence)
kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.Job SupervisorJob$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlinx.coroutines.internal.ScopeCoroutine: void afterCompletion(java.lang.Object)
kotlinx.coroutines.internal.OnUndeliveredElementKt: void callUndeliveredElement(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(java.util.Iterator)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: void complete(java.lang.Object,java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean needUpgrade(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: FlowKt__ZipKt$combineTransform$7(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: int getPosition()
kotlinx.coroutines.internal.ConcurrentLinkedListNode: boolean trySetNext(kotlinx.coroutines.internal.ConcurrentLinkedListNode)
androidx.room.util.FileUtil: void copy(java.nio.channels.ReadableByteChannel,java.nio.channels.FileChannel)
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.SharedFlow shareIn$default(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,int,int,java.lang.Object)
kotlin.jvm.internal.PropertyReference0: kotlin.reflect.KProperty0$Getter getGetter()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlinx.coroutines.AbstractTimeSourceKt: long currentTimeMillis()
kotlinx.coroutines.JobSupport: java.lang.Object join(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.QueryInterceptorDatabase: void close()
kotlinx.coroutines.JobNode: JobNode()
kotlinx.coroutines.channels.ReceiveChannel: boolean isClosedForReceive()
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: ChannelFlowMerge$collectTo$2$emit$1(kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectBuilderImpl: boolean isSelected()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow scanReduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.AbstractCoroutine: void onCancelled(java.lang.Throwable,boolean)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onStart(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.Channel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull()
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.InvalidationTracker: void syncTriggers$room_runtime_release()
kotlin.jvm.internal.PropertyReference0: java.lang.Object invoke()
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
kotlinx.coroutines.AbstractTimeSource: long currentTimeMillis()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.room.paging.LimitOffsetDataSource$1: void onInvalidated(java.util.Set)
androidx.room.migration.Migration: void migrate(androidx.sqlite.db.SupportSQLiteDatabase)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1: java.lang.Object invoke(java.lang.Object)
androidx.room.util.FtsTableInfo$Companion: java.util.Set readOptions(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1: java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.flow.ReadonlyStateFlow: java.lang.Object getValue()
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerDispatcher getImmediate()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
kotlinx.coroutines.NonDisposableHandle: boolean childCancelled(java.lang.Throwable)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object)
kotlinx.coroutines.JobCancellationException: JobCancellationException(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job)
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1$emit$1: FlowKt__LimitKt$drop$2$1$emit$1(kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: CombineKt$combineInternal$2$1(kotlinx.coroutines.flow.Flow[],int,java.util.concurrent.atomic.AtomicInteger,kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.util.TableInfo$ForeignKeyWithSequence: int compareTo(androidx.room.util.TableInfo$ForeignKeyWithSequence)
androidx.room.Index$Order: Index$Order(java.lang.String,int)
androidx.room.InvalidationTracker: void setCleanupStatement$room_runtime_release(androidx.sqlite.db.SupportSQLiteStatement)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow buffer(kotlinx.coroutines.flow.Flow,int)
kotlinx.coroutines.channels.ConflatedChannel: boolean isBufferAlwaysFull()
kotlinx.coroutines.flow.SharedFlowImpl: boolean tryEmitLocked(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.EventLoop: boolean isEmpty()
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.CoroutinesRoom$Companion$execute$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode find(kotlin.jvm.functions.Function1)
kotlinx.coroutines.ParentJob: java.util.concurrent.CancellationException getCancellationException()
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl: android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean remove()
kotlinx.coroutines.scheduling.CoroutineScheduler: long releaseCpuPermit()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent)
androidx.room.RoomOpenHelper$Delegate: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterNot$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$$inlined$sortedByDescending$1: ExceptionsConstructorKt$createConstructor$$inlined$sortedByDescending$1()
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstIf(kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.ForeignKey: java.lang.String[] childColumns()
kotlinx.coroutines.CompletableJob: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.room.RoomDatabase: java.util.concurrent.Executor getTransactionExecutor()
kotlinx.coroutines.internal.SegmentOrClosed: boolean equals-impl(java.lang.Object,java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
kotlinx.coroutines.UndispatchedMarker: UndispatchedMarker()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object awaitPending(kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setForeignKeyConstraintsEnabled$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.JobKt__JobKt: void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object removeFirstOrNull()
kotlinx.coroutines.CompletedWithCancellation: java.lang.String toString()
androidx.room.EntityInsertionAdapter: long[] insertAndReturnIdsArray(java.lang.Object[])
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder createFromInputStream(java.util.concurrent.Callable,androidx.room.RoomDatabase$PrepackagedDatabaseCallback)
kotlinx.coroutines.InvokeOnCancel: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel flatMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.flow.ChannelAsFlow: java.lang.String additionalToStringProps()
kotlinx.coroutines.sync.Semaphore: int getAvailablePermits()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow sample-HG0u8IE(kotlinx.coroutines.flow.Flow,long)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder fallbackToDestructiveMigration()
kotlinx.coroutines.selects.SelectInstance: boolean isSelected()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
kotlinx.coroutines.internal.SystemPropsKt: long systemProp(java.lang.String,long,long,long)
kotlinx.coroutines.internal.FastServiceLoader: kotlinx.coroutines.internal.MainDispatcherFactory createInstanceOf(java.lang.Class,java.lang.String)
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object getNext()
androidx.room.Index: boolean unique()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
kotlinx.coroutines.JobSupport: JobSupport(boolean)
androidx.room.AmbiguousColumnResolver$ResultColumn: AmbiguousColumnResolver$ResultColumn(java.lang.String,int)
kotlinx.coroutines.flow.ChannelAsFlow: kotlinx.coroutines.channels.ReceiveChannel produceImpl(kotlinx.coroutines.CoroutineScope)
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1: CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1(kotlin.jvm.functions.Function2,kotlinx.coroutines.CoroutineExceptionHandler$Key)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl: int getLayoutDirection(android.content.res.Configuration)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlinx.coroutines.flow.Flow distinctUntilChangedBy(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.RoomDatabase$MigrationContainer: void addMigrations(java.util.List)
kotlinx.coroutines.DispatchedTask: java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object)
kotlinx.coroutines.ChildHandleNode: boolean childCancelled(java.lang.Throwable)
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type[] values()
kotlinx.coroutines.ChildJob: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.scheduling.WorkQueue: void decrementIfBlocking(kotlinx.coroutines.scheduling.Task)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: java.lang.String toString()
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
androidx.room.QueryInterceptorDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)
androidx.room.QueryInterceptorDatabase: void endTransaction$lambda$4(androidx.room.QueryInterceptorDatabase)
com.google.android.material.textfield.TextInputLayout: void setErrorAccessibilityLiveRegion(int)
com.google.android.material.internal.TouchObserverFrameLayout: TouchObserverFrameLayout(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object success-JP2dKIU(java.lang.Object)
kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull()
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getDefault()
kotlinx.coroutines.internal.DispatchedContinuationKt: void getUNDEFINED$annotations()
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl: java.lang.Object flowCollect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KMutableProperty$Setter getSetter()
kotlinx.coroutines.flow.SharedFlowImpl: SharedFlowImpl(int,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForLong$1: AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForLong$1()
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object any(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelResult: boolean equals-impl(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CompletedWithCancellation: kotlin.jvm.functions.Function1 component2()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1: java.util.List invoke(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1: FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object getLIST_EMPTY()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.android.HandlerContext: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object elementAt(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$insert$1: java.lang.Object invoke(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean isNull(int)
kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: void resumeReceiveClosed(kotlinx.coroutines.channels.Closed)
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext getContext()
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: FlowKt__TransformKt$runningFold$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectBuilderImpl$SelectOnCancelling: SelectBuilderImpl$SelectOnCancelling(kotlinx.coroutines.selects.SelectBuilderImpl)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancelHandler: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__EmittersKt: java.lang.Object invokeSafely$FlowKt__EmittersKt(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3,java.lang.Throwable,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: void resumeSendClosed(kotlinx.coroutines.channels.Closed)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.CancellableFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
kotlinx.coroutines.CoroutineDispatcher$Key$1: CoroutineDispatcher$Key$1()
kotlinx.coroutines.flow.StartedEagerly: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: FlowKt__ReduceKt$fold$2$emit$1(kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase: void internalInitInvalidationTracker(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.internal.ExceptionsConstructorKt: java.lang.Throwable tryCopyException(java.lang.Throwable)
kotlinx.coroutines.channels.AbstractChannel: boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: void completeResumeSend()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.AbstractSendChannel: void helpClose(kotlinx.coroutines.channels.Closed)
androidx.room.IMultiInstanceInvalidationService: int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String)
kotlinx.coroutines.channels.ProducerScope: boolean isClosedForSend()
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean close()
kotlinx.coroutines.channels.SendElementWithUndeliveredHandler: boolean remove()
kotlinx.coroutines.internal.InlineList: java.lang.Object plus-FjFbRPM(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean getWantsAllOnMoveCalls()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: void setBoxCollapsedPaddingTop(int)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
kotlinx.coroutines.internal.WeakMapCtorCache: WeakMapCtorCache()
kotlinx.coroutines.flow.internal.SafeCollectorKt: void getEmitFun$annotations()
kotlinx.coroutines.flow.CallbackFlowBuilder: CallbackFlowBuilder(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
kotlinx.coroutines.internal.OpDescriptor: kotlinx.coroutines.internal.AtomicOp getAtomicOp()
kotlinx.coroutines.internal.MainDispatcherFactory: int getLoadPriority()
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow cache(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.channels.ChannelKt: java.lang.Object onSuccess-WpGqRn0(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1(java.lang.String,int,android.content.ContentValues,java.lang.String,java.lang.Object[])
kotlinx.coroutines.Unconfined: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.internal.Segment: Segment(long,kotlinx.coroutines.internal.Segment,int)
kotlinx.coroutines.JobSupport$children$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
kotlinx.coroutines.android.HandlerDispatcherKt: void access$postFrameCallback(android.view.Choreographer,kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$2: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$2()
com.google.android.material.chip.Chip: void setRippleColorResource(int)
kotlinx.coroutines.internal.StackTraceRecoveryKt: kotlin.Pair causeAndStacktrace(java.lang.Throwable)
kotlinx.coroutines.CoroutineId: java.lang.String updateThreadContext(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] access$getSlots(kotlinx.coroutines.flow.internal.AbstractSharedFlow)
kotlinx.coroutines.ResumeUndispatchedRunnable: void run()
androidx.room.InvalidationTracker: void onAutoCloseCallback()
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
kotlinx.coroutines.flow.ChannelFlowBuilder: ChannelFlowBuilder(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.room.DatabaseConfiguration: DatabaseConfiguration(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean,boolean,java.util.Set)
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1: FlowKt__LimitKt$collectWhile$collector$1(kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.Channel: void cancel(java.util.concurrent.CancellationException)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function4)
com.google.android.material.chip.Chip: float getChipIconSize()
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: void finishPrepare(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: JobSupport$addLastAtomic$$inlined$addLastIf$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.JobSupport,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
kotlinx.coroutines.channels.AbstractChannelKt: void getHANDLER_INVOKED$annotations()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
kotlinx.coroutines.internal.ThreadSafeHeap: boolean isEmpty()
kotlinx.coroutines.scheduling.CoroutineScheduler: void decrementBlockingTasks()
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
kotlin.jvm.internal.FunctionReference: boolean isInfix()
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void run()
kotlinx.coroutines.Job: kotlinx.coroutines.selects.SelectClause0 getOnJoin()
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow filterNotNull(kotlinx.coroutines.flow.Flow)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1: FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1,kotlin.coroutines.Continuation)
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl: void getRealSize(android.view.Display,android.graphics.Point)
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2: DistinctFlowImpl$collect$2(kotlinx.coroutines.flow.DistinctFlowImpl,kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.flow.FlowCollector)
androidx.room.MultiInstanceInvalidationService: android.os.RemoteCallbackList getCallbackList$room_runtime_release()
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
kotlinx.coroutines.internal.LockFreeLinkedListNode: void access$finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.EventLoop_commonKt: void getDISPOSED_TASK$annotations()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
kotlinx.coroutines.JobSupport: java.lang.Object makeCancelling(java.lang.Object)
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ProducerScope: kotlin.coroutines.CoroutineContext getCoroutineContext()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow scanFold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow,java.lang.Object)
kotlinx.coroutines.scheduling.DefaultScheduler: void shutdown$kotlinx_coroutines_core()
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
kotlinx.coroutines.scheduling.Task: Task(long,kotlinx.coroutines.scheduling.TaskContext)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.ReadonlySharedFlow: java.util.List getReplayCache()
kotlinx.coroutines.channels.ProduceKt$awaitClose$2: java.lang.Object invoke()
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object offerSelectInternal(java.lang.Object,kotlinx.coroutines.selects.SelectInstance)
androidx.room.util.TableInfo$Companion: androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
androidx.room.Entity: java.lang.String[] ignoredColumns()
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
androidx.room.Entity: boolean inheritSuperIndices()
kotlinx.coroutines.scheduling.DefaultIoScheduler: void execute(java.lang.Runnable)
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow flowOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatMapLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.room.ColumnInfo: java.lang.String name()
kotlinx.coroutines.channels.ChannelResult$Closed: ChannelResult$Closed(java.lang.Throwable)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void tryTerminateWorker()
kotlinx.coroutines.flow.internal.StackFrameContinuation: void resumeWith(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
kotlinx.coroutines.JobSupport: java.lang.Throwable getCompletionExceptionOrNull()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
kotlinx.coroutines.CoroutineScopeKt: void isActive$annotations(kotlinx.coroutines.CoroutineScope)
kotlinx.coroutines.internal.ContextScope: ContextScope(kotlin.coroutines.CoroutineContext)
androidx.room.EntityUpsertionAdapter: java.util.List upsertAndReturnIdsList(java.lang.Object[])
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.sequences.Sequence)
kotlinx.coroutines.sync.Semaphore: void release()
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher$default(java.lang.Throwable,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.scheduling.TaskContextImpl: void afterTask()
com.google.android.material.textfield.TextInputLayout: void setMinWidthResource(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow withIndex(kotlinx.coroutines.flow.Flow)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
kotlinx.coroutines.JobSupport: void onCompletionInternal(java.lang.Object)
androidx.room.AmbiguousColumnResolver$resolve$1$2: AmbiguousColumnResolver$resolve$1$2(java.util.List,int)
androidx.room.util.TableInfoKt: java.util.Set readIndices(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
com.google.android.material.button.MaterialButton: void setElevation(float)
kotlinx.coroutines.CancellableContinuation: void resumeUndispatchedWithException(kotlinx.coroutines.CoroutineDispatcher,java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$1: FlowKt__ZipKt$combineTransform$6$1(kotlinx.coroutines.flow.Flow[])
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.internal.ClassValueCtorCache$cache$1: kotlin.jvm.functions.Function1 computeValue(java.lang.Class)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatMapConcat(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow dropWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.BuildersKt: java.lang.Object runBlocking(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object indexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ExceptionsConstructorKt: int fieldsCount$default(java.lang.Class,int,int,java.lang.Object)
kotlinx.coroutines.channels.ConflatedChannel: boolean isBufferAlwaysEmpty()
kotlinx.coroutines.JobKt: void cancelChildren(kotlinx.coroutines.Job)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow sample(kotlinx.coroutines.flow.Flow,long)
kotlinx.coroutines.Deferred: boolean isActive()
kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.EventLoop currentOrNull$kotlinx_coroutines_core()
androidx.room.MultiInstanceInvalidationClient: void stop()
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow merge(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.flow.StartedWhileSubscribed: boolean equals(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
kotlinx.coroutines.flow.StateFlowSlot: boolean allocateLocked(kotlinx.coroutines.flow.StateFlowImpl)
kotlinx.coroutines.LazyStandaloneCoroutine: void onStart()
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.RawQuery: java.lang.Class[] observedEntities()
kotlinx.coroutines.JobKt: void cancel(kotlinx.coroutines.Job,java.lang.String,java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1: FlowKt__DistinctKt$defaultKeySelector$1()
kotlinx.coroutines.JobSupportKt: void getEMPTY_NEW$annotations()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.Unconfined: Unconfined()
androidx.room.RoomTrackingLiveData: void invalidationRunnable$lambda$1(androidx.room.RoomTrackingLiveData)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel zip(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: java.util.concurrent.Executor getExecutor()
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
kotlinx.coroutines.channels.AbstractChannel$TryPollDesc: java.lang.Object onPrepare(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: byte[] getBlob(int)
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancelledContinuation: boolean makeResumed()
kotlinx.coroutines.CancellableContinuationImpl: void resumeWith(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: java.util.List getNotificationUris()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexed$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
androidx.room.QueryInterceptorStatement: void executeUpdateDelete$lambda$1(androidx.room.QueryInterceptorStatement)
kotlinx.coroutines.flow.ReadonlyStateFlow: java.util.List getReplayCache()
kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.internal.LimitedDispatcher: boolean addAndTryDispatching(java.lang.Runnable)
kotlinx.coroutines.internal.LockFreeLinkedListNode: int tryCondAddNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
kotlinx.coroutines.flow.SharedFlowImpl: int access$getTotalSize(kotlinx.coroutines.flow.SharedFlowImpl)
androidx.room.CoroutinesRoom$Companion$execute$4$1: void invoke(java.lang.Throwable)
androidx.room.SharedSQLiteStatement$stmt$2: java.lang.Object invoke()
kotlinx.coroutines.AbstractCoroutine: void getContext$annotations()
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
kotlinx.coroutines.internal.ThreadLocalElement: ThreadLocalElement(java.lang.Object,java.lang.ThreadLocal)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: CoroutineScheduler$WorkerState(java.lang.String,int)
kotlinx.coroutines.EventLoop: void shutdown()
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$2: FlowKt__ReduceKt$lastOrNull$2(kotlin.jvm.internal.Ref$ObjectRef)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.room.CoroutinesRoom$Companion$createFlow$1: CoroutinesRoom$Companion$createFlow$1(boolean,androidx.room.RoomDatabase,java.lang.String[],java.util.concurrent.Callable,kotlin.coroutines.Continuation)
androidx.room.Fts4: java.lang.String[] notIndexed()
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
androidx.room.InvalidationTracker$ObservedTableTracker: int[] getTablesToSync()
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: void bindString(int,java.lang.String)
kotlinx.coroutines.EventLoopImplBase: boolean isEmpty()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object elementAtOrNull(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)
androidx.cardview.widget.CardView: void setRadius(float)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuationImpl: void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable)
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.room.AmbiguousColumnResolver: AmbiguousColumnResolver()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean requery()
kotlinx.coroutines.sync.SemaphoreKt: java.lang.Object withPermit$$forInline(kotlinx.coroutines.sync.Semaphore,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel drop(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1: java.lang.Object get()
kotlinx.coroutines.selects.SelectKt: java.lang.Object getALREADY_SELECTED()
androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()
kotlinx.coroutines.ExceptionsKt: java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable)
androidx.cardview.widget.CardView: void setMinimumWidth(int)
kotlinx.coroutines.Delay: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.internal.AtomicDesc: void complete(kotlinx.coroutines.internal.AtomicOp,java.lang.Object)
androidx.room.RoomDatabase: void isOpen$annotations()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextAlignment(android.view.View)
kotlinx.coroutines.internal.CtorCache: CtorCache()
kotlinx.coroutines.android.HandlerDispatcher: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.room.Entity: androidx.room.ForeignKey[] foreignKeys()
kotlinx.coroutines.channels.AbstractChannelKt: void getEMPTY$annotations()
kotlinx.coroutines.RemoveOnCancel: java.lang.String toString()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.room.QueryInterceptorDatabase: void query$lambda$7(androidx.room.QueryInterceptorDatabase,java.lang.String,java.lang.Object[])
androidx.room.CoroutinesRoomKt: kotlinx.coroutines.CoroutineDispatcher getTransactionDispatcher(androidx.room.RoomDatabase)
com.google.android.material.textfield.TextInputLayout: void setEndIconMinSize(int)
androidx.room.ColumnInfo: int typeAffinity()
kotlinx.coroutines.CompletableDeferredImpl: java.lang.Object await(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelResult$Companion: ChannelResult$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
kotlinx.coroutines.CoroutineExceptionHandler: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: ChannelsKt__DeprecatedKt$filterNotNullTo$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.StateFlow asStateFlow(kotlinx.coroutines.flow.MutableStateFlow)
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.InvalidationTracker$ObserverWrapper: int[] getTableIds$room_runtime_release()
kotlinx.coroutines.internal.AtomicOp: kotlinx.coroutines.internal.AtomicOp getAtomicOp()
kotlin.coroutines.AbstractCoroutineContextKey: boolean isSubKey$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Key)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
kotlinx.coroutines.JobSupport: java.lang.Throwable getExceptionOrNull(java.lang.Object)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
kotlinx.coroutines.AbstractCoroutine: java.lang.String nameString$kotlinx_coroutines_core()
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean isEmpty()
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String)
kotlinx.coroutines.DefaultExecutor: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
androidx.constraintlayout.helper.widget.Flow: void setPaddingRight(int)
com.google.android.material.button.MaterialButton: void setIconResource(int)
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: void onRemoved(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.MultiInstanceInvalidationClient$callback$1: void onInvalidation$lambda$0(androidx.room.MultiInstanceInvalidationClient,java.lang.String[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.SharedFlow shareIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,int)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.selects.SelectClause2 getOnSend()
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
kotlinx.coroutines.CancellableContinuationImpl: void multipleHandlersError(kotlin.jvm.functions.Function1,java.lang.Object)
kotlinx.coroutines.channels.ConflatedChannel: kotlinx.coroutines.internal.UndeliveredElementException updateValueLocked(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation$room_runtime_release()
kotlinx.coroutines.SupervisorJobImpl: boolean childCancelled(java.lang.Throwable)
androidx.room.QueryInterceptorStatement: void saveArgsToCache(int,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.TextInputLayout$LengthCounter getLengthCounter()
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: LockFreeLinkedListNode$AddLastDesc(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object trySendBlocking(kotlinx.coroutines.channels.SendChannel,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Throwable,kotlin.coroutines.Continuation)
androidx.room.util.TableInfo: TableInfo(java.lang.String,java.util.Map,java.util.Set)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.QueryInterceptorDatabase: void setMaxSqlCacheSize(int)
androidx.room.OnConflictStrategy$Companion: void getROLLBACK$annotations()
kotlinx.coroutines.JobSupport: void registerSelectClause0(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: java.lang.Object withState(long,kotlin.jvm.functions.Function2)
kotlinx.coroutines.CoroutineDispatcher: java.lang.String toString()
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1: FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: long simpleQueryForLong()
kotlinx.coroutines.JobNode: kotlinx.coroutines.NodeList getList()
androidx.appcompat.widget.AppCompatSpinner$Api23Impl: void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme)
kotlinx.coroutines.SupervisorCoroutine: boolean childCancelled(java.lang.Throwable)
kotlinx.coroutines.flow.SharedFlowImpl: void access$cancelEmitter(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowImpl$Emitter)
kotlinx.coroutines.channels.AbstractChannel: boolean cancel(java.lang.Throwable)
kotlinx.coroutines.flow.ChannelFlowBuilder: ChannelFlowBuilder(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder createFromFile(java.io.File)
kotlinx.coroutines.channels.RendezvousChannel: RendezvousChannel(kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharedFlowKt: kotlinx.coroutines.flow.Flow fuseSharedFlow(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.Deferred: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.JobKt: void cancelChildren(kotlinx.coroutines.Job,java.util.concurrent.CancellationException)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
androidx.room.RoomOpenHelper$Delegate: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.scheduling.DefaultIoScheduler: void close()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: FlowKt__ReduceKt$lastOrNull$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addLastIfPrevAndIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$1: FlowKt__ZipKt$combine$5$1(kotlinx.coroutines.flow.Flow[])
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode findPrevNonRemoved(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: java.lang.String toLanguageTag(java.util.Locale)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel takeWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.LockFreeLinkedListKt: void getLIST_EMPTY$annotations()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl: boolean addTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
kotlinx.coroutines.BlockingEventLoop: BlockingEventLoop(java.lang.Thread)
kotlinx.coroutines.InvokeOnCompletion: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.EventLoop: long processNextEvent()
kotlinx.coroutines.ChildHandle: kotlinx.coroutines.Job getParent()
kotlinx.coroutines.flow.SharedFlow: java.util.List getReplayCache()
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
androidx.room.util.TableInfo$Column$Companion: boolean containsSurroundingParenthesis(java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consumeEach$$forInline(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.room.TransactionElement: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isReadOnly$1: java.lang.Object invoke(java.lang.Object)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
kotlinx.coroutines.BlockingCoroutine: boolean isScopedCoroutine()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean moveToNext()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object getValue()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
kotlinx.coroutines.intrinsics.UndispatchedKt: java.lang.Object startUndispatchedOrReturnIgnoreTimeout(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.CompletableJob: boolean start()
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1: java.lang.Object invoke()
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.room.Relation: java.lang.String parentColumn()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void setHeap(kotlinx.coroutines.internal.ThreadSafeHeap)
kotlinx.coroutines.flow.SubscribedSharedFlow: java.util.List getReplayCache()
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.room.InvalidationTracker: void startTrackingTable(androidx.sqlite.db.SupportSQLiteDatabase,int)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineUnsafe$FlowKt__ZipKt(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
androidx.room.InvalidationTracker: void refreshVersionsSync()
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2: FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2(kotlin.jvm.functions.Function2,kotlin.jvm.internal.Ref$ObjectRef)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(int)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
kotlinx.coroutines.ChildHandleNode: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.CancellableFlowImpl: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineName: int hashCode()
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.UndispatchedCoroutine: void saveThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.google.android.material.chip.Chip: void setCheckableResource(int)
kotlinx.coroutines.internal.LockFreeLinkedListKt: void getCONDITION_FALSE$annotations()
androidx.constraintlayout.helper.widget.Flow: void setLastVerticalStyle(int)
kotlinx.coroutines.sync.SemaphoreSegment: java.lang.Object get(int)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object lastOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$1: void set(java.lang.Object,java.lang.Object)
com.google.android.material.button.MaterialButton: void setTextAlignment(int)
kotlin.jvm.internal.FunctionReference: boolean isExternal()
kotlin.jvm.internal.PropertyReference: boolean isConst()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1: java.lang.Object prepare(java.lang.Object)
kotlinx.coroutines.DisposeOnCancel: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__LimitKt: kotlinx.coroutines.flow.Flow transformWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.internal.ArrayQueue: void ensureCapacity()
androidx.room.ColumnInfo: java.lang.String defaultValue()
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,boolean)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel flatMap$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.room.RoomTrackingLiveData$observer$1: RoomTrackingLiveData$observer$1(java.lang.String[],androidx.room.RoomTrackingLiveData)
kotlinx.coroutines.JobSupport$ChildCompletion: JobSupport$ChildCompletion(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
kotlinx.coroutines.JobSupport: void addSuppressedExceptions(java.lang.Throwable,java.util.List)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateOrGetNextCopy(long)
kotlinx.coroutines.scheduling.WorkQueue: void offloadAllWorkTo(kotlinx.coroutines.scheduling.GlobalQueue)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StateFlowImpl: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel map(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
kotlinx.coroutines.SelectJoinOnCompletion: SelectJoinOnCompletion(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1$emit$1: FlowKt__TransformKt$withIndex$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharedFlowSlot: boolean allocateLocked(java.lang.Object)
kotlinx.coroutines.CoroutineContextKt: boolean hasCopyableElements(kotlin.coroutines.CoroutineContext)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrame$lambda-3$$inlined$Runnable$1: HandlerDispatcherKt$awaitFrame$lambda-3$$inlined$Runnable$1(kotlinx.coroutines.CancellableContinuation)
androidx.room.MultiInstanceInvalidationClient$serviceConnection$1: void onServiceDisconnected(android.content.ComponentName)
kotlinx.coroutines.ChildHandle: void dispose()
kotlinx.coroutines.channels.ArrayChannel: boolean isEmpty()
kotlinx.coroutines.CopyableThrowable: java.lang.Throwable createCopy()
kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName copy$default(kotlinx.coroutines.CoroutineName,java.lang.String,int,java.lang.Object)
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
androidx.room.InvalidationLiveDataContainer: androidx.lifecycle.LiveData create(java.lang.String[],boolean,java.util.concurrent.Callable)
kotlinx.coroutines.flow.StartedLazily$command$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__CollectKt: kotlinx.coroutines.Job launchIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)
kotlinx.coroutines.flow.internal.ChannelFlowKt: kotlinx.coroutines.flow.FlowCollector withUndispatchedContextCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)
androidx.room.MultiInstanceInvalidationService: MultiInstanceInvalidationService()
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object poll()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.room.RoomDatabase: boolean inTransaction()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView: int getScrollRange()
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
kotlinx.coroutines.NonDisposableHandle: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.MultiInstanceInvalidationClient$1: MultiInstanceInvalidationClient$1(androidx.room.MultiInstanceInvalidationClient,java.lang.String[])
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.chip.Chip: void setMaxLines(int)
kotlinx.coroutines.InvokeOnCancel: InvokeOnCancel(kotlin.jvm.functions.Function1)
kotlinx.coroutines.DeferredCoroutine: DeferredCoroutine(kotlin.coroutines.CoroutineContext,boolean)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobKt__FutureKt: void cancelFutureOnCancellation(kotlinx.coroutines.CancellableContinuation,java.util.concurrent.Future)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow take(kotlinx.coroutines.flow.Flow,int)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel zip(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow mapLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1: FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1(kotlin.jvm.functions.Function3)
kotlinx.coroutines.Job: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
kotlinx.coroutines.SupervisorKt: java.lang.Object supervisorScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$1: java.lang.Object[] invoke()
androidx.room.MultiInstanceInvalidationClient: androidx.room.IMultiInstanceInvalidationService getService()
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: ChannelsKt__DeprecatedKt$toCollection$1(kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
com.google.android.material.checkbox.MaterialCheckBox: void setCenterIfNoTextEnabled(boolean)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toCollection(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.coroutines.Continuation)
androidx.room.AmbiguousColumnResolver$resolve$4: void invoke(java.util.List)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: long executeInsert()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: ChannelsKt__DeprecatedKt$requireNoNulls$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: void setHint(int)
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: void remove()
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow debounce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.StartedLazily$command$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.room.QueryInterceptorOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.room.paging.LimitOffsetDataSource: void registerObserverIfNecessary()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void setMaxSqlCacheSize(int)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p()
kotlinx.coroutines.selects.SelectBuilderImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.internal.ArrayQueue: java.lang.Object removeFirstOrNull()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void setNextParkedWorker(java.lang.Object)
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.room.InvalidationTracker: void setAutoCloser$room_runtime_release(androidx.room.AutoCloser)
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlin.jvm.functions.Function1 access$createConstructor(java.lang.Class)
kotlinx.coroutines.JobKt__JobKt: java.lang.Object cancelAndJoin(kotlinx.coroutines.Job,kotlin.coroutines.Continuation)
androidx.room.QueryInterceptorStatement: void execute$lambda$0(androidx.room.QueryInterceptorStatement)
kotlinx.coroutines.channels.ConflatedChannel: boolean isEmpty()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
androidx.room.RoomOpenHelper$Delegate: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.flow.SharedFlowImpl: long tryPeekLocked(kotlinx.coroutines.flow.SharedFlowSlot)
androidx.room.DatabaseConfiguration: boolean isMigrationRequired(int,int)
androidx.room.RoomDatabase$Callback: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.internal.DispatchedContinuationKt: boolean executeUnconfined$default(kotlinx.coroutines.internal.DispatchedContinuation,java.lang.Object,int,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: FlowKt__MigrationKt$delayEach$1(long,kotlin.coroutines.Continuation)
kotlin.time.DurationUnit: kotlin.time.DurationUnit valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1: ChannelsKt__DeprecatedKt$zip$1()
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder setMultiInstanceInvalidationServiceIntent(android.content.Intent)
kotlinx.coroutines.ResumeOnCompletion: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.StateFlowSlot: kotlin.coroutines.Continuation[] freeLocked(java.lang.Object)
kotlinx.coroutines.JobCancellationException: kotlinx.coroutines.JobCancellationException createCopy()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow filterNot(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.internal.InlineList: InlineList(java.lang.Object)
androidx.room.QueryInterceptorStatement: void bindBlob(int,byte[])
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
kotlinx.coroutines.CancellableContinuationImpl: void resumeUndispatchedWithException(kotlinx.coroutines.CoroutineDispatcher,java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object singleOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: java.lang.String access$getSql$p(androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement)
androidx.room.DatabaseConfiguration: DatabaseConfiguration(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean,boolean,java.util.Set,java.lang.String,java.io.File,java.util.concurrent.Callable,androidx.room.RoomDatabase$PrepackagedDatabaseCallback)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getPrevNode()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode firstChild(kotlinx.coroutines.Incomplete)
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: CoroutinesRoom$Companion$createFlow$1$1$1(androidx.room.RoomDatabase,androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1,kotlinx.coroutines.channels.Channel,java.util.concurrent.Callable,kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation)
androidx.room.InvalidationTracker: androidx.lifecycle.LiveData createLiveData(java.lang.String[],boolean,java.util.concurrent.Callable)
androidx.room.SQLiteCopyOpenHelper: void dispatchOnOpenPrepackagedDatabase(java.io.File,boolean)
com.google.android.material.button.MaterialButton: void setInsetTop(int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow)
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
androidx.room.MultiInstanceInvalidationService: int getMaxClientId$room_runtime_release()
kotlinx.coroutines.channels.AbstractChannel: boolean isClosedForReceive()
kotlinx.coroutines.ThreadContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: SafeCollector_commonKt$checkContext$result$1(kotlinx.coroutines.flow.internal.SafeCollector)
kotlinx.coroutines.CompletableJob: void cancel()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexedNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
kotlinx.coroutines.EventLoop_commonKt: void getCLOSED_EMPTY$annotations()
kotlinx.coroutines.flow.StateFlowImpl: boolean tryEmit(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.AbstractChannel$TryPollDesc: AbstractChannel$TryPollDesc(kotlinx.coroutines.internal.LockFreeLinkedListHead)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.internal.InlineList: java.lang.Object constructor-impl(java.lang.Object)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.UndispatchedContextCollector: UndispatchedContextCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobSupport: boolean start()
kotlinx.coroutines.channels.SendChannel: boolean close(java.lang.Throwable)
kotlinx.coroutines.AbstractTimeSource: long nanoTime()
androidx.room.AmbiguousColumnResolver: void rabinKarpSearch(java.util.List,java.lang.String[],kotlin.jvm.functions.Function3)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1()
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$1: FlowKt__LimitKt$collectWhile$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: kotlinx.coroutines.internal.ThreadSafeHeap getHeap()
androidx.constraintlayout.helper.widget.Flow: void setVerticalBias(float)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
kotlinx.coroutines.DeferredCoroutine: java.lang.Object getCompleted()
kotlinx.coroutines.Dispatchers: void getDefault$annotations()
androidx.room.AmbiguousColumnResolver$Solution: int getCoverageOffset()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow subscribeOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
kotlinx.coroutines.flow.internal.NullSurrogateKt: void getUNINITIALIZED$annotations()
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.CompletedWithCancellation: CompletedWithCancellation(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.SelectJoinOnCompletion: void invoke(java.lang.Throwable)
androidx.room.RoomOpenHelper$Delegate: RoomOpenHelper$Delegate(int)
kotlinx.coroutines.CancellableContinuationImpl: CancellableContinuationImpl(kotlin.coroutines.Continuation,int)
kotlinx.coroutines.JobSupportKt: java.lang.Object boxIncomplete(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode()
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1: FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: void dispose()
kotlinx.coroutines.flow.FlowKt: java.lang.Object firstOrNull(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.sync.SemaphoreSegment: int getMaxSlots()
kotlinx.coroutines.JobKt__JobKt: boolean cancel$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object poll()
kotlinx.coroutines.flow.SharedFlowKt: void setBufferAt(java.lang.Object[],long,java.lang.Object)
kotlinx.coroutines.internal.ThreadSafeHeap: void addImpl(kotlinx.coroutines.internal.ThreadSafeHeapNode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
kotlinx.coroutines.Deferred: java.lang.Throwable getCompletionExceptionOrNull()
androidx.room.util.DBUtil: void dropFtsSyncTriggers(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.scheduling.TaskContext: int getTaskMode()
kotlinx.coroutines.scheduling.NanoTimeSource: long nanoTime()
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: kotlinx.coroutines.ExecutorCoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexedNotNull$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
kotlinx.coroutines.ThreadContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.room.RoomDatabase$Callback: void onDestructiveMigration(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
kotlinx.coroutines.internal.AtomicOp: java.lang.Object perform(java.lang.Object)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
kotlinx.coroutines.EventLoop: boolean shouldBeProcessedFromContext()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow runningReduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.internal.LockFreeTaskQueue: LockFreeTaskQueue(boolean)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
androidx.constraintlayout.helper.widget.Flow: void setVerticalGap(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: boolean cancelLater(java.lang.Throwable)
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
androidx.room.QueryInterceptorDatabase: android.database.Cursor query(java.lang.String,java.lang.Object[])
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
androidx.room.RoomDatabase: boolean isMainThread$room_runtime_release()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.String toString()
androidx.room.CoroutinesRoom: CoroutinesRoom()
kotlinx.coroutines.selects.SelectBuilderImpl: SelectBuilderImpl(kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.flow.FlowKt__CollectionKt: java.lang.Object toList(kotlinx.coroutines.flow.Flow,java.util.List,kotlin.coroutines.Continuation)
androidx.room.QueryInterceptorOpenHelperFactory: QueryInterceptorOpenHelperFactory(androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,java.util.concurrent.Executor,androidx.room.RoomDatabase$QueryCallback)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
kotlinx.coroutines.internal.LimitedDispatcher: boolean tryAllocateWorker()
kotlinx.coroutines.internal.LockFreeTaskQueue: boolean isEmpty()
androidx.constraintlayout.helper.widget.Flow: void setMaxElementsWrap(int)
androidx.room.RoomOpenHelper: RoomOpenHelper(androidx.room.DatabaseConfiguration,androidx.room.RoomOpenHelper$Delegate,java.lang.String,java.lang.String)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler: int blockingTasks(long)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: LockFreeLinkedListNode$RemoveFirstDesc(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.ExecutorsKt: void CloseableCoroutineDispatcher$annotations()
kotlinx.coroutines.JobKt__JobKt: void cancelChildren$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: java.lang.Object collectLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.SelectAwaitOnCompletion: void invoke(java.lang.Throwable)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(java.lang.String[])
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void setExtras(android.os.Bundle)
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: OnUndeliveredElementKt$bindCancellationFun$1(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler createScheduler()
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.room.InvalidationTracker: void syncTriggers$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.CoroutineStart: void isLazy$annotations()
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: StartedWhileSubscribed$command$1(kotlinx.coroutines.flow.StartedWhileSubscribed,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobKt: void cancelChildren(kotlinx.coroutines.Job,java.lang.Throwable)
kotlinx.coroutines.CompletableJob: java.lang.Object join(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp: void finishPrepare()
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.QueryInterceptorStatement: void bindLong(int,long)
androidx.room.InvalidationTracker: void startMultiInstanceInvalidation$room_runtime_release(android.content.Context,java.lang.String,android.content.Intent)
kotlinx.coroutines.flow.EmptyFlow: EmptyFlow()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.room.AmbiguousColumnResolver$resolve$1$1: AmbiguousColumnResolver$resolve$1$1(java.lang.String[],java.util.List,int)
kotlinx.coroutines.Empty: boolean isActive()
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1: FlowKt__CollectionKt$toCollection$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.JobNode: void dispose()
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
androidx.room.QueryInterceptorDatabase: void query$lambda$8(androidx.room.QueryInterceptorDatabase,androidx.sqlite.db.SupportSQLiteQuery,androidx.room.QueryInterceptorProgram)
kotlinx.coroutines.flow.StartedWhileSubscribed: java.lang.String toString()
androidx.room.AutoCloser: void autoCloser$lambda$3(androidx.room.AutoCloser)
kotlinx.coroutines.flow.ReadonlySharedFlow: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.room.SQLiteCopyOpenHelper: void setWriteAheadLoggingEnabled(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void execSQL(java.lang.String)
kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: java.lang.Object getPollResult()
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.room.InvalidationTracker$Observer: InvalidationTracker$Observer(java.lang.String,java.lang.String[])
androidx.room.RoomTrackingLiveData: androidx.room.RoomDatabase getDatabase()
kotlinx.coroutines.selects.SelectBuilderImpl$onTimeout$$inlined$Runnable$1: SelectBuilderImpl$onTimeout$$inlined$Runnable$1(kotlinx.coroutines.selects.SelectBuilderImpl,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.Active: java.lang.String toString()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1()
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
androidx.core.os.TraceCompat$Api18Impl: void endSection()
kotlinx.coroutines.InvokeOnCompletion: InvokeOnCompletion(kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.AbstractChannel: boolean getHasReceiveOrClosed()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void access$doBinds(androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement,androidx.sqlite.db.SupportSQLiteStatement)
kotlinx.coroutines.flow.ReadonlyStateFlow: ReadonlyStateFlow(kotlinx.coroutines.flow.StateFlow,kotlinx.coroutines.Job)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: FlowKt__ZipKt$combine$6$2(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext$Key getKey()
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__CollectionKt: java.lang.Object toList$default(kotlinx.coroutines.flow.Flow,java.util.List,kotlin.coroutines.Continuation,int,java.lang.Object)
androidx.room.AmbiguousColumnResolver$Solution: int compareTo(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1: FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2: ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2(java.lang.reflect.Constructor)
kotlinx.coroutines.scheduling.CoroutineScheduler: int availableCpuPermits(long)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
kotlinx.coroutines.channels.Channel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveCatching()
kotlinx.coroutines.CoroutineName: boolean equals(java.lang.Object)
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: FlowKt__ReduceKt$last$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: java.lang.Object first(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KProperty1$Getter getGetter()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
kotlinx.coroutines.channels.Send: java.lang.Object getPollResult()
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
kotlinx.coroutines.DispatchedTask: java.lang.Object takeState$kotlinx_coroutines_core()
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobSupport$Finishing: void setCompleting(boolean)
kotlinx.coroutines.CoroutineExceptionHandler: kotlin.coroutines.CoroutineContext$Key getKey()
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: int systemProp(java.lang.String,int,int,int)
androidx.room.InvalidationTracker$Observer: java.lang.String[] getTables$room_runtime_release()
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.String getQueueDebugStateString()
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1: FlowKt__LimitKt$dropWhile$1$1(kotlin.jvm.internal.Ref$BooleanRef,kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: FlowKt__ChannelsKt$emitAllImpl$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ClosedSendChannelException: ClosedSendChannelException(java.lang.String)
kotlinx.coroutines.internal.AtomicOp: java.lang.Object getConsensus()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object singleOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel take$default(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
kotlinx.coroutines.channels.SendChannel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectBuilder: void onTimeout(long,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.AtomicDesc: AtomicDesc()
kotlinx.coroutines.android.HandlerDispatcherKt: android.os.Handler asHandler(android.os.Looper,boolean)
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object receive(kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consumeEach(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
kotlinx.coroutines.DefaultExecutor: void acknowledgeShutdownIfNeeded()
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy: android.os.IBinder asBinder()
androidx.room.CoroutinesRoom$Companion$execute$4$job$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.AutoCloser: void setLastDecrementRefCountTimeStamp$room_runtime_release(long)
kotlinx.coroutines.channels.ArrayChannel: java.lang.String getBufferDebugString()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void tryPark()
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean isOpen()
kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc: java.lang.Object onPrepare(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
androidx.room.RoomOpenHelper$Companion: RoomOpenHelper$Companion()
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
kotlinx.coroutines.InactiveNodeList: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object minWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.SendChannel$DefaultImpls: boolean offer(kotlinx.coroutines.channels.SendChannel,java.lang.Object)
kotlinx.coroutines.android.HandlerDispatcherKt: java.lang.Object awaitFrame(kotlin.coroutines.Continuation)
androidx.room.CoroutinesRoom$Companion$execute$4$1: java.lang.Object invoke(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
kotlinx.coroutines.DebugKt: boolean getRECOVER_STACK_TRACES()
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.util.concurrent.ScheduledFuture scheduleBlock(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable,kotlin.coroutines.CoroutineContext,long)
kotlinx.coroutines.flow.internal.AbortFlowException: java.lang.Throwable fillInStackTrace()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: void resumeUndispatched(kotlinx.coroutines.CoroutineDispatcher,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlin.jvm.functions.Function0 nullArrayFactory$FlowKt__ZipKt()
androidx.room.migration.MigrationImpl: MigrationImpl(int,int,kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
kotlinx.coroutines.flow.internal.NullSurrogateKt: void getNULL$annotations()
kotlinx.coroutines.DispatchedTaskKt: void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int compareTo(java.lang.Object)
androidx.room.SQLiteCopyOpenHelperFactory: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
kotlinx.coroutines.flow.SharedFlowImpl: java.util.List getReplayCache()
kotlinx.coroutines.selects.SelectBuilder$DefaultImpls: void invoke(kotlinx.coroutines.selects.SelectBuilder,kotlinx.coroutines.selects.SelectClause2,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.AbstractChannel: boolean isEmptyImpl()
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot: kotlin.coroutines.Continuation[] freeLocked(java.lang.Object)
androidx.room.TransactionElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.CompletableDeferred: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: FlowKt__ReduceKt$first$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletedExceptionally: CompletedExceptionally(java.lang.Throwable,boolean)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow transformLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonDrawable()
androidx.appcompat.widget.SearchView: void setImeOptions(int)
kotlinx.coroutines.JobSupport: boolean getOnCancelComplete$kotlinx_coroutines_core()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toSet(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.AtomicDesc: void setAtomicOp(kotlinx.coroutines.internal.AtomicOp)
kotlinx.coroutines.channels.AbstractChannel: void onReceiveEnqueued()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onEach(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.room.RoomSQLiteQuery: void bindTo(androidx.sqlite.db.SupportSQLiteProgram)
kotlinx.coroutines.channels.LinkedListChannel: boolean isBufferAlwaysEmpty()
kotlinx.coroutines.DispatchedTask: java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object)
androidx.room.paging.LimitOffsetDataSource: LimitOffsetDataSource(androidx.room.RoomDatabase,androidx.room.RoomSQLiteQuery,boolean,java.lang.String[])
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.room.FtsOptions: FtsOptions()
androidx.room.util.FtsTableInfo$Companion: androidx.room.util.FtsTableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
androidx.room.QueryInterceptorDatabase: void beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)
kotlinx.coroutines.channels.Channel: boolean isClosedForReceive()
kotlinx.coroutines.internal.ThreadLocalElement: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlinx.coroutines.CancellableContinuationKt: java.lang.Object suspendCancellableCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()
kotlinx.coroutines.Deferred: boolean start()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.flow.FlowKt__ErrorsKt: boolean isCancellationCause$FlowKt__ErrorsKt(java.lang.Throwable,kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
androidx.room.AmbiguousColumnResolver$ResultColumn: java.lang.String getName()
androidx.room.TransactionExecutor: void execute(java.lang.Runnable)
kotlinx.coroutines.channels.RendezvousChannel: boolean isBufferEmpty()
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted getLazily()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
kotlinx.coroutines.flow.SharedFlowImpl: boolean tryEmit(java.lang.Object)
kotlinx.coroutines.flow.internal.FlowExceptions_commonKt: void checkOwnership(kotlinx.coroutines.flow.internal.AbortFlowException,kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.flow.StateFlowKt: java.lang.Object getAndUpdate(kotlinx.coroutines.flow.MutableStateFlow,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
kotlinx.coroutines.internal.InlineList: void forEachReversed-impl(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
kotlinx.coroutines.flow.internal.ChildCancelledException: java.lang.Throwable fillInStackTrace()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
kotlinx.coroutines.JobCancellationException: java.lang.Throwable createCopy()
kotlinx.coroutines.channels.Channel: void invokeOnClose(kotlin.jvm.functions.Function1)
androidx.room.Index$Order: androidx.room.Index$Order[] $values()
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1: FlowKt__CollectKt$collectIndexed$2$emit$1(kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ThreadSafeHeap: void siftUpFrom(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consume(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.CancelSemaphoreAcquisitionHandler: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.JobKt: void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findAnyTask(boolean)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.sync.SemaphoreSegment createSegment(long,kotlinx.coroutines.sync.SemaphoreSegment)
androidx.room.InvalidationTracker: androidx.sqlite.db.SupportSQLiteStatement getCleanupStatement$room_runtime_release()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
kotlinx.coroutines.channels.ProduceKt$awaitClose$2: void invoke()
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
kotlinx.coroutines.scheduling.CoroutineScheduler: void execute(java.lang.Runnable)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1: FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.SendChannel: boolean offer(java.lang.Object)
kotlinx.coroutines.AbstractTimeSourceKt: void unpark(java.lang.Thread)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: FlowKt__DelayKt$sample$2(long,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
androidx.room.InvalidationTracker: void refreshVersionsAsync()
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlin.jvm.functions.Function1 resumeOnCancellationFun(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6(java.lang.Object[])
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flatMapConcat(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.AbstractTimeSourceKt: void trackTask()
kotlinx.coroutines.channels.ProducerCoroutine: kotlinx.coroutines.channels.SendChannel getChannel()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.Job launchIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task pollBuffer()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.JobKt: kotlinx.coroutines.Job getJob(kotlin.coroutines.CoroutineContext)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateOutlinedDropDownMenuBackground()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
kotlinx.coroutines.flow.CancellableFlowImpl: CancellableFlowImpl(kotlinx.coroutines.flow.Flow)
